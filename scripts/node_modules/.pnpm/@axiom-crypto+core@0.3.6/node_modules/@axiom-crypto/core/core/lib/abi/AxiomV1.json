{
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "AxiomBlockVerificationFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "BlockHashIncorrect",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ContractIsFrozen",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "MerkleProofFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotProverRole",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotRecentEndBlock",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "SNARKVerificationFailed",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "StartingBlockNotMultipleOfBatchSize",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "UpdatingIncorrectNumberOfBlocks",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "previousAdmin",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newAdmin",
                    "type": "address"
                }
            ],
            "name": "AdminChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "beacon",
                    "type": "address"
                }
            ],
            "name": "BeaconUpgraded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "FreezeAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint8",
                    "name": "version",
                    "type": "uint8"
                }
            ],
            "name": "Initialized",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint32",
                    "name": "len",
                    "type": "uint32"
                },
                {
                    "indexed": false,
                    "internalType": "uint32",
                    "name": "index",
                    "type": "uint32"
                }
            ],
            "name": "MerkleMountainRangeEvent",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "previousAdminRole",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "newAdminRole",
                    "type": "bytes32"
                }
            ],
            "name": "RoleAdminChanged",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleGranted",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "RoleRevoked",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [],
            "name": "UnfreezeAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint32",
                    "name": "startBlockNumber",
                    "type": "uint32"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "prevHash",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "root",
                    "type": "bytes32"
                },
                {
                    "indexed": false,
                    "internalType": "uint32",
                    "name": "numFinal",
                    "type": "uint32"
                }
            ],
            "name": "UpdateEvent",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newAddress",
                    "type": "address"
                }
            ],
            "name": "UpgradeHistoricalSnarkVerifier",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address",
                    "name": "newAddress",
                    "type": "address"
                }
            ],
            "name": "UpgradeSnarkVerifier",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address"
                }
            ],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "DEFAULT_ADMIN_ROLE",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "GUARDIAN_ROLE",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "PROVER_ROLE",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "TIMELOCK_ROLE",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint32",
                    "name": "startBlockNumber",
                    "type": "uint32"
                },
                {
                    "internalType": "bytes32[]",
                    "name": "roots",
                    "type": "bytes32[]"
                },
                {
                    "internalType": "bytes32[]",
                    "name": "prevHashes",
                    "type": "bytes32[]"
                }
            ],
            "name": "appendHistoricalMMR",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "freezeAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "frozen",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                }
            ],
            "name": "getRoleAdmin",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "grantRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "hasRole",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "historicalMMR",
            "outputs": [
                {
                    "internalType": "uint32",
                    "name": "numPeaks",
                    "type": "uint32"
                },
                {
                    "internalType": "uint32",
                    "name": "len",
                    "type": "uint32"
                },
                {
                    "internalType": "uint32",
                    "name": "index",
                    "type": "uint32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint32",
                    "name": "i",
                    "type": "uint32"
                }
            ],
            "name": "historicalMMRPeaks",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint32",
                    "name": "",
                    "type": "uint32"
                }
            ],
            "name": "historicalRoots",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "historicalVerifierAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_verifierAddress",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_historicalVerifierAddress",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "timelock",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "guardian",
                    "type": "address"
                }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "components": [
                        {
                            "internalType": "uint32",
                            "name": "blockNumber",
                            "type": "uint32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "claimedBlockHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "prevHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "numFinal",
                            "type": "uint32"
                        },
                        {
                            "internalType": "bytes32[10]",
                            "name": "merkleProof",
                            "type": "bytes32[10]"
                        }
                    ],
                    "internalType": "struct IAxiomV1Verifier.BlockHashWitness",
                    "name": "witness",
                    "type": "tuple"
                }
            ],
            "name": "isBlockHashValid",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint32",
                    "name": "blockNumber",
                    "type": "uint32"
                },
                {
                    "internalType": "bytes32",
                    "name": "claimedBlockHash",
                    "type": "bytes32"
                }
            ],
            "name": "isRecentBlockHashValid",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "mmrRingBuffer",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32[]",
                    "name": "mmr",
                    "type": "bytes32[]"
                },
                {
                    "internalType": "uint8",
                    "name": "bufferId",
                    "type": "uint8"
                },
                {
                    "internalType": "uint32",
                    "name": "blockNumber",
                    "type": "uint32"
                },
                {
                    "internalType": "bytes32",
                    "name": "claimedBlockHash",
                    "type": "bytes32"
                },
                {
                    "internalType": "bytes32[]",
                    "name": "merkleProof",
                    "type": "bytes32[]"
                }
            ],
            "name": "mmrVerifyBlockHash",
            "outputs": [],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "proxiableUUID",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "renounceRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "role",
                    "type": "bytes32"
                },
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "revokeRole",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "unfreezeAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "nextRoot",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint32",
                    "name": "nextNumFinal",
                    "type": "uint32"
                },
                {
                    "internalType": "bytes32[128]",
                    "name": "roots",
                    "type": "bytes32[128]"
                },
                {
                    "internalType": "bytes32[11][127]",
                    "name": "endHashProofs",
                    "type": "bytes32[11][127]"
                },
                {
                    "internalType": "bytes",
                    "name": "proofData",
                    "type": "bytes"
                }
            ],
            "name": "updateHistorical",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "nextRoot",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint32",
                    "name": "nextNumFinal",
                    "type": "uint32"
                },
                {
                    "internalType": "bytes",
                    "name": "proofData",
                    "type": "bytes"
                }
            ],
            "name": "updateOld",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes",
                    "name": "proofData",
                    "type": "bytes"
                }
            ],
            "name": "updateRecent",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_historicalVerifierAddress",
                    "type": "address"
                }
            ],
            "name": "upgradeHistoricalSnarkVerifier",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_verifierAddress",
                    "type": "address"
                }
            ],
            "name": "upgradeSnarkVerifier",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newImplementation",
                    "type": "address"
                }
            ],
            "name": "upgradeTo",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newImplementation",
                    "type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "upgradeToAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "verifierAddress",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "bytecode": {
        "object": "0x60a0604052306080523480156200001557600080fd5b506200002062000026565b62000164565b600054610100900460ff161562000074576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200006b90620000ec565b60405180910390fd5b60005460ff9081161015620000ea57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660ff9081179091556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249891620000e19162000154565b60405180910390a15b565b602080825281016200014e81602781527f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960208201527f616c697a696e6700000000000000000000000000000000000000000000000000604082015260600190565b92915050565b60ff82168152602081016200014e565b608051614e366200019c600039600081816111c20152818161121c0152818161131b0152818161137501526114640152614e366000f3fe6080604052600436106101e35760003560e01c80636f193b8311610102578063c1f7cae211610095578063ef4fcb1711610064578063ef4fcb1714610608578063f288a2e214610628578063f8c8765e1461065c578063fe9ccb601461067c57600080fd5b8063c1f7cae214610567578063c6ca475314610587578063d547741f146105b4578063dc9a4ef6146105d457600080fd5b806391d14854116100d157806391d14854146104ca57806399464c891461051d578063a217fddf14610532578063ac59e61c1461054757600080fd5b80636f193b831461044a5780637225fb211461046a578063853ead4a1461048a57806389ea365d146104aa57600080fd5b8063282bf5c91161017a5780634f1ef286116101495780634f1ef286146103c5578063529ad9f3146103d857806352d1902d1461042057806366c5c4a01461043557600080fd5b8063282bf5c9146103455780632f2ff15d1461036557806336568abe146103855780633659cfe6146103a557600080fd5b806311b63d01116101b657806311b63d011461028757806318bdffbb146102a7578063248a9ca3146102e157806324ea54f41461031157600080fd5b806301ef3afa146101e857806301ffc9a71461020a578063054f7d9c14610240578063074144d61461025a575b600080fd5b3480156101f457600080fd5b50610208610203366004613bc9565b6106a9565b005b34801561021657600080fd5b5061022a610225366004613c4b565b610b7e565b6040516102379190613c7e565b60405180910390f35b34801561024c57600080fd5b5060975461022a9060ff1681565b34801561026657600080fd5b5061027a610275366004613c9d565b610bb9565b6040516102379190613cc4565b34801561029357600080fd5b506102086102a2366004613ce9565b610bd0565b3480156102b357600080fd5b5060c0546102d49073ffffffffffffffffffffffffffffffffffffffff1681565b6040516102379190613d7e565b3480156102ed57600080fd5b5061027a6102fc366004613c9d565b60009081526065602052604090206001015490565b34801561031d57600080fd5b5061027a7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504181565b34801561035157600080fd5b50610208610360366004613dd7565b610ed1565b34801561037157600080fd5b50610208610380366004613e7b565b61111b565b34801561039157600080fd5b506102086103a0366004613e7b565b611145565b3480156103b157600080fd5b506102086103c0366004613eb8565b6111ab565b6102086103d3366004614024565b611304565b3480156103e457600080fd5b5060e3546104119063ffffffff808216916401000000008104821691680100000000000000009091041683565b6040516102379392919061407e565b34801561042c57600080fd5b5061027a61144a565b34801561044157600080fd5b506102086114e0565b34801561045657600080fd5b5061022a6104653660046140bc565b61155e565b34801561047657600080fd5b50610208610485366004614108565b6116dd565b34801561049657600080fd5b506102086104a5366004613eb8565b611c11565b3480156104b657600080fd5b506102086104c53660046141b5565b611cb7565b3480156104d657600080fd5b5061022a6104e5366004613e7b565b600091825260656020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b34801561052957600080fd5b50610208611ed0565b34801561053e57600080fd5b5061027a600081565b34801561055357600080fd5b50610208610562366004613eb8565b611f51565b34801561057357600080fd5b5061022a61058236600461426b565b611feb565b34801561059357600080fd5b5061027a6105a236600461429e565b60c26020526000908152604090205481565b3480156105c057600080fd5b506102086105cf366004613e7b565b61200a565b3480156105e057600080fd5b5061027a7f60044782a422109ac08a415e44260ad5d3bad63d96ebe1fac0363399642ee3f281565b34801561061457600080fd5b5061027a61062336600461429e565b61202f565b34801561063457600080fd5b5061027a7ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f0581565b34801561066857600080fd5b506102086106773660046142bf565b612052565b34801561068857600080fd5b5060c1546102d49073ffffffffffffffffffffffffffffffffffffffff1681565b600080527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d499021856020527fdf4fae2a9d03ddefae2c9e431bd1ae49d400972b66abd41187abff73623b3c4b5460ff1615801561073257503360009081527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d49902185602052604090205460ff16155b15610769576040517f6692e47700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107716121f8565b60008060008060006107838787612237565b945094509450945094506000838361079b9190614352565b6107a6906001614372565b905061040063ffffffff821611156107ea576040517f0a004fe500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107f6610400856143c1565b63ffffffff1615610833576040517f7478cfa900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b438363ffffffff1610610872576040517faef3422900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61010061088563ffffffff8516436143df565b11156108bd576040517faef3422900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848363ffffffff1640146108fd576040517fa46ad57500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109078888612334565b61093d576040517f1355d9a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816109fc5760005b600a8110156109f65760006109778a8a846109626001600a614352565b63ffffffff1661097291906143df565b6123b2565b905080156109af5780846040516020016109929291906143f2565b6040516020818303038152906040528051906020012093506109e3565b836109b983612472565b6040516020016109ca9291906143f2565b6040516020818303038152906040528051906020012093505b50806109ee81614418565b915050610945565b50610ad9565b60e354623fffff600a86901c1664010000000090910463ffffffff1603610ad9576000610a2960c3612662565b90506000610a37828561270b565b9050600882606001516001610a4c9190614372565b610a5691906143c1565b63ffffffff166060830152610a6a8261282a565b60e4836060015163ffffffff1660088110610a8757610a87614450565b0155610a9560c3838361291a565b7f39145329d5ae3858c6f1192667af1d01792c69c7f88d143b0312872011e5cbcb82604001518360600151604051610ace92919061447f565b60405180910390a150505b858282604051602001610aee939291906144b5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012063ffffffff8816600090815260c2909252919020557f8b1606624b2f737eaf245dca9fba97deb930da8f4c71fb05a3f1b77d6bb8dfeb90610b6c9086908990869086906144ec565b60405180910390a15050505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082161580610bb35750610bb382612a0b565b92915050565b60e48160088110610bc957600080fd5b0154905081565b600080527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d499021856020527fdf4fae2a9d03ddefae2c9e431bd1ae49d400972b66abd41187abff73623b3c4b5460ff16158015610c5957503360009081527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d49902185602052604090205460ff16155b15610c90576040517f6692e47700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c986121f8565b6000806000806000610caa8787612237565b9450945094509450945061040083610cc291906143c1565b63ffffffff1615610cff576040517f7478cfa900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d0c6001610400614352565b63ffffffff16610d1c8484614352565b63ffffffff1614610d59576040517f0a004fe500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838989604051602001610d6e939291906144b5565b6040516020818303038152906040528051906020012060c26000846001610d959190614372565b63ffffffff1663ffffffff1681526020019081526020016000205414610de7576040517fa46ad57500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610df18787612334565b610e27576040517f1355d9a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8481610400604051602001610e3e939291906144b5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012063ffffffff8716600090815260c2909252919020557f8b1606624b2f737eaf245dca9fba97deb930da8f4c71fb05a3f1b77d6bb8dfeb90610ebe90859088908590610400906144ec565b60405180910390a1505050505050505050565b610ed96121f8565b6000839003610ee757600080fd5b828114610ef357600080fd5b60e354610f119061040090640100000000900463ffffffff16614521565b63ffffffff168563ffffffff1614610f2857600080fd5b6000610f3460c3612662565b905060005b84811015611031576000848483818110610f5557610f55614450565b90506020020135878784818110610f6e57610f6e614450565b90506020020135610400604051602001610f8a939291906144b5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152815160209283012063ffffffff8b16600090815260c2909352912054909150811461100f576040517f612489a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61101b61040089614372565b975050808061102990614418565b915050610f39565b5060006110738686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508693925050612aa29050565b90506008826060015160016110889190614372565b61109291906143c1565b63ffffffff1660608301526110a68261282a565b60e4836060015163ffffffff16600881106110c3576110c3614450565b01556110d160c3838361291a565b7f39145329d5ae3858c6f1192667af1d01792c69c7f88d143b0312872011e5cbcb8260400151836060015160405161110a92919061447f565b60405180910390a150505050505050565b60008281526065602052604090206001015461113681612d5a565b6111408383612d64565b505050565b73ffffffffffffffffffffffffffffffffffffffff8116331461119d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611194906145a8565b60405180910390fd5b6111a78282612e58565b5050565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361121a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614612565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661128f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146112dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111949061467c565b6112e581612f13565b6040805160008082526020820190925261130191839190612f3d565b50565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003611373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614612565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113e87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614611435576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111949061467c565b61143e82612f13565b6111a782826001612f3d565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146114bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611194906146e6565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504161150a81612d5a565b609780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556040517fe6fdbf73945dd61794a752b9181ea29f77170a7b1ffd37e0a7ff9d2c6f7258b990600090a150565b60006020820135810361157057600080fd5b6000610400611582602085018561429e565b61158c91906143c1565b905060008161159e602086018661429e565b6115a89190614352565b63ffffffff8116600090815260c260205260408120549192508190036115cd57600080fd5b602085013560005b600a81101561169157600163ffffffff8616821c1660000361163a57818760800182600a811061160757611607614450565b602002013560405160200161161d9291906143f2565b60405160208183030381529060405280519060200120915061167f565b8660800181600a811061164f5761164f614450565b6020020135826040516020016116669291906143f2565b6040516020818303038152906040528051906020012091505b8061168981614418565b9150506115d5565b506040860135816116a86080890160608a0161429e565b6040516020016116ba939291906144b5565b604051602081830303815290604052805190602001208214945050505050919050565b600080527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d499021856020527fdf4fae2a9d03ddefae2c9e431bd1ae49d400972b66abd41187abff73623b3c4b5460ff1615801561176657503360009081527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d49902185602052604090205460ff16155b1561179d576040517f6692e47700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117a56121f8565b60008060008060006117b78787612237565b94509450945094509450610400836117cf91906143c1565b63ffffffff161561180c576040517f7478cfa900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61181a600162020000614352565b63ffffffff1661182a8484614352565b63ffffffff1614611867576040517f0a004fe500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838b8b60405160200161187c939291906144b5565b6040516020818303038152906040528051906020012060c260008460016118a39190614372565b63ffffffff1663ffffffff16815260200190815260200160002054146118f5576040517fa46ad57500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806119288a6080806020026040519081016040528092919082608060200280828437600092019190915250613090915050565b1461195f576040517ff4c360f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611969878761327d565b61199f576040517f1355d9a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6080811015611c03576119b760016080614352565b63ffffffff168114611ac95760008982607f81106119d7576119d7614450565b6101600201600a6020020135905060005b600a811015611a77578a83607f8110611a0357611a03614450565b610160020181611a156001600a614352565b63ffffffff16611a2591906143df565b600b8110611a3557611a35614450565b602002013582604051602001611a4c9291906143f2565b6040516020818303038152906040528051906020012091508080611a6f90614418565b9150506119e8565b508a8260808110611a8a57611a8a614450565b60200201358114611ac7576040517ff4c360f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b60008115611afe5789611add6001846143df565b607f8110611aed57611aed614450565b6101600201600a6020020135611b00565b865b90506000611b10610400846146f6565b611b209063ffffffff881661470e565b9050818c8460808110611b3557611b35614450565b6020020135610400604051602001611b4f939291906144b5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152815160209283012063ffffffff8416600090815260c29093529120557f8b1606624b2f737eaf245dca9fba97deb930da8f4c71fb05a3f1b77d6bb8dfeb81838e8660808110611bce57611bce614450565b6020020135610400604051611be694939291906144ec565b60405180910390a150508080611bfb90614418565b9150506119a2565b505050505050505050505050565b7ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f05611c3b81612d5a565b60c080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790556040517f0f7ba11d4e9d02c6ec9175a0134522c2f112de7cfdb2cea3f888e7eeae24c9dd90611cab908490613d7e565b60405180910390a15050565b60e48560ff1660088110611ccd57611ccd614450565b01548787604051602001611ce2929190614773565b6040516020818303038152906040528051906020012014611d2f576040517f612489a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611d3c6001886143df565b9050845b63ffffffff8082166104008483161b90911611611d93578163ffffffff16600003611d6a57600080fd5b81611d7481614780565b9250611d8c905061040063ffffffff84161b82614352565b9050611d40565b611d9e82600a614372565b63ffffffff168314611daf57600080fd5b8460005b84811015611e6c57600163ffffffff8416821c16600003611e165781868683818110611de157611de1614450565b90506020020135604051602001611df99291906143f2565b604051602081830303815290604052805190602001209150611e5a565b858582818110611e2857611e28614450565b9050602002013582604051602001611e419291906143f2565b6040516020818303038152906040528051906020012091505b80611e6481614418565b915050611db3565b5089898463ffffffff16818110611e8557611e85614450565b905060200201358114611ec4576040517f612489a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050505050565b7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a5041611efa81612d5a565b609780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040517f61340a1b154d5d21d259a74bf95379201799b9d12cc6509bb46cb56dc281df5590600090a150565b7ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f05611f7b81612d5a565b60c180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790556040517f1431075dc15e519b4b9b0b93ea4f7f3e2a34fde5e39f552bb899b7ea4bda134190611cab908490613d7e565b600063ffffffff83164080820361200157600080fd5b90911492915050565b60008281526065602052604090206001015461202581612d5a565b6111408383612e58565b600060c363ffffffff83166020811061204a5761204a614450565b015492915050565b600054610100900460ff16158080156120725750600054600160ff909116105b8061208c5750303b15801561208c575060005460ff166001145b6120c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614819565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561212057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b73ffffffffffffffffffffffffffffffffffffffff831661214057600080fd5b6121486132ae565b612154858584336132ef565b61215f600084612d64565b6121897ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f0584612d64565b80156121f157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906121e89060019061483d565b60405180910390a15b5050505050565b60975460ff1615612235576040517f379dfc6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008080808061224d6101c06101a0888a61484b565b6122569161487b565b60806122686101a06101808a8c61484b565b6122719161487b565b901b1794506122866102006101e0888a61484b565b61228f9161487b565b60806122a16101e06101c08a8c61484b565b6122aa9161487b565b901b1793506122bf61021c610218888a61484b565b6122c8916148c4565b60e01c92506122dd61022061021c888a61484b565b6122e6916148c4565b60e01c91506122fb610260610240888a61484b565b6123049161487b565b60806123166102406102208a8c61484b565b61231f9161487b565b60001c901b1760001b90509295509295909350565b60c054604051600091829173ffffffffffffffffffffffffffffffffffffffff90911690612365908690869061492f565b6000604051808303816000865af19150503d80600081146123a2576040519150601f19603f3d011682016040523d82523d6000602084013e6123a7565b606091505b509095945050505050565b600083836123c18460406146f6565b6123cd9061026061470e565b6123d890602061470e565b906123e485600161470e565b6123ef9060406146f6565b6123fb9061026061470e565b926124089392919061484b565b6124119161487b565b608085856124208660406146f6565b61242c9061026061470e565b906124388760406146f6565b6124449061026061470e565b61244f90602061470e565b9261245c9392919061484b565b6124659161487b565b901b1790505b9392505050565b60008160000361248457506000919050565b816001036124b357507fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5919050565b816002036124e257507fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d30919050565b8160030361251157507f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba85919050565b8160040361254057507fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a19344919050565b8160050361256f57507f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d919050565b8160060361259e57507f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a1968919050565b816007036125cd57507fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f83919050565b816008036125fc57507f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af919050565b8160090361262b57507fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e0919050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614973565b919050565b61266a613b2a565b60208083015463ffffffff8082169284019290925264010000000081048216604084015268010000000000000000900416606082015260005b816020015163ffffffff168163ffffffff161015612705578263ffffffff8216602081106126d3576126d3614450565b0154825163ffffffff8316602081106126ee576126ee614450565b6020020152806126fd81614983565b9150506126a3565b50919050565b6040820151600090819083905b600163ffffffff8281169085161c811690036127ad57855163ffffffff84166020811061274757612747614450565b60200201518260405160200161275e9291906143f2565b6040516020818303038152906040528051906020012091506000801b86600001518463ffffffff166020811061279657612796614450565b60200201526127a6600184614372565b9250612718565b8551829063ffffffff8516602081106127c8576127c8614450565b6020020152604086018051600191906127e2908390614372565b63ffffffff9081169091526020880151811690851610905061281557612809836001614372565b63ffffffff1660208701525b612820836001614372565b9695505050505050565b600080826020015163ffffffff1667ffffffffffffffff81111561285057612850613ed9565b604051908082528060200260200182016040528015612879578160200160208202803683370190505b50905060005b836020015163ffffffff168163ffffffff1610156128ea57835163ffffffff8216602081106128b0576128b0614450565b6020020151828263ffffffff16815181106128cd576128cd614450565b6020908102919091010152806128e281614983565b91505061287f565b50806040516020016128fc9190614a10565b60405160208183030381529060405280519060200120915050919050565b60208083015190840180546040850151606086015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff928216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169190951617919091171691909117905560005b8163ffffffff168163ffffffff161015612a0557825163ffffffff8216602081106129d1576129d1614450565b6020020151846000018263ffffffff16602081106129f1576129f1614450565b0155806129fd81614983565b9150506129a4565b50505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b000000000000000000000000000000000000000000000000000000001480610bb357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610bb3565b60408201805182516000928190612ab98285614372565b63ffffffff169052506000805b63ffffffff831615612d2b5750600163ffffffff8481169083161c811690600090612af18386614372565b63ffffffff16901c905060005b8163ffffffff168163ffffffff161015612c84576000808463ffffffff16600103612bbc5763ffffffff831615612b6a57896001612b3d856002614521565b612b479190614352565b63ffffffff1681518110612b5d57612b5d614450565b6020026020010151612b89565b8a5163ffffffff871660208110612b8357612b83614450565b60200201515b915089612b97846002614521565b63ffffffff1681518110612bad57612bad614450565b60200260200101519050612c22565b89612bc8846002614521565b63ffffffff1681518110612bde57612bde614450565b6020026020010151915089836002612bf69190614521565b612c01906001614372565b63ffffffff1681518110612c1757612c17614450565b602002602001015190505b8181604051602001612c359291906143f2565b604051602081830303815290604052805190602001208a8463ffffffff1681518110612c6357612c63614450565b60200260200101818152505050508080612c7c90614983565b915050612afe565b506001841663ffffffff831614612ce55786612ca1600186614352565b63ffffffff1681518110612cb757612cb7614450565b602002602001015188600001518463ffffffff1660208110612cdb57612cdb614450565b6020020152612d15565b8163ffffffff16600103612d1557875160009063ffffffff851660208110612d0f57612d0f614450565b60200201525b925082612d23600184614372565b925050612ac6565b866020015163ffffffff168263ffffffff161115612d505763ffffffff821660208801525b5095945050505050565b6113018133613344565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166111a757600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055612dfa3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156111a757600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b7ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f056111a781612d5a565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615612f7057611140836133fe565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612ff5575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252612ff291810190614a27565b60015b61302b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614aa2565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114613084576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b0c565b506111408383836134b2565b60008061309f60026080614b1c565b63ffffffff1667ffffffffffffffff8111156130bd576130bd613ed9565b6040519080825280602002602001820160405280156130e6578160200160208202803683370190505b50905060005b6130f860026080614b1c565b63ffffffff168110156131925783600182901b6080811061311b5761311b614450565b602002015184600183811b176080811061313757613137614450565b602002015160405160200161314d9291906143f2565b6040516020818303038152906040528051906020012082828151811061317557613175614450565b60209081029190910101528061318a81614418565b9150506130ec565b5060006131a160046080614b1c565b63ffffffff1690505b80156132595760005b818110156132505782600182901b815181106131d1576131d1614450565b602002602001015183600183901b600117815181106131f2576131f2614450565b602002602001015160405160200161320b9291906143f2565b6040516020818303038152906040528051906020012083828151811061323357613233614450565b60209081029190910101528061324881614418565b9150506131b3565b5060011c6131aa565b8160008151811061326c5761326c614450565b602002602001015192505050919050565b60c154604051600091829173ffffffffffffffffffffffffffffffffffffffff90911690612365908690869061492f565b600054610100900460ff16612235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b600054610100900460ff16613330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b6133386134d7565b612a0584848484613520565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166111a757613384816136ff565b61338f83602061371e565b6040516020016133a0929190614bea565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261119491600401614c9e565b73ffffffffffffffffffffffffffffffffffffffff81163b61344c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614d09565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6134bb83613931565b6000825111806134c85750805b1561114057612a05838361397e565b600054610100900460ff16613518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b612235613a67565b600054610100900460ff16613561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b73ffffffffffffffffffffffffffffffffffffffff841661358157600080fd5b73ffffffffffffffffffffffffffffffffffffffff83166135a157600080fd5b73ffffffffffffffffffffffffffffffffffffffff82166135c157600080fd5b73ffffffffffffffffffffffffffffffffffffffff81166135e157600080fd5b61360b7f60044782a422109ac08a415e44260ad5d3bad63d96ebe1fac0363399642ee3f282612d64565b6136357f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504183612d64565b60c0805473ffffffffffffffffffffffffffffffffffffffff8087167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560c18054928616929091169190911790556040517f0f7ba11d4e9d02c6ec9175a0134522c2f112de7cfdb2cea3f888e7eeae24c9dd906136ba908690613d7e565b60405180910390a17f1431075dc15e519b4b9b0b93ea4f7f3e2a34fde5e39f552bb899b7ea4bda1341836040516136f19190613d7e565b60405180910390a150505050565b6060610bb373ffffffffffffffffffffffffffffffffffffffff831660145b6060600061372d8360026146f6565b61373890600261470e565b67ffffffffffffffff81111561375057613750613ed9565b6040519080825280601f01601f19166020018201604052801561377a576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106137b1576137b1614450565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061381457613814614450565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006138508460026146f6565b61385b90600161470e565b90505b60018111156138f8577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061389c5761389c614450565b1a60f81b8282815181106138b2576138b2614450565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936138f181614d19565b905061385e565b50831561246b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614d53565b61393a816133fe565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606073ffffffffffffffffffffffffffffffffffffffff83163b6139ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614dbd565b6000808473ffffffffffffffffffffffffffffffffffffffff16846040516139f69190614dcd565b600060405180830381855af49150503d8060008114613a31576040519150601f19603f3d011682016040523d82523d6000602084013e613a36565b606091505b5091509150613a5e8282604051806060016040528060278152602001614dda60279139613ad2565b95945050505050565b600054610100900460ff16613aa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b609780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60608315613ae157508161246b565b61246b8383815115613af65781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111949190614c9e565b6040518060800160405280613b3d613b58565b81526000602082018190526040820181905260609091015290565b6040518061040001604052806020906020820280368337509192915050565b60008083601f840112613b8c57613b8c600080fd5b50813567ffffffffffffffff811115613ba757613ba7600080fd5b602083019150836001820283011115613bc257613bc2600080fd5b9250929050565b60008060208385031215613bdf57613bdf600080fd5b823567ffffffffffffffff811115613bf957613bf9600080fd5b613c0585828601613b77565b92509250509250929050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165b811461130157600080fd5b8035610bb381613c11565b600060208284031215613c6057613c60600080fd5b6000613c6c8484613c40565b949350505050565b8015155b82525050565b60208101610bb38284613c74565b80613c35565b8035610bb381613c8c565b600060208284031215613cb257613cb2600080fd5b6000613c6c8484613c92565b80613c78565b60208101610bb38284613cbe565b63ffffffff8116613c35565b8035610bb381613cd2565b60008060008060608587031215613d0257613d02600080fd5b6000613d0e8787613c92565b9450506020613d1f87828801613cde565b935050604085013567ffffffffffffffff811115613d3f57613d3f600080fd5b613d4b87828801613b77565b95989497509550505050565b600073ffffffffffffffffffffffffffffffffffffffff8216610bb3565b613c7881613d57565b60208101610bb38284613d75565b60008083601f840112613da157613da1600080fd5b50813567ffffffffffffffff811115613dbc57613dbc600080fd5b602083019150836020820283011115613bc257613bc2600080fd5b600080600080600060608688031215613df257613df2600080fd5b6000613dfe8888613cde565b955050602086013567ffffffffffffffff811115613e1e57613e1e600080fd5b613e2a88828901613d8c565b9450945050604086013567ffffffffffffffff811115613e4c57613e4c600080fd5b613e5888828901613d8c565b92509250509295509295909350565b613c3581613d57565b8035610bb381613e67565b60008060408385031215613e9157613e91600080fd5b6000613e9d8585613c92565b9250506020613eae85828601613e70565b9150509250929050565b600060208284031215613ecd57613ecd600080fd5b6000613c6c8484613e70565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715613f4c57613f4c613ed9565b6040525050565b6000613f5e60405190565b905061265d8282613f08565b600067ffffffffffffffff821115613f8457613f84613ed9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011660200192915050565b82818337506000910152565b6000613fd2613fcd84613f6a565b613f53565b905082815260208101848484011115613fed57613fed600080fd5b613ff8848285613fb3565b509392505050565b600082601f83011261401457614014600080fd5b8135613c6c848260208601613fbf565b6000806040838503121561403a5761403a600080fd5b60006140468585613e70565b925050602083013567ffffffffffffffff81111561406657614066600080fd5b613eae85828601614000565b63ffffffff8116613c78565b6060810161408c8286614072565b6140996020830185614072565b613c6c6040830184614072565b60006101c0828403121561270557612705600080fd5b60006101c082840312156140d2576140d2600080fd5b6000613c6c84846140a6565b806110008101831015610bb357610bb3600080fd5b8061aea08101831015610bb357610bb3600080fd5b60008060008060008061bf00878903121561412557614125600080fd5b60006141318989613c92565b965050602061414289828a01613cde565b955050604061415389828a016140de565b94505061104061416589828a016140f3565b93505061bee087013567ffffffffffffffff81111561418657614186600080fd5b61419289828a01613b77565b92509250509295509295509295565b60ff8116613c35565b8035610bb3816141a1565b600080600080600080600060a0888a0312156141d3576141d3600080fd5b873567ffffffffffffffff8111156141ed576141ed600080fd5b6141f98a828b01613d8c565b9750975050602061420c8a828b016141aa565b955050604061421d8a828b01613cde565b945050606061422e8a828b01613c92565b935050608088013567ffffffffffffffff81111561424e5761424e600080fd5b61425a8a828b01613d8c565b925092505092959891949750929550565b6000806040838503121561428157614281600080fd5b600061428d8585613cde565b9250506020613eae85828601613c92565b6000602082840312156142b3576142b3600080fd5b6000613c6c8484613cde565b600080600080608085870312156142d8576142d8600080fd5b60006142e48787613e70565b94505060206142f587828801613e70565b935050604061430687828801613e70565b925050606061431787828801613e70565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff918216919081169082820390811115610bb357610bb3614323565b63ffffffff918216919081169082820190811115610bb357610bb3614323565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b63ffffffff91821691166000826143da576143da614392565b500690565b81810381811115610bb357610bb3614323565b60006143fe8285613cbe565b60208201915061440e8284613cbe565b5060200192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361444957614449614323565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6040810161448d8285614072565b61246b6020830184614072565b6000610bb38260e01b90565b613c7863ffffffff821661449a565b60006144c18286613cbe565b6020820191506144d18285613cbe565b6020820191506144e182846144a6565b506004019392505050565b608081016144fa8287614072565b6145076020830186613cbe565b6145146040830185613cbe565b613a5e6060830184614072565b63ffffffff91821691908116908282029081169081811461454457614544614323565b5092915050565b602f81526000602082017f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636581527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015291505b5060400190565b60208082528101610bb38161454b565b602c81526000602082017f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682081527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb3816145b8565b602c81526000602082017f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682081527f6163746976652070726f78790000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614622565b603881526000602082017f555550535570677261646561626c653a206d757374206e6f742062652063616c81527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015291506145a1565b60208082528101610bb38161468c565b81810280821583820485141761454457614544614323565b80820180821115610bb357610bb3614323565b82818337505050565b60007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561475c5761475c600080fd5b60208302925061476d838584614721565b50500190565b6000613c6c82848661472a565b600063ffffffff82165b91508161479957614799614323565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181527f647920696e697469616c697a6564000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb3816147bf565b600060ff8216610bb3565b613c7881614829565b60208101610bb38284614834565b6000808585111561485e5761485e600080fd5b8386111561486e5761486e600080fd5b5050820193919092039150565b8035828260208210156148bc576148b77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008021b90565b831692505b505092915050565b80357fffffffff0000000000000000000000000000000000000000000000000000000016828260048210156148bc576148b77fffffffff00000000000000000000000000000000000000000000000000000000836004036008021b90565b600061476d838584613fb3565b6000613c6c828486614922565b601e81526000602082017f6465707468206d75737420626520696e2072616e6765205b302c203130290000815291505b5060200190565b60208082528101610bb38161493c565b63ffffffff1660007fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000001820161444957614449614323565b60006149c68383613cbe565b505060200190565b60006149d8825190565b602083018060005b83811015614a055781516149f488826149ba565b9750602083019250506001016149e0565b509495945050505050565b600061246b82846149ce565b8051610bb381613c8c565b600060208284031215614a3c57614a3c600080fd5b6000613c6c8484614a1c565b602e81526000602082017f45524331393637557067726164653a206e657720696d706c656d656e7461746981527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614a48565b602981526000602082017f45524331393637557067726164653a20756e737570706f727465642070726f7881527f6961626c65555549440000000000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614ab2565b63ffffffff9182169116600082614b3557614b35614392565b500490565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614b3a565b60005b83811015614bbf578181015183820152602001614ba7565b50506000910152565b6000614bd2825190565b614be0818560208601614ba4565b9290920192915050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526017016000614c1c8285614bc8565b7f206973206d697373696e6720726f6c652000000000000000000000000000000081526011019150613c6c8284614bc8565b6000614c58825190565b808452602084019350614c6f818560208601614ba4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b6020808252810161246b8184614c4e565b602d81526000602082017f455243313936373a206e657720696d706c656d656e746174696f6e206973206e81527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614caf565b60008161478a565b60208082527f537472696e67733a20686578206c656e67746820696e73756666696369656e749101908152600061496c565b60208082528101610bb381614d21565b602681526000602082017f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f81527f6e74726163740000000000000000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614d63565b600061246b8284614bc856fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c7fa17d80fdbd69b1e4fc8d40d93535cd86b15508104668e8809fbb985456e1c64736f6c63430008130033",
        "sourceMap": "569:1264:2:-:0;;;1332:4:43;1289:48;;787:53:2;;;;;;;;;-1:-1:-1;811:22:2;:20;:22::i;:::-;569:1264;;5928:279:42;5996:13;;;;;;;5995:14;5987:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;6067:12;;6082:15;6067:12;;;:30;6063:138;;;6113:12;:30;;;;6128:15;6113:30;;;;;;6162:28;;;;;;;:::i;:::-;;;;;;;;6063:138;5928:279::o;786:419:77:-;990:2;1003:47;;;975:18;;1067:131;975:18;641:2;113:19;;322:34;165:4;156:14;;299:58;391:9;374:15;;;367:34;762:12;;;414:366;1067:131;1059:139;786:419;-1:-1:-1;;786:419:77:o;1421:214::-;1286:4;1275:16;;1374:35;;1548:2;1533:18;;1561:67;1303:112;1421:214;569:1264:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x6080604052600436106101e35760003560e01c80636f193b8311610102578063c1f7cae211610095578063ef4fcb1711610064578063ef4fcb1714610608578063f288a2e214610628578063f8c8765e1461065c578063fe9ccb601461067c57600080fd5b8063c1f7cae214610567578063c6ca475314610587578063d547741f146105b4578063dc9a4ef6146105d457600080fd5b806391d14854116100d157806391d14854146104ca57806399464c891461051d578063a217fddf14610532578063ac59e61c1461054757600080fd5b80636f193b831461044a5780637225fb211461046a578063853ead4a1461048a57806389ea365d146104aa57600080fd5b8063282bf5c91161017a5780634f1ef286116101495780634f1ef286146103c5578063529ad9f3146103d857806352d1902d1461042057806366c5c4a01461043557600080fd5b8063282bf5c9146103455780632f2ff15d1461036557806336568abe146103855780633659cfe6146103a557600080fd5b806311b63d01116101b657806311b63d011461028757806318bdffbb146102a7578063248a9ca3146102e157806324ea54f41461031157600080fd5b806301ef3afa146101e857806301ffc9a71461020a578063054f7d9c14610240578063074144d61461025a575b600080fd5b3480156101f457600080fd5b50610208610203366004613bc9565b6106a9565b005b34801561021657600080fd5b5061022a610225366004613c4b565b610b7e565b6040516102379190613c7e565b60405180910390f35b34801561024c57600080fd5b5060975461022a9060ff1681565b34801561026657600080fd5b5061027a610275366004613c9d565b610bb9565b6040516102379190613cc4565b34801561029357600080fd5b506102086102a2366004613ce9565b610bd0565b3480156102b357600080fd5b5060c0546102d49073ffffffffffffffffffffffffffffffffffffffff1681565b6040516102379190613d7e565b3480156102ed57600080fd5b5061027a6102fc366004613c9d565b60009081526065602052604090206001015490565b34801561031d57600080fd5b5061027a7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504181565b34801561035157600080fd5b50610208610360366004613dd7565b610ed1565b34801561037157600080fd5b50610208610380366004613e7b565b61111b565b34801561039157600080fd5b506102086103a0366004613e7b565b611145565b3480156103b157600080fd5b506102086103c0366004613eb8565b6111ab565b6102086103d3366004614024565b611304565b3480156103e457600080fd5b5060e3546104119063ffffffff808216916401000000008104821691680100000000000000009091041683565b6040516102379392919061407e565b34801561042c57600080fd5b5061027a61144a565b34801561044157600080fd5b506102086114e0565b34801561045657600080fd5b5061022a6104653660046140bc565b61155e565b34801561047657600080fd5b50610208610485366004614108565b6116dd565b34801561049657600080fd5b506102086104a5366004613eb8565b611c11565b3480156104b657600080fd5b506102086104c53660046141b5565b611cb7565b3480156104d657600080fd5b5061022a6104e5366004613e7b565b600091825260656020908152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b34801561052957600080fd5b50610208611ed0565b34801561053e57600080fd5b5061027a600081565b34801561055357600080fd5b50610208610562366004613eb8565b611f51565b34801561057357600080fd5b5061022a61058236600461426b565b611feb565b34801561059357600080fd5b5061027a6105a236600461429e565b60c26020526000908152604090205481565b3480156105c057600080fd5b506102086105cf366004613e7b565b61200a565b3480156105e057600080fd5b5061027a7f60044782a422109ac08a415e44260ad5d3bad63d96ebe1fac0363399642ee3f281565b34801561061457600080fd5b5061027a61062336600461429e565b61202f565b34801561063457600080fd5b5061027a7ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f0581565b34801561066857600080fd5b506102086106773660046142bf565b612052565b34801561068857600080fd5b5060c1546102d49073ffffffffffffffffffffffffffffffffffffffff1681565b600080527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d499021856020527fdf4fae2a9d03ddefae2c9e431bd1ae49d400972b66abd41187abff73623b3c4b5460ff1615801561073257503360009081527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d49902185602052604090205460ff16155b15610769576040517f6692e47700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107716121f8565b60008060008060006107838787612237565b945094509450945094506000838361079b9190614352565b6107a6906001614372565b905061040063ffffffff821611156107ea576040517f0a004fe500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107f6610400856143c1565b63ffffffff1615610833576040517f7478cfa900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b438363ffffffff1610610872576040517faef3422900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61010061088563ffffffff8516436143df565b11156108bd576040517faef3422900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b848363ffffffff1640146108fd576040517fa46ad57500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109078888612334565b61093d576040517f1355d9a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816109fc5760005b600a8110156109f65760006109778a8a846109626001600a614352565b63ffffffff1661097291906143df565b6123b2565b905080156109af5780846040516020016109929291906143f2565b6040516020818303038152906040528051906020012093506109e3565b836109b983612472565b6040516020016109ca9291906143f2565b6040516020818303038152906040528051906020012093505b50806109ee81614418565b915050610945565b50610ad9565b60e354623fffff600a86901c1664010000000090910463ffffffff1603610ad9576000610a2960c3612662565b90506000610a37828561270b565b9050600882606001516001610a4c9190614372565b610a5691906143c1565b63ffffffff166060830152610a6a8261282a565b60e4836060015163ffffffff1660088110610a8757610a87614450565b0155610a9560c3838361291a565b7f39145329d5ae3858c6f1192667af1d01792c69c7f88d143b0312872011e5cbcb82604001518360600151604051610ace92919061447f565b60405180910390a150505b858282604051602001610aee939291906144b5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012063ffffffff8816600090815260c2909252919020557f8b1606624b2f737eaf245dca9fba97deb930da8f4c71fb05a3f1b77d6bb8dfeb90610b6c9086908990869086906144ec565b60405180910390a15050505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082161580610bb35750610bb382612a0b565b92915050565b60e48160088110610bc957600080fd5b0154905081565b600080527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d499021856020527fdf4fae2a9d03ddefae2c9e431bd1ae49d400972b66abd41187abff73623b3c4b5460ff16158015610c5957503360009081527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d49902185602052604090205460ff16155b15610c90576040517f6692e47700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c986121f8565b6000806000806000610caa8787612237565b9450945094509450945061040083610cc291906143c1565b63ffffffff1615610cff576040517f7478cfa900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d0c6001610400614352565b63ffffffff16610d1c8484614352565b63ffffffff1614610d59576040517f0a004fe500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838989604051602001610d6e939291906144b5565b6040516020818303038152906040528051906020012060c26000846001610d959190614372565b63ffffffff1663ffffffff1681526020019081526020016000205414610de7576040517fa46ad57500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610df18787612334565b610e27576040517f1355d9a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8481610400604051602001610e3e939291906144b5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012063ffffffff8716600090815260c2909252919020557f8b1606624b2f737eaf245dca9fba97deb930da8f4c71fb05a3f1b77d6bb8dfeb90610ebe90859088908590610400906144ec565b60405180910390a1505050505050505050565b610ed96121f8565b6000839003610ee757600080fd5b828114610ef357600080fd5b60e354610f119061040090640100000000900463ffffffff16614521565b63ffffffff168563ffffffff1614610f2857600080fd5b6000610f3460c3612662565b905060005b84811015611031576000848483818110610f5557610f55614450565b90506020020135878784818110610f6e57610f6e614450565b90506020020135610400604051602001610f8a939291906144b5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152815160209283012063ffffffff8b16600090815260c2909352912054909150811461100f576040517f612489a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61101b61040089614372565b975050808061102990614418565b915050610f39565b5060006110738686808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508693925050612aa29050565b90506008826060015160016110889190614372565b61109291906143c1565b63ffffffff1660608301526110a68261282a565b60e4836060015163ffffffff16600881106110c3576110c3614450565b01556110d160c3838361291a565b7f39145329d5ae3858c6f1192667af1d01792c69c7f88d143b0312872011e5cbcb8260400151836060015160405161110a92919061447f565b60405180910390a150505050505050565b60008281526065602052604090206001015461113681612d5a565b6111408383612d64565b505050565b73ffffffffffffffffffffffffffffffffffffffff8116331461119d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611194906145a8565b60405180910390fd5b6111a78282612e58565b5050565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016300361121a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614612565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661128f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146112dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111949061467c565b6112e581612f13565b6040805160008082526020820190925261130191839190612f3d565b50565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003611373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614612565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166113e87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614611435576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111949061467c565b61143e82612f13565b6111a782826001612f3d565b60003073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146114bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611194906146e6565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504161150a81612d5a565b609780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556040517fe6fdbf73945dd61794a752b9181ea29f77170a7b1ffd37e0a7ff9d2c6f7258b990600090a150565b60006020820135810361157057600080fd5b6000610400611582602085018561429e565b61158c91906143c1565b905060008161159e602086018661429e565b6115a89190614352565b63ffffffff8116600090815260c260205260408120549192508190036115cd57600080fd5b602085013560005b600a81101561169157600163ffffffff8616821c1660000361163a57818760800182600a811061160757611607614450565b602002013560405160200161161d9291906143f2565b60405160208183030381529060405280519060200120915061167f565b8660800181600a811061164f5761164f614450565b6020020135826040516020016116669291906143f2565b6040516020818303038152906040528051906020012091505b8061168981614418565b9150506115d5565b506040860135816116a86080890160608a0161429e565b6040516020016116ba939291906144b5565b604051602081830303815290604052805190602001208214945050505050919050565b600080527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d499021856020527fdf4fae2a9d03ddefae2c9e431bd1ae49d400972b66abd41187abff73623b3c4b5460ff1615801561176657503360009081527f16d6d09ad43c2e13327e8e85b0f16a19ef2e63b72c391bfd77d21c5d49902185602052604090205460ff16155b1561179d576040517f6692e47700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6117a56121f8565b60008060008060006117b78787612237565b94509450945094509450610400836117cf91906143c1565b63ffffffff161561180c576040517f7478cfa900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61181a600162020000614352565b63ffffffff1661182a8484614352565b63ffffffff1614611867576040517f0a004fe500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b838b8b60405160200161187c939291906144b5565b6040516020818303038152906040528051906020012060c260008460016118a39190614372565b63ffffffff1663ffffffff16815260200190815260200160002054146118f5576040517fa46ad57500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806119288a6080806020026040519081016040528092919082608060200280828437600092019190915250613090915050565b1461195f576040517ff4c360f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b611969878761327d565b61199f576040517f1355d9a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6080811015611c03576119b760016080614352565b63ffffffff168114611ac95760008982607f81106119d7576119d7614450565b6101600201600a6020020135905060005b600a811015611a77578a83607f8110611a0357611a03614450565b610160020181611a156001600a614352565b63ffffffff16611a2591906143df565b600b8110611a3557611a35614450565b602002013582604051602001611a4c9291906143f2565b6040516020818303038152906040528051906020012091508080611a6f90614418565b9150506119e8565b508a8260808110611a8a57611a8a614450565b60200201358114611ac7576040517ff4c360f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b60008115611afe5789611add6001846143df565b607f8110611aed57611aed614450565b6101600201600a6020020135611b00565b865b90506000611b10610400846146f6565b611b209063ffffffff881661470e565b9050818c8460808110611b3557611b35614450565b6020020135610400604051602001611b4f939291906144b5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152918152815160209283012063ffffffff8416600090815260c29093529120557f8b1606624b2f737eaf245dca9fba97deb930da8f4c71fb05a3f1b77d6bb8dfeb81838e8660808110611bce57611bce614450565b6020020135610400604051611be694939291906144ec565b60405180910390a150508080611bfb90614418565b9150506119a2565b505050505050505050505050565b7ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f05611c3b81612d5a565b60c080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790556040517f0f7ba11d4e9d02c6ec9175a0134522c2f112de7cfdb2cea3f888e7eeae24c9dd90611cab908490613d7e565b60405180910390a15050565b60e48560ff1660088110611ccd57611ccd614450565b01548787604051602001611ce2929190614773565b6040516020818303038152906040528051906020012014611d2f576040517f612489a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611d3c6001886143df565b9050845b63ffffffff8082166104008483161b90911611611d93578163ffffffff16600003611d6a57600080fd5b81611d7481614780565b9250611d8c905061040063ffffffff84161b82614352565b9050611d40565b611d9e82600a614372565b63ffffffff168314611daf57600080fd5b8460005b84811015611e6c57600163ffffffff8416821c16600003611e165781868683818110611de157611de1614450565b90506020020135604051602001611df99291906143f2565b604051602081830303815290604052805190602001209150611e5a565b858582818110611e2857611e28614450565b9050602002013582604051602001611e419291906143f2565b6040516020818303038152906040528051906020012091505b80611e6481614418565b915050611db3565b5089898463ffffffff16818110611e8557611e85614450565b905060200201358114611ec4576040517f612489a100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050505050565b7f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a5041611efa81612d5a565b609780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040517f61340a1b154d5d21d259a74bf95379201799b9d12cc6509bb46cb56dc281df5590600090a150565b7ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f05611f7b81612d5a565b60c180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790556040517f1431075dc15e519b4b9b0b93ea4f7f3e2a34fde5e39f552bb899b7ea4bda134190611cab908490613d7e565b600063ffffffff83164080820361200157600080fd5b90911492915050565b60008281526065602052604090206001015461202581612d5a565b6111408383612e58565b600060c363ffffffff83166020811061204a5761204a614450565b015492915050565b600054610100900460ff16158080156120725750600054600160ff909116105b8061208c5750303b15801561208c575060005460ff166001145b6120c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614819565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561212057600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b73ffffffffffffffffffffffffffffffffffffffff831661214057600080fd5b6121486132ae565b612154858584336132ef565b61215f600084612d64565b6121897ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f0584612d64565b80156121f157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906121e89060019061483d565b60405180910390a15b5050505050565b60975460ff1615612235576040517f379dfc6300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60008080808061224d6101c06101a0888a61484b565b6122569161487b565b60806122686101a06101808a8c61484b565b6122719161487b565b901b1794506122866102006101e0888a61484b565b61228f9161487b565b60806122a16101e06101c08a8c61484b565b6122aa9161487b565b901b1793506122bf61021c610218888a61484b565b6122c8916148c4565b60e01c92506122dd61022061021c888a61484b565b6122e6916148c4565b60e01c91506122fb610260610240888a61484b565b6123049161487b565b60806123166102406102208a8c61484b565b61231f9161487b565b60001c901b1760001b90509295509295909350565b60c054604051600091829173ffffffffffffffffffffffffffffffffffffffff90911690612365908690869061492f565b6000604051808303816000865af19150503d80600081146123a2576040519150601f19603f3d011682016040523d82523d6000602084013e6123a7565b606091505b509095945050505050565b600083836123c18460406146f6565b6123cd9061026061470e565b6123d890602061470e565b906123e485600161470e565b6123ef9060406146f6565b6123fb9061026061470e565b926124089392919061484b565b6124119161487b565b608085856124208660406146f6565b61242c9061026061470e565b906124388760406146f6565b6124449061026061470e565b61244f90602061470e565b9261245c9392919061484b565b6124659161487b565b901b1790505b9392505050565b60008160000361248457506000919050565b816001036124b357507fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5919050565b816002036124e257507fb4c11951957c6f8f642c4af61cd6b24640fec6dc7fc607ee8206a99e92410d30919050565b8160030361251157507f21ddb9a356815c3fac1026b6dec5df3124afbadb485c9ba5a3e3398a04b7ba85919050565b8160040361254057507fe58769b32a1beaf1ea27375a44095a0d1fb664ce2dd358e7fcbfb78c26a19344919050565b8160050361256f57507f0eb01ebfc9ed27500cd4dfc979272d1f0913cc9f66540d7e8005811109e1cf2d919050565b8160060361259e57507f887c22bd8750d34016ac3c66b5ff102dacdd73f6b014e710b51e8022af9a1968919050565b816007036125cd57507fffd70157e48063fc33c97a050f7f640233bf646cc98d9524c6b92bcf3ab56f83919050565b816008036125fc57507f9867cc5f7f196b93bae1e27e6320742445d290f2263827498b54fec539f756af919050565b8160090361262b57507fcefad4e508c098b9a7e1d8feb19955fb02ba9675585078710969d3440f5054e0919050565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614973565b919050565b61266a613b2a565b60208083015463ffffffff8082169284019290925264010000000081048216604084015268010000000000000000900416606082015260005b816020015163ffffffff168163ffffffff161015612705578263ffffffff8216602081106126d3576126d3614450565b0154825163ffffffff8316602081106126ee576126ee614450565b6020020152806126fd81614983565b9150506126a3565b50919050565b6040820151600090819083905b600163ffffffff8281169085161c811690036127ad57855163ffffffff84166020811061274757612747614450565b60200201518260405160200161275e9291906143f2565b6040516020818303038152906040528051906020012091506000801b86600001518463ffffffff166020811061279657612796614450565b60200201526127a6600184614372565b9250612718565b8551829063ffffffff8516602081106127c8576127c8614450565b6020020152604086018051600191906127e2908390614372565b63ffffffff9081169091526020880151811690851610905061281557612809836001614372565b63ffffffff1660208701525b612820836001614372565b9695505050505050565b600080826020015163ffffffff1667ffffffffffffffff81111561285057612850613ed9565b604051908082528060200260200182016040528015612879578160200160208202803683370190505b50905060005b836020015163ffffffff168163ffffffff1610156128ea57835163ffffffff8216602081106128b0576128b0614450565b6020020151828263ffffffff16815181106128cd576128cd614450565b6020908102919091010152806128e281614983565b91505061287f565b50806040516020016128fc9190614a10565b60405160208183030381529060405280519060200120915050919050565b60208083015190840180546040850151606086015163ffffffff90811668010000000000000000027fffffffffffffffffffffffffffffffffffffffff00000000ffffffffffffffff928216640100000000027fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000009094169190951617919091171691909117905560005b8163ffffffff168163ffffffff161015612a0557825163ffffffff8216602081106129d1576129d1614450565b6020020151846000018263ffffffff16602081106129f1576129f1614450565b0155806129fd81614983565b9150506129a4565b50505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b000000000000000000000000000000000000000000000000000000001480610bb357507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610bb3565b60408201805182516000928190612ab98285614372565b63ffffffff169052506000805b63ffffffff831615612d2b5750600163ffffffff8481169083161c811690600090612af18386614372565b63ffffffff16901c905060005b8163ffffffff168163ffffffff161015612c84576000808463ffffffff16600103612bbc5763ffffffff831615612b6a57896001612b3d856002614521565b612b479190614352565b63ffffffff1681518110612b5d57612b5d614450565b6020026020010151612b89565b8a5163ffffffff871660208110612b8357612b83614450565b60200201515b915089612b97846002614521565b63ffffffff1681518110612bad57612bad614450565b60200260200101519050612c22565b89612bc8846002614521565b63ffffffff1681518110612bde57612bde614450565b6020026020010151915089836002612bf69190614521565b612c01906001614372565b63ffffffff1681518110612c1757612c17614450565b602002602001015190505b8181604051602001612c359291906143f2565b604051602081830303815290604052805190602001208a8463ffffffff1681518110612c6357612c63614450565b60200260200101818152505050508080612c7c90614983565b915050612afe565b506001841663ffffffff831614612ce55786612ca1600186614352565b63ffffffff1681518110612cb757612cb7614450565b602002602001015188600001518463ffffffff1660208110612cdb57612cdb614450565b6020020152612d15565b8163ffffffff16600103612d1557875160009063ffffffff851660208110612d0f57612d0f614450565b60200201525b925082612d23600184614372565b925050612ac6565b866020015163ffffffff168263ffffffff161115612d505763ffffffff821660208801525b5095945050505050565b6113018133613344565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166111a757600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055612dfa3390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16156111a757600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b7ff66846415d2bf9eabda9e84793ff9c0ea96d87f50fc41e66aa16469c6a442f056111a781612d5a565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615612f7057611140836133fe565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612ff5575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252612ff291810190614a27565b60015b61302b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614aa2565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8114613084576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b0c565b506111408383836134b2565b60008061309f60026080614b1c565b63ffffffff1667ffffffffffffffff8111156130bd576130bd613ed9565b6040519080825280602002602001820160405280156130e6578160200160208202803683370190505b50905060005b6130f860026080614b1c565b63ffffffff168110156131925783600182901b6080811061311b5761311b614450565b602002015184600183811b176080811061313757613137614450565b602002015160405160200161314d9291906143f2565b6040516020818303038152906040528051906020012082828151811061317557613175614450565b60209081029190910101528061318a81614418565b9150506130ec565b5060006131a160046080614b1c565b63ffffffff1690505b80156132595760005b818110156132505782600182901b815181106131d1576131d1614450565b602002602001015183600183901b600117815181106131f2576131f2614450565b602002602001015160405160200161320b9291906143f2565b6040516020818303038152906040528051906020012083828151811061323357613233614450565b60209081029190910101528061324881614418565b9150506131b3565b5060011c6131aa565b8160008151811061326c5761326c614450565b602002602001015192505050919050565b60c154604051600091829173ffffffffffffffffffffffffffffffffffffffff90911690612365908690869061492f565b600054610100900460ff16612235576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b600054610100900460ff16613330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b6133386134d7565b612a0584848484613520565b600082815260656020908152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff166111a757613384816136ff565b61338f83602061371e565b6040516020016133a0929190614bea565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261119491600401614c9e565b73ffffffffffffffffffffffffffffffffffffffff81163b61344c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614d09565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6134bb83613931565b6000825111806134c85750805b1561114057612a05838361397e565b600054610100900460ff16613518576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b612235613a67565b600054610100900460ff16613561576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b73ffffffffffffffffffffffffffffffffffffffff841661358157600080fd5b73ffffffffffffffffffffffffffffffffffffffff83166135a157600080fd5b73ffffffffffffffffffffffffffffffffffffffff82166135c157600080fd5b73ffffffffffffffffffffffffffffffffffffffff81166135e157600080fd5b61360b7f60044782a422109ac08a415e44260ad5d3bad63d96ebe1fac0363399642ee3f282612d64565b6136357f55435dd261a4b9b3364963f7738a7a662ad9c84396d64be3365284bb7f0a504183612d64565b60c0805473ffffffffffffffffffffffffffffffffffffffff8087167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560c18054928616929091169190911790556040517f0f7ba11d4e9d02c6ec9175a0134522c2f112de7cfdb2cea3f888e7eeae24c9dd906136ba908690613d7e565b60405180910390a17f1431075dc15e519b4b9b0b93ea4f7f3e2a34fde5e39f552bb899b7ea4bda1341836040516136f19190613d7e565b60405180910390a150505050565b6060610bb373ffffffffffffffffffffffffffffffffffffffff831660145b6060600061372d8360026146f6565b61373890600261470e565b67ffffffffffffffff81111561375057613750613ed9565b6040519080825280601f01601f19166020018201604052801561377a576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106137b1576137b1614450565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061381457613814614450565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006138508460026146f6565b61385b90600161470e565b90505b60018111156138f8577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061389c5761389c614450565b1a60f81b8282815181106138b2576138b2614450565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c936138f181614d19565b905061385e565b50831561246b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614d53565b61393a816133fe565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606073ffffffffffffffffffffffffffffffffffffffff83163b6139ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614dbd565b6000808473ffffffffffffffffffffffffffffffffffffffff16846040516139f69190614dcd565b600060405180830381855af49150503d8060008114613a31576040519150601f19603f3d011682016040523d82523d6000602084013e613a36565b606091505b5091509150613a5e8282604051806060016040528060278152602001614dda60279139613ad2565b95945050505050565b600054610100900460ff16613aa8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119490614b94565b609780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60608315613ae157508161246b565b61246b8383815115613af65781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111949190614c9e565b6040518060800160405280613b3d613b58565b81526000602082018190526040820181905260609091015290565b6040518061040001604052806020906020820280368337509192915050565b60008083601f840112613b8c57613b8c600080fd5b50813567ffffffffffffffff811115613ba757613ba7600080fd5b602083019150836001820283011115613bc257613bc2600080fd5b9250929050565b60008060208385031215613bdf57613bdf600080fd5b823567ffffffffffffffff811115613bf957613bf9600080fd5b613c0585828601613b77565b92509250509250929050565b7fffffffff0000000000000000000000000000000000000000000000000000000081165b811461130157600080fd5b8035610bb381613c11565b600060208284031215613c6057613c60600080fd5b6000613c6c8484613c40565b949350505050565b8015155b82525050565b60208101610bb38284613c74565b80613c35565b8035610bb381613c8c565b600060208284031215613cb257613cb2600080fd5b6000613c6c8484613c92565b80613c78565b60208101610bb38284613cbe565b63ffffffff8116613c35565b8035610bb381613cd2565b60008060008060608587031215613d0257613d02600080fd5b6000613d0e8787613c92565b9450506020613d1f87828801613cde565b935050604085013567ffffffffffffffff811115613d3f57613d3f600080fd5b613d4b87828801613b77565b95989497509550505050565b600073ffffffffffffffffffffffffffffffffffffffff8216610bb3565b613c7881613d57565b60208101610bb38284613d75565b60008083601f840112613da157613da1600080fd5b50813567ffffffffffffffff811115613dbc57613dbc600080fd5b602083019150836020820283011115613bc257613bc2600080fd5b600080600080600060608688031215613df257613df2600080fd5b6000613dfe8888613cde565b955050602086013567ffffffffffffffff811115613e1e57613e1e600080fd5b613e2a88828901613d8c565b9450945050604086013567ffffffffffffffff811115613e4c57613e4c600080fd5b613e5888828901613d8c565b92509250509295509295909350565b613c3581613d57565b8035610bb381613e67565b60008060408385031215613e9157613e91600080fd5b6000613e9d8585613c92565b9250506020613eae85828601613e70565b9150509250929050565b600060208284031215613ecd57613ecd600080fd5b6000613c6c8484613e70565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff82111715613f4c57613f4c613ed9565b6040525050565b6000613f5e60405190565b905061265d8282613f08565b600067ffffffffffffffff821115613f8457613f84613ed9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011660200192915050565b82818337506000910152565b6000613fd2613fcd84613f6a565b613f53565b905082815260208101848484011115613fed57613fed600080fd5b613ff8848285613fb3565b509392505050565b600082601f83011261401457614014600080fd5b8135613c6c848260208601613fbf565b6000806040838503121561403a5761403a600080fd5b60006140468585613e70565b925050602083013567ffffffffffffffff81111561406657614066600080fd5b613eae85828601614000565b63ffffffff8116613c78565b6060810161408c8286614072565b6140996020830185614072565b613c6c6040830184614072565b60006101c0828403121561270557612705600080fd5b60006101c082840312156140d2576140d2600080fd5b6000613c6c84846140a6565b806110008101831015610bb357610bb3600080fd5b8061aea08101831015610bb357610bb3600080fd5b60008060008060008061bf00878903121561412557614125600080fd5b60006141318989613c92565b965050602061414289828a01613cde565b955050604061415389828a016140de565b94505061104061416589828a016140f3565b93505061bee087013567ffffffffffffffff81111561418657614186600080fd5b61419289828a01613b77565b92509250509295509295509295565b60ff8116613c35565b8035610bb3816141a1565b600080600080600080600060a0888a0312156141d3576141d3600080fd5b873567ffffffffffffffff8111156141ed576141ed600080fd5b6141f98a828b01613d8c565b9750975050602061420c8a828b016141aa565b955050604061421d8a828b01613cde565b945050606061422e8a828b01613c92565b935050608088013567ffffffffffffffff81111561424e5761424e600080fd5b61425a8a828b01613d8c565b925092505092959891949750929550565b6000806040838503121561428157614281600080fd5b600061428d8585613cde565b9250506020613eae85828601613c92565b6000602082840312156142b3576142b3600080fd5b6000613c6c8484613cde565b600080600080608085870312156142d8576142d8600080fd5b60006142e48787613e70565b94505060206142f587828801613e70565b935050604061430687828801613e70565b925050606061431787828801613e70565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b63ffffffff918216919081169082820390811115610bb357610bb3614323565b63ffffffff918216919081169082820190811115610bb357610bb3614323565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b63ffffffff91821691166000826143da576143da614392565b500690565b81810381811115610bb357610bb3614323565b60006143fe8285613cbe565b60208201915061440e8284613cbe565b5060200192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361444957614449614323565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6040810161448d8285614072565b61246b6020830184614072565b6000610bb38260e01b90565b613c7863ffffffff821661449a565b60006144c18286613cbe565b6020820191506144d18285613cbe565b6020820191506144e182846144a6565b506004019392505050565b608081016144fa8287614072565b6145076020830186613cbe565b6145146040830185613cbe565b613a5e6060830184614072565b63ffffffff91821691908116908282029081169081811461454457614544614323565b5092915050565b602f81526000602082017f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636581527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015291505b5060400190565b60208082528101610bb38161454b565b602c81526000602082017f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682081527f64656c656761746563616c6c0000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb3816145b8565b602c81526000602082017f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682081527f6163746976652070726f78790000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614622565b603881526000602082017f555550535570677261646561626c653a206d757374206e6f742062652063616c81527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000602082015291506145a1565b60208082528101610bb38161468c565b81810280821583820485141761454457614544614323565b80820180821115610bb357610bb3614323565b82818337505050565b60007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561475c5761475c600080fd5b60208302925061476d838584614721565b50500190565b6000613c6c82848661472a565b600063ffffffff82165b91508161479957614799614323565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181527f647920696e697469616c697a6564000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb3816147bf565b600060ff8216610bb3565b613c7881614829565b60208101610bb38284614834565b6000808585111561485e5761485e600080fd5b8386111561486e5761486e600080fd5b5050820193919092039150565b8035828260208210156148bc576148b77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff836020036008021b90565b831692505b505092915050565b80357fffffffff0000000000000000000000000000000000000000000000000000000016828260048210156148bc576148b77fffffffff00000000000000000000000000000000000000000000000000000000836004036008021b90565b600061476d838584613fb3565b6000613c6c828486614922565b601e81526000602082017f6465707468206d75737420626520696e2072616e6765205b302c203130290000815291505b5060200190565b60208082528101610bb38161493c565b63ffffffff1660007fffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000001820161444957614449614323565b60006149c68383613cbe565b505060200190565b60006149d8825190565b602083018060005b83811015614a055781516149f488826149ba565b9750602083019250506001016149e0565b509495945050505050565b600061246b82846149ce565b8051610bb381613c8c565b600060208284031215614a3c57614a3c600080fd5b6000613c6c8484614a1c565b602e81526000602082017f45524331393637557067726164653a206e657720696d706c656d656e7461746981527f6f6e206973206e6f742055555053000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614a48565b602981526000602082017f45524331393637557067726164653a20756e737570706f727465642070726f7881527f6961626c65555549440000000000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614ab2565b63ffffffff9182169116600082614b3557614b35614392565b500490565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614b3a565b60005b83811015614bbf578181015183820152602001614ba7565b50506000910152565b6000614bd2825190565b614be0818560208601614ba4565b9290920192915050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526017016000614c1c8285614bc8565b7f206973206d697373696e6720726f6c652000000000000000000000000000000081526011019150613c6c8284614bc8565b6000614c58825190565b808452602084019350614c6f818560208601614ba4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920192915050565b6020808252810161246b8184614c4e565b602d81526000602082017f455243313936373a206e657720696d706c656d656e746174696f6e206973206e81527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614caf565b60008161478a565b60208082527f537472696e67733a20686578206c656e67746820696e73756666696369656e749101908152600061496c565b60208082528101610bb381614d21565b602681526000602082017f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f81527f6e74726163740000000000000000000000000000000000000000000000000000602082015291506145a1565b60208082528101610bb381614d63565b600061246b8284614bc856fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c7fa17d80fdbd69b1e4fc8d40d93535cd86b15508104668e8809fbb985456e1c64736f6c63430008130033",
        "sourceMap": "569:1264:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2673:3121:4;;;;;;;;;;-1:-1:-1;2673:3121:4;;;;;:::i;:::-;;:::i;:::-;;1565:266:2;;;;;;;;;;-1:-1:-1;1565:266:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;503:18:3;;;;;;;;;;-1:-1:-1;503:18:3;;;;;;;;905:50:4;;;;;;;;;;-1:-1:-1;905:50:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5800:977::-;;;;;;;;;;-1:-1:-1;5800:977:4;;;;;:::i;:::-;;:::i;717:30::-;;;;;;;;;;-1:-1:-1;717:30:4;;;;;;;;;;;;;;;:::i;4708:129:36:-;;;;;;;;;;-1:-1:-1;4708:129:36;;;;;:::i;:::-;4782:7;4808:12;;;:6;:12;;;;;:22;;;;4708:129;767:66:3;;;;;;;;;;;;807:26;767:66;;8838:1187:4;;;;;;;;;;-1:-1:-1;8838:1187:4;;;;;:::i;:::-;;:::i;5133:145:36:-;;;;;;;;;;-1:-1:-1;5133:145:36;;;;;:::i;:::-;;:::i;6242:214::-;;;;;;;;;;-1:-1:-1;6242:214:36;;;;;:::i;:::-;;:::i;3317:197:43:-;;;;;;;;;;-1:-1:-1;3317:197:43;;;;;:::i;:::-;;:::i;3763:222::-;;;;;;:::i;:::-;;:::i;855:44:4:-;;;;;;;;;;-1:-1:-1;855:44:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3006:131:43:-;;;;;;;;;;;;;:::i;2161:115:3:-;;;;;;;;;;;;;:::i;11289:1035:4:-;;;;;;;;;;-1:-1:-1;11289:1035:4;;;;;:::i;:::-;;:::i;6895:1937::-;;;;;;;;;;-1:-1:-1;6895:1937:4;;;;;:::i;:::-;;:::i;10125:193::-;;;;;;;;;;-1:-1:-1;10125:193:4;;;;;:::i;:::-;;:::i;12330:1303::-;;;;;;;;;;-1:-1:-1;12330:1303:4;;;;;:::i;:::-;;:::i;3203:145:36:-;;;;;;;;;;-1:-1:-1;3203:145:36;;;;;:::i;:::-;3289:4;3312:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;;;;3203:145;2045:110:3;;;;;;;;;;;;;:::i;2324:49:36:-;;;;;;;;;;-1:-1:-1;2324:49:36;2369:4;2324:49;;10591:253:4;;;;;;;;;;-1:-1:-1;10591:253:4;;;;;:::i;:::-;;:::i;10972:311::-;;;;;;;;;;-1:-1:-1;10972:311:4;;;;;:::i;:::-;;:::i;800:49::-;;;;;;;;;;-1:-1:-1;800:49:4;;;;;:::i;:::-;;;;;;;;;;;;;;5558:147:36;;;;;;;;;;-1:-1:-1;5558:147:36;;;;;:::i;:::-;;:::i;922:62:3:-;;;;;;;;;;;;960:24;922:62;;10850:116:4;;;;;;;;;;-1:-1:-1;10850:116:4;;;;;:::i;:::-;;:::i;610:66:3:-;;;;;;;;;;;;650:26;610:66;;918:555:2;;;;;;;;;;-1:-1:-1;918:555:2;;;;;:::i;:::-;;:::i;753:40:4:-;;;;;;;;;;-1:-1:-1;753:40:4;;;;;;;;2673:3121;1713:1:3;3312:29:36;;:12;;:29;;;;;1683:33:3;:72;;;;-1:-1:-1;929:10:45;3289:4:36;3312:29;;;:12;;:29;:12;:29;;;;;1720:35:3;1683:72;1679:125;;;1778:15;;;;;;;;;;;;;;1679:125;2751:18:4::1;:16;:18::i;:::-;2780:16;2798:15:::0;2815:23:::1;2840:21:::0;2863:12:::1;2891:31;2912:9;;2891:20;:31::i;:::-;2779:143;;;;;;;;;;3015:15;3050:16;3033:14;:33;;;;:::i;:::-;:37;::::0;3069:1:::1;3033:37;:::i;:::-;3015:55:::0;-1:-1:-1;273:4:16::1;3084:27:4;::::0;::::1;;3080:73;;;3120:33;;;;;;;;;;;;;;3080:73;3167:35;273:4:16;3167:16:4::0;:35:::1;:::i;:::-;:40;;::::0;3163:90:::1;;3216:37;;;;;;;;;;;;;;3163:90;3285:12;3267:14;:30;;;3263:62;;3306:19;;;;;;;;;;;;;;3263:62;3371:3;3339:29;;::::0;::::1;:12;:29;:::i;:::-;:35;3335:67;;;3383:19;;;;;;;;;;;;;;3335:67;3445:7;3426:14;3416:25;;;:36;3412:69;;3461:20;;;;;;;;;;;;;;3412:69;3497:21;3508:9;;3497:10;:21::i;:::-;3492:85;;3541:25;;;;;;;;;;;;;;3492:85;3591:4:::0;3587:2032:::1;;4287:13;4282:401;315:2:16;4306:25:4::0;::::1;4282:401;;;4360:12;4375:55;4389:9:::0;;4424:5;4400:21:::1;4420:1;315:2:16;4400:21:4;:::i;:::-;:29;;;;;;:::i;:::-;4375:13;:55::i;:::-;4360:70:::0;-1:-1:-1;4452:9:4;;4448:221:::1;;4519:4;4525;4502:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4492:39;;;;;;4485:46;;4448:221;;;4612:4;4618:30;4642:5;4618:23;:30::i;:::-;4595:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4585:65;;;;;;4578:72;;4448:221;-1:-1:-1::0;4333:7:4;::::1;::::0;::::1;:::i;:::-;;;;4282:401;;;;3587:2032;;;4885:17:::0;;4907:37;315:2:16::1;4907:37:4::0;;;;4885:17;;;::::1;4907:37;4885:17;:60:::0;4881:728:::1;;5222:34;5259:21;:13;:19;:21::i;:::-;5222:58:::0;-1:-1:-1;5298:19:4::1;5320:22;5222:58:::0;5337:4;5320:16:::1;:22::i;:::-;5298:44;;1139:1:16;5373:3:4;:9;;;5385:1;5373:13;;;;:::i;:::-;5372:38;;;;:::i;:::-;5360:50;;:9;::::0;::::1;:50:::0;5455:12:::1;5360:3:::0;5455:10:::1;:12::i;:::-;5428:13;5442:3;:9;;;5428:24;;;;;;;;;:::i;:::-;;:39:::0;5485:41:::1;:13;5508:3:::0;5513:12;5485:22:::1;:41::i;:::-;5550:44;5575:3;:7;;;5584:3;:9;;;5550:44;;;;;;;:::i;:::-;;;;;;;;4947:662;;4881:728;5691:8;5701:4;5707:8;5674:42;;;;;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;;;;;5664:53;;5674:42:::1;5664:53:::0;;::::1;::::0;5628:33:::1;::::0;::::1;;::::0;;;:15:::1;:33:::0;;;;;;:89;5732:55:::1;::::0;::::1;::::0;5644:16;;5762:8;;5772:4;;5778:8;;5732:55:::1;:::i;:::-;;;;;;;;2741:3053;;;;;;2673:3121:::0;;:::o;1565:266:2:-;1716:4;1743:41;;;;;:81;;;1788:36;1812:11;1788:23;:36::i;:::-;1736:88;1565:266;-1:-1:-1;;1565:266:2:o;905:50:4:-;;;;;;;;;;;;;;;-1:-1:-1;905:50:4;:::o;5800:977::-;1713:1:3;3312:29:36;;:12;;:29;;;;;1683:33:3;:72;;;;-1:-1:-1;929:10:45;3289:4:36;3312:29;;;:12;;:29;:12;:29;;;;;1720:35:3;1683:72;1679:125;;;1778:15;;;;;;;;;;;;;;1679:125;5914:18:4::1;:16;:18::i;:::-;5943:16;5961:15:::0;5978:23:::1;6003:21:::0;6026:12:::1;6054:31;6075:9;;6054:20;:31::i;:::-;5942:143;;;;;;;;;;273:4:16;6100:16:4;:35;;;;:::i;:::-;:40;;::::0;6096:90:::1;;6149:37;;;;;;;;;;;;;;6096:90;6237:20;6256:1;273:4:16;6237:20:4;:::i;:::-;6200:57;;:33;6217:16:::0;6200:14;:33:::1;:::i;:::-;:57;;;6196:128;;6280:33;;;;;;;;;;;;;;6196:128;6403:7;6412:8;6422:12;6386:49;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6376:60;;;;;;6337:15;:35;6353:14;6370:1;6353:18;;;;:::i;:::-;6337:35;;;;;;;;;;;;;;;;:99;6333:157;;6459:20;;;;;;;;;;;;;;6333:157;6505:21;6516:9;;6505:10;:21::i;:::-;6500:85;;6549:25;;;;;;;;;;;;;;6500:85;6658:8;6668:4;273::16;6641:50:4;;;;;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;;;;;6631:61;;6641:50:::1;6631:61:::0;;::::1;::::0;6595:33:::1;::::0;::::1;;::::0;;;:15:::1;:33:::0;;;;;;:97;6707:63:::1;::::0;::::1;::::0;6611:16;;6737:8;;6747:4;;273::16::1;::::0;6707:63:4::1;:::i;:::-;;;;;;;;5904:873;;;;;5800:977:::0;;;;:::o;8838:1187::-;8980:18;:16;:18::i;:::-;9028:1;9012:17;;;9008:31;;9031:8;;;9008:31;9083:33;;;9079:47;;9118:8;;;9079:47;9204:17;;:36;;273:4:16;;9204:17:4;;;;;:36;:::i;:::-;9184:56;;:16;:56;;;9180:70;;9242:8;;;9180:70;9326:34;9363:21;:13;:19;:21::i;:::-;9326:58;;9399:9;9394:356;9414:16;;;9394:356;;;9494:18;9542:10;;9553:1;9542:13;;;;;;;:::i;:::-;;;;;;;9557:5;;9563:1;9557:8;;;;;;;:::i;:::-;;;;;;;273:4:16;9525:59:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;9515:70;;9525:59;9515:70;;;;9603:33;;;;;;;:15;:33;;;;;;9515:70;;-1:-1:-1;9603:47:4;;9599:90;;9659:30;;;;;;;;;;;;;;9599:90;9703:36;273:4:16;9703:36:4;;:::i;:::-;;;9437:313;9432:3;;;;;:::i;:::-;;;;9394:356;;;;9759:19;9781:17;9792:5;;9781:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9781:3:4;;:17;-1:-1:-1;;9781:10:4;:17;-1:-1:-1;9781:17:4:i;:::-;9759:39;;1139:1:16;9821:3:4;:9;;;9833:1;9821:13;;;;:::i;:::-;9820:38;;;;:::i;:::-;9808:50;;:9;;;:50;9895:12;9808:3;9895:10;:12::i;:::-;9868:13;9882:3;:9;;;9868:24;;;;;;;;;:::i;:::-;;:39;9917:41;:13;9940:3;9945:12;9917:22;:41::i;:::-;9974:44;9999:3;:7;;;10008:3;:9;;;9974:44;;;;;;;:::i;:::-;;;;;;;;8970:1055;;8838:1187;;;;;:::o;5133:145:36:-;4782:7;4808:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5246:25:::1;5257:4;5263:7;5246:10;:25::i;:::-;5133:145:::0;;;:::o;6242:214::-;6337:23;;;929:10:45;6337:23:36;6329:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6423:26;6435:4;6441:7;6423:11;:26::i;:::-;6242:214;;:::o;3317:197:43:-;1881:23;1898:6;1881:23;1889:4;1881:23;1873:80;;;;;;;;;;;;:::i;:::-;1995:6;1971:30;;:20;1364:66:40;1588:65;;;;1509:151;1971:20:43;:30;;;1963:87;;;;;;;;;;;;:::i;:::-;3400:36:::1;3418:17;3400;:36::i;:::-;3487:12;::::0;;3497:1:::1;3487:12:::0;;;::::1;::::0;::::1;::::0;;;3446:61:::1;::::0;3468:17;;3487:12;3446:21:::1;:61::i;:::-;3317:197:::0;:::o;3763:222::-;1881:23;1898:6;1881:23;1889:4;1881:23;1873:80;;;;;;;;;;;;:::i;:::-;1995:6;1971:30;;:20;1364:66:40;1588:65;;;;1509:151;1971:20:43;:30;;;1963:87;;;;;;;;;;;;:::i;:::-;3880:36:::1;3898:17;3880;:36::i;:::-;3926:52;3948:17;3967:4;3973;3926:21;:52::i;3006:131::-:0;3084:7;2324:4;2316:23;2333:6;2316:23;;2308:92;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1364:66:40::1;3006:131:43::0;:::o;2161:115:3:-;807:26;2802:16:36;2813:4;2802:10;:16::i;:::-;2227:6:3::1;:14:::0;;;::::1;::::0;;2256:13:::1;::::0;::::1;::::0;2236:5:::1;::::0;2256:13:::1;2161:115:::0;:::o;11289:1035:4:-;11371:4;11391:24;;;;:31;;11387:45;;11424:8;;;11387:45;11476:11;273:4:16;11490:19:4;;;;:7;:19;:::i;:::-;:38;;;;:::i;:::-;11476:52;-1:-1:-1;11538:23:4;11476:52;11564:19;;;;:7;:19;:::i;:::-;:26;;;;:::i;:::-;11621:33;;;11600:18;11621:33;;;:15;:33;;;;;;11538:52;;-1:-1:-1;11668:15:4;;;11664:29;;11685:8;;;11664:29;11800:24;;;;11785:12;11834:382;315:2:16;11854:21:4;;11834:382;;;11998:1;11985:9;;;;;11984:15;12003:1;11984:20;11980:226;;12058:4;12064:7;:19;;12084:1;12064:22;;;;;;;:::i;:::-;;;;;12041:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12031:57;;;;;;12024:64;;11980:226;;;12161:7;:19;;12181:1;12161:22;;;;;;;:::i;:::-;;;;;12185:4;12144:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12134:57;;;;;;12127:64;;11980:226;11877:3;;;;:::i;:::-;;;;11834:382;;;-1:-1:-1;12274:16:4;;;;12292:4;12298:16;;;;;;;;:::i;:::-;12257:58;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12247:69;;;;;;12233:10;:83;12225:92;;;;;;11289:1035;;;:::o;6895:1937::-;1713:1:3;3312:29:36;;:12;;:29;;;;;1683:33:3;:72;;;;-1:-1:-1;929:10:45;3289:4:36;3312:29;;;:12;;:29;:12;:29;;;;;1720:35:3;1683:72;1679:125;;;1778:15;;;;;;;;;;;;;;1679:125;7189:18:4::1;:16;:18::i;:::-;7218:17;7237:16:::0;7255:23:::1;7280:21:::0;7303::::1;7340:31;7361:9;;7340:20;:31::i;:::-;7217:154;;;;;;;;;;273:4:16;7386:16:4;:35;;;;:::i;:::-;:40;;::::0;7382:90:::1;;7435:37;;;;;;;;;;;;;;7382:90;7523:31;7553:1;523:6:16;7523:31:4;:::i;:::-;7486:68;;:33;7503:16:::0;7486:14;:33:::1;:::i;:::-;:68;;;7482:139;;7577:33;;;;;;;;;;;;;;7482:139;7700:8;7710;7720:12;7683:50;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7673:61;;;;;;7634:15;:35;7650:14;7667:1;7650:18;;;;:::i;:::-;7634:35;;;;;;;;;;;;;;;;:100;7630:158;;7757:20;;;;;;;;;;;;;;7630:158;7823:13;7801:18;:5;:16;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;7801:16:4::1;::::0;-1:-1:-1;;7801:18:4:i:1;:::-;:35;7797:92;;7859:19;;;;;;;;;;;;;;7797:92;7904:31;7925:9;;7904:20;:31::i;:::-;7899:95;;7958:25;;;;;;;;;;;;;;7899:95;8009:9;8004:822;731:3:16;8024:24:4::0;::::1;8004:822;;;8078:24;8101:1;731:3:16;8078:24:4;:::i;:::-;8073:29;;:1;:29;8069:399;;8122:18;8143:13;8157:1;8143:16;;;;;;;:::i;:::-;;;;315:2:16;8143:35:4;;;;8122:56;;8201:9;8196:186;315:2:16;8216:21:4::0;::::1;8196:186;;;8306:13;8320:1;8306:16;;;;;;;:::i;:::-;;;;8347:1:::0;8323:21:::1;8343:1;315:2:16;8323:21:4;:::i;:::-;:25;;;;;;:::i;:::-;8306:43;;;;;;;:::i;:::-;;;;;8351:10;8289:73;;;;;;;;;:::i;:::-;;;;;;;;;;;;;8279:84;;;;;;8266:97;;8239:3;;;;;:::i;:::-;;;;8196:186;;;;8417:5;8423:1;8417:8;;;;;;;:::i;:::-;;;;;8403:10;:22;8399:54;;8434:19;;;;;;;;;;;;;;8399:54;8104:364;8069:399;8481:16;8500:6:::0;;:60:::1;;8521:13:::0;8535:5:::1;8539:1;8535::::0;:5:::1;:::i;:::-;8521:20;;;;;;;:::i;:::-;;;;315:2:16;8521:39:4;;;;8500:60;;;8509:9;8500:60;8481:79:::0;-1:-1:-1;8574:12:4::1;8615:20;273:4:16;8615:1:4::0;:20:::1;:::i;:::-;8596:39;::::0;::::1;::::0;::::1;;:::i;:::-;8574:62;;8702:8;8712:5;8718:1;8712:8;;;;;;;:::i;:::-;;;;;273:4:16;8685:54:4;;;;;;;;;;:::i;:::-;;::::0;;;;;::::1;::::0;;;;;;8675:65;;8685:54:::1;8675:65:::0;;::::1;::::0;8650:22:::1;::::0;::::1;;::::0;;;:15:::1;:22:::0;;;;;:90;8759:56:::1;8666:5:::0;8778:8;8788:5;8794:1;8788:8:::1;::::0;::::1;;;;;:::i;:::-;;;;;273:4:16;8759:56:4;;;;;;;;;:::i;:::-;;;;;;;;8055:771;;8050:3;;;;;:::i;:::-;;;;8004:822;;;;7179:1653;;;;;6895:1937:::0;;;;;;:::o;10125:193::-;650:26:3;2802:16:36;2813:4;2802:10;:16::i;:::-;10224:15:4::1;:34:::0;;;::::1;;::::0;::::1;;::::0;;10273:38:::1;::::0;::::1;::::0;::::1;::::0;10224:34;;10273:38:::1;:::i;:::-;;;;;;;;10125:193:::0;;:::o;12330:1303::-;12584:13;12598:8;12584:23;;;;;;;;;:::i;:::-;;;12575:3;;12558:21;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12548:32;;;;;;:59;12544:127;;12630:30;;;;;;;;;;;;;;12544:127;12708:13;12731:14;12744:1;12731:3;:14;:::i;:::-;12708:38;-1:-1:-1;12770:11:4;12791:204;12798:36;;;;273:4:16;12799:26:4;;;;12798:36;;;;12791:204;;12854:6;:11;;12864:1;12854:11;12850:25;;12867:8;;;12850:25;12928:8;;;;:::i;:::-;;-1:-1:-1;12950:34:4;;-1:-1:-1;273:4:16;12958:26:4;;;;12950:34;;:::i;:::-;;;12791:204;;;13131:26;13151:6;315:2:16;13131:26:4;:::i;:::-;13109:48;;;;13101:57;;;;;;13183:16;13168:12;13209:322;13229:22;;;13209:322;;;13329:1;13316:9;;;;;13315:15;13334:1;13315:20;13311:210;;13389:4;13395:11;;13407:1;13395:14;;;;;;;:::i;:::-;;;;;;;13372:38;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13362:49;;;;;;13355:56;;13311:210;;;13484:11;;13496:1;13484:14;;;;;;;:::i;:::-;;;;;;;13500:4;13467:38;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13457:49;;;;;;13450:56;;13311:210;13253:3;;;;:::i;:::-;;;;13209:322;;;;13552:3;;13556:6;13552:11;;;;;;;;;:::i;:::-;;;;;;;13544:4;:19;13540:87;;13586:30;;;;;;;;;;;;;;13540:87;12534:1099;;;12330:1303;;;;;;;:::o;2045:110:3:-;807:26;2802:16:36;2813:4;2802:10;:16::i;:::-;2109:6:3::1;:13:::0;;;::::1;2118:4;2109:13;::::0;;2137:11:::1;::::0;::::1;::::0;2109:6:::1;::::0;2137:11:::1;2045:110:::0;:::o;10591:253:4:-;650:26:3;2802:16:36;2813:4;2802:10;:16::i;:::-;10710:25:4::1;:54:::0;;;::::1;;::::0;::::1;;::::0;;10779:58:::1;::::0;::::1;::::0;::::1;::::0;10710:54;;10779:58:::1;:::i;10972:311::-:0;11071:4;11107:22;;;;11143:16;;;11139:30;;11161:8;;;11139:30;11246:29;;;;10972:311;-1:-1:-1;;10972:311:4:o;5558:147:36:-;4782:7;4808:12;;;:6;:12;;;;;:22;;;2802:16;2813:4;2802:10;:16::i;:::-;5672:26:::1;5684:4;5690:7;5672:11;:26::i;10850:116:4:-:0;10911:7;10937:13;:22;;;;;;;;;;:::i;:::-;;;;10850:116;-1:-1:-1;;10850:116:4:o;918:555:2:-;3268:19:42;3291:13;;;;;;3290:14;;3336:34;;;;-1:-1:-1;3354:12:42;;3369:1;3354:12;;;;:16;3336:34;3335:108;;;-1:-1:-1;3415:4:42;1476:19:44;:23;;;3376:66:42;;-1:-1:-1;3425:12:42;;;;;:17;3376:66;3314:201;;;;;;;;;;;;:::i;:::-;3525:12;:16;;;;3540:1;3525:16;;;3551:65;;;;3585:13;:20;;;;;;;;3551:65;1111:22:2::1;::::0;::::1;1103:31;;;::::0;::::1;;1192:24;:22;:24::i;:::-;1284:86;1303:16;1321:26;1349:8;1359:10;1284:18;:86::i;:::-;1381:40;2369:4:36;1412:8:2::0;1381:10:::1;:40::i;:::-;1431:35;650:26:3;1457:8:2;1431:10;:35::i;:::-;3640:14:42::0;3636:99;;;3686:5;3670:21;;;;;;3710:14;;;;;;3670:13;;3710:14;:::i;:::-;;;;;;;;3636:99;3258:483;918:555:2;;;;:::o;2338:120:3:-;2394:6;;;;2390:62;;;2423:18;;;;;;;;;;;;;;2390:62;2338:120::o;2186:613:16:-;2264:16;;;;;2448:18;2462:3;2458;2448:9;;:18;:::i;:::-;2440:27;;;:::i;:::-;2426:3;2402:18;2416:3;2412;2402:9;;:18;:::i;:::-;2394:27;;;:::i;:::-;2386:43;;:82;;-1:-1:-1;2555:18:16;2569:3;2565;2555:9;;:18;:::i;:::-;2547:27;;;:::i;:::-;2533:3;2509:18;2523:3;2519;2509:9;;:18;:::i;:::-;2501:27;;;:::i;:::-;2493:43;;:82;;-1:-1:-1;2615:18:16;2629:3;2625;2615:9;;:18;:::i;:::-;2608:26;;;:::i;:::-;2601:34;;;-1:-1:-1;2672:18:16;2686:3;2682;2672:9;;:18;:::i;:::-;2665:26;;;:::i;:::-;2658:34;;;-1:-1:-1;2775:18:16;2789:3;2785;2775:9;;:18;:::i;:::-;2767:27;;;:::i;:::-;2753:3;2729:18;2743:3;2739;2729:9;;:18;:::i;:::-;2721:27;;;:::i;:::-;2713:36;;:43;;:82;2705:91;;2698:98;;2186:613;;;;;;;;:::o;13639:151:4:-;13732:15;;:27;;13698:4;;;;13732:15;;;;;:27;;13753:5;;;;13732:27;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13714:45:4;;13639:151;-1:-1:-1;;;;;13639:151:4:o;3346:332:16:-;3420:7;3588:9;;3620:6;:1;3624:2;3620:6;:::i;:::-;3598:28;;1019:3;3598:28;:::i;:::-;:33;;3629:2;3598:33;:::i;:::-;3588:79;3655:5;:1;3659;3655:5;:::i;:::-;3654:12;;3664:2;3654:12;:::i;:::-;3632:34;;1019:3;3632:34;:::i;:::-;3588:79;;;;;;;:::i;:::-;3580:88;;;:::i;:::-;3554:3;3475:9;;3507:6;:1;3511:2;3507:6;:::i;:::-;3485:28;;1019:3;3485:28;:::i;:::-;3475:73;3536:6;:1;3540:2;3536:6;:::i;:::-;3514:28;;1019:3;3514:28;:::i;:::-;:33;;3545:2;3514:33;:::i;:::-;3475:73;;;;;;;:::i;:::-;3467:82;;;:::i;:::-;3459:98;;:210;;-1:-1:-1;3346:332:16;;;;;;:::o;1439:1529:15:-;1499:7;1611:5;1620:1;1611:10;1607:1355;;-1:-1:-1;1652:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;1607:1355::-;1740:5;1749:1;1740:10;1736:1226;;-1:-1:-1;1781:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;1736:1226::-;1869:5;1878:1;1869:10;1865:1097;;-1:-1:-1;1910:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;1865:1097::-;1998:5;2007:1;1998:10;1994:968;;-1:-1:-1;2039:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;1994:968::-;2127:5;2136:1;2127:10;2123:839;;-1:-1:-1;2168:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;2123:839::-;2256:5;2265:1;2256:10;2252:710;;-1:-1:-1;2297:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;2252:710::-;2385:5;2394:1;2385:10;2381:581;;-1:-1:-1;2426:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;2381:581::-;2514:5;2523:1;2514:10;2510:452;;-1:-1:-1;2555:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;2510:452::-;2643:5;2652:1;2643:10;2639:323;;-1:-1:-1;2684:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;2639:323::-;2772:5;2781:1;2772:10;2768:194;;-1:-1:-1;2813:66:15;;1439:1529;-1:-1:-1;1439:1529:15:o;2768:194::-;2911:40;;;;;;;;;;:::i;2768:194::-;1439:1529;;;:::o;2171:281:14:-;2227:14;;:::i;:::-;2268:13;;;;;;;;;2253:12;;;:28;;;;2301:8;;;;;2291:7;;;:18;2331:10;;;;2319:9;;;:22;2268:13;2351:95;2374:3;:12;;;2370:16;;:1;:16;;;2351:95;;;2422:4;:13;;;;;;;;;;:::i;:::-;;;2407:9;;:12;;;;;;;;;;:::i;:::-;;;;:28;2388:3;;;;:::i;:::-;;;;2351:95;;;;2171:281;;;:::o;3658:532::-;3833:8;;;;3734:19;;;;3806:4;;3851:167;3871:1;3859:8;;;;;;;;3858:14;;:19;;3851:167;;3931:10;;:13;;;;;;;;;;:::i;:::-;;;;;3946:8;3914:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3904:52;;;;;;3893:63;;3986:1;3970:17;;:4;:10;;;3981:1;3970:13;;;;;;;;;:::i;:::-;;;;:17;4001:6;4006:1;4001:6;;:::i;:::-;;;3851:167;;;4027:10;;4043:8;;4027:13;;;;;;;;;;:::i;:::-;;;;:24;4061:8;;;:13;;4073:1;;4061:8;:13;;4073:1;;4061:13;:::i;:::-;;;;;;;;4093;;;;4088:18;;;;;;;-1:-1:-1;4084:70:14;;4138:5;:1;4142;4138:5;:::i;:::-;4122:21;;:13;;;:21;4084:70;4178:5;:1;4182;4178:5;:::i;:::-;4163:20;3658:532;-1:-1:-1;;;;;;3658:532:14:o;3142:287::-;3198:7;3217:22;3256:4;:13;;;3242:28;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3242:28:14;;3217:53;;3285:8;3280:92;3303:4;:13;;;3299:17;;:1;:17;;;3280:92;;;3348:10;;:13;;;;;;;;;;:::i;:::-;;;;;3337:5;3343:1;3337:8;;;;;;;;;;:::i;:::-;;;;;;;;;;:24;3318:3;;;;:::i;:::-;;;;3280:92;;;;3415:5;3398:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;3388:34;;;;;;3381:41;;;3142:287;;;:::o;2691:306::-;2802:15;;;;;2786:13;;;:31;;2838:10;;;;2871:12;;;;2786:31;2858:25;;;;;;2827:21;;;;;;;;;2786:31;;;;2827:21;;;;;2858:25;;;;;;;2786:13;2893:98;2916:12;2912:16;;:1;:16;;;2893:98;;;2965:12;;:15;;;;;;;;;;:::i;:::-;;;;;2949:4;:10;;2960:1;2949:13;;;;;;;;;:::i;:::-;;:31;2930:3;;;;:::i;:::-;;;;2893:98;;;;2691:306;;;:::o;2903:213:36:-;2988:4;3011:58;;;3026:43;3011:58;;:98;;-1:-1:-1;1183:36:48;1168:51;;;;3073:36:36;1060:166:48;4511:1599:14;4640:8;;;;;4733:13;;4592:19;;4733:13;;4757:17;4733:13;4640:8;4757:17;:::i;:::-;;;;;-1:-1:-1;4784:8:14;;4828:1176;4835:10;;;;4828:1176;;-1:-1:-1;4982:1:14;4966:12;;;;;;;;4965:18;;;5094:15;;5113:13;4965:18;5113:5;:13;:::i;:::-;5112:20;;;;5094:38;;5151:8;5146:466;5169:8;5165:12;;:1;:12;;;5146:466;;;5202:12;5232:13;5267:5;:10;;5276:1;5267:10;5263:265;;5309:6;;;;:42;;5334:6;5349:1;5341:5;5345:1;5341;:5;:::i;:::-;:9;;;;:::i;:::-;5334:17;;;;;;;;;;:::i;:::-;;;;;;;5309:42;;;5318:10;;:13;;;;;;;;;;:::i;:::-;;;;;5309:42;5301:51;-1:-1:-1;5382:6:14;5389:5;5393:1;5389;:5;:::i;:::-;5382:13;;;;;;;;;;:::i;:::-;;;;;;;5374:21;;5263:265;;;5449:6;5456:5;5460:1;5456;:5;:::i;:::-;5449:13;;;;;;;;;;:::i;:::-;;;;;;;5442:20;;5492:6;5503:1;5499;:5;;;;:::i;:::-;:9;;5507:1;5499:9;:::i;:::-;5492:17;;;;;;;;;;:::i;:::-;;;;;;;5484:25;;5263:265;5584:4;5590:5;5567:29;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5557:40;;;;;;5545:6;5552:1;5545:9;;;;;;;;;;:::i;:::-;;;;;;:52;;;;;5184:428;;5179:3;;;;;:::i;:::-;;;;5146:466;;;-1:-1:-1;5729:1:14;5721:9;;:18;;;;5717:227;;5775:6;5782:9;5790:1;5782:5;:9;:::i;:::-;5775:17;;;;;;;;;;:::i;:::-;;;;;;;5759:4;:10;;;5770:1;5759:13;;;;;;;;;:::i;:::-;;;;:33;5717:227;;;5817:5;:10;;5826:1;5817:10;5813:131;;5912:10;;5928:1;;5912:13;;;;;;;;;;:::i;:::-;;;;:17;5813:131;5965:8;-1:-1:-1;5965:8:14;5987:6;5992:1;5987:6;;:::i;:::-;;;4847:1157;4828:1176;;;6021:4;:13;;;6017:17;;:1;:17;;;6013:65;;;6050:17;;;:13;;;:17;6013:65;-1:-1:-1;6102:1:14;4511:1599;-1:-1:-1;;;;;4511:1599:14:o;3642:103:36:-;3708:30;3719:4;929:10:45;3708::36;:30::i;7791:233::-;3289:4;3312:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;7869:149;;7912:12;;;;:6;:12;;;;;;;;:29;;;;;;;;;;:36;;;;7944:4;7912:36;;;7994:12;929:10:45;;850:96;7994:12:36;7967:40;;7985:7;7967:40;;7979:4;7967:40;;;;;;;;;;7791:233;;:::o;8195:234::-;3289:4;3312:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;8274:149;;;8348:5;8316:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;:37;;;;;;8372:40;929:10:45;;8316:12:36;;8372:40;;8348:5;8372:40;8195:234;;:::o;1479:80:2:-;650:26:3;2802:16:36;2813:4;2802:10;:16::i;2884:974:40:-;1023:66;3330:59;;;3326:526;;;3405:37;3424:17;3405:18;:37::i;3326:526::-;3506:17;3477:61;;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3477:63:40;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3473:302;;3704:56;;;;;;;;;;:::i;3473:302::-;1364:66;3590:28;;3582:82;;;;;;;;;;;;:::i;:::-;3541:138;3788:53;3806:17;3825:4;3831:9;3788:17;:53::i;421:826:15:-;509:7;;758:24;781:1;731:3:16;758:24:15;:::i;:::-;744:39;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;744:39:15;;718:65;;798:9;793:157;817:24;840:1;731:3:16;817:24:15;:::i;:::-;813:28;;:1;:28;793:157;;;901:6;913:1;908;:6;;901:14;;;;;;;:::i;:::-;;;;;917:6;930:1;925:6;;;924:12;917:20;;;;;;;:::i;:::-;;;;;884:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;874:65;;;;;;862:6;869:1;862:9;;;;;;;;:::i;:::-;;;;;;;;;;:77;843:3;;;;:::i;:::-;;;;793:157;;;-1:-1:-1;959:11:15;973:24;996:1;731:3:16;973:24:15;:::i;:::-;959:38;;;;1007:208;1014:8;;1007:208;;1043:9;1038:144;1062:3;1058:1;:7;1038:144;;;1129:6;1141:1;1136;:6;;1129:14;;;;;;;;:::i;:::-;;;;;;;1145:6;1158:1;1153;:6;;1163:1;1152:12;1145:20;;;;;;;;:::i;:::-;;;;;;;1112:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1102:65;;;;;;1090:6;1097:1;1090:9;;;;;;;;:::i;:::-;;;;;;;;;;:77;1067:3;;;;:::i;:::-;;;;1038:144;;;-1:-1:-1;1203:1:15;1195:9;1007:208;;;1231:6;1238:1;1231:9;;;;;;;;:::i;:::-;;;;;;;1224:16;;;;421:826;;;:::o;13796:171:4:-;13899:25;;:37;;13865:4;;;;13899:25;;;;;:37;;13930:5;;;;13899:37;:::i;1042:67:43:-;5363:13:42;;;;;;;5355:69;;;;;;;;;;;;:::i;1297:329:4:-;5363:13:42;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;1495:22:4::1;:20;:22::i;:::-;1527:92;1556:16;1574:26;1602:8;1612:6;1527:28;:92::i;4026:501:36:-:0;3289:4;3312:12;;;:6;:12;;;;;;;;:29;;;;;;;;;;;;;4109:412;;4297:39;4328:7;4297:30;:39::i;:::-;4407:49;4446:4;4453:2;4407:30;:49::i;:::-;4204:274;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;4152:358;;;;;;;;:::i;1751:281:40:-;1476:19:44;;;;1824:106:40;;;;;;;;;;;;:::i;:::-;1364:66;1940:85;;;;;;;;;;;;;;;1751:281::o;2424:288::-;2562:29;2573:17;2562:10;:29::i;:::-;2619:1;2605:4;:11;:15;:28;;;;2624:9;2605:28;2601:105;;;2649:46;2671:17;2690:4;2649:21;:46::i;1827:107:3:-;5363:13:42;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;1895:32:3::1;:30;:32::i;1719:948:4:-:0;5363:13:42;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;1935:30:4::1;::::0;::::1;1927:39;;;::::0;::::1;;2044:40;::::0;::::1;2036:49;;;::::0;::::1;;2174:22;::::0;::::1;2166:31;;;::::0;::::1;;2267:20;::::0;::::1;2259:29;;;::::0;::::1;;2349:31;960:24:3;2373:6:4;2349:10;:31::i;:::-;2390:35;807:26:3;2416:8:4;2390:10;:35::i;:::-;2436:15;:34:::0;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;;;2480:25:::1;:54:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2549:38:::1;::::0;::::1;::::0;::::1;::::0;2454:16;;2549:38:::1;:::i;:::-;;;;;;;;2602:58;2633:26;2602:58;;;;;;:::i;:::-;;;;;;;;1719:948:::0;;;;:::o;2146:149:47:-;2204:13;2236:52;2248:22;;;333:2;1557:437;1632:13;1657:19;1689:10;1693:6;1689:1;:10;:::i;:::-;:14;;1702:1;1689:14;:::i;:::-;1679:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1679:25:47;;1657:47;;1714:15;:6;1721:1;1714:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;1739;:6;1746:1;1739:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;1769:9:47;1781:10;1785:6;1781:1;:10;:::i;:::-;:14;;1794:1;1781:14;:::i;:::-;1769:26;;1764:128;1801:1;1797;:5;1764:128;;;1835:8;1844:5;1852:3;1844:11;1835:21;;;;;;;:::i;:::-;;;;1823:6;1830:1;1823:9;;;;;;;;:::i;:::-;;;;:33;;;;;;;;;;-1:-1:-1;1880:1:47;1870:11;;;;;1804:3;;;:::i;:::-;;;1764:128;;;-1:-1:-1;1909:10:47;;1901:55;;;;;;;;;;;;:::i;2138:152:40:-;2204:37;2223:17;2204:18;:37::i;:::-;2256:27;;;;;;;;;;;2138:152;:::o;6780:455::-;6863:12;1476:19:44;;;;6887:88:40;;;;;;;;;;;;:::i;:::-;7046:12;7060:23;7087:6;:19;;7107:4;7087:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7045:67;;;;7129:99;7165:7;7174:10;7129:99;;;;;;;;;;;;;;;;;:35;:99::i;:::-;7122:106;6780:455;-1:-1:-1;;;;;6780:455:40:o;1940:99:3:-;5363:13:42;;;;;;;5355:69;;;;;;;;;;;;:::i;:::-;2018:6:3::1;:14:::0;;;::::1;::::0;;1940:99::o;7438:295:44:-;7584:12;7612:7;7608:119;;;-1:-1:-1;7642:10:44;7635:17;;7608:119;7683:33;7691:10;7703:12;7898:17;;:21;7894:379;;8126:10;8120:17;8182:15;8169:10;8165:2;8161:19;8154:44;7894:379;8249:12;8242:20;;;;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;716:552:77:-;773:8;783:6;833:3;826:4;818:6;814:17;810:27;800:122;;841:79;569:1264:2;;;841:79:77;-1:-1:-1;941:20:77;;984:18;973:30;;970:117;;;1006:79;569:1264:2;;;1006:79:77;1120:4;1112:6;1108:17;1096:29;;1174:3;1166:4;1158:6;1154:17;1144:8;1140:32;1137:41;1134:128;;;1181:79;569:1264:2;;;1181:79:77;716:552;;;;;:::o;1274:527::-;1344:6;1352;1401:2;1389:9;1380:7;1376:23;1372:32;1369:119;;;1407:79;569:1264:2;;;1407:79:77;1527:31;;1585:18;1574:30;;1571:117;;;1607:79;569:1264:2;;;1607:79:77;1720:64;1776:7;1767:6;1756:9;1752:22;1720:64;:::i;:::-;1702:82;;;;1498:296;1274:527;;;;;:::o;1962:120::-;1883:66;1872:78;;2034:23;2027:5;2024:34;2014:62;;2072:1;2069;2062:12;2088:137;2158:20;;2187:32;2158:20;2187:32;:::i;2231:327::-;2289:6;2338:2;2326:9;2317:7;2313:23;2309:32;2306:119;;;2344:79;569:1264:2;;;2344:79:77;2464:1;2489:52;2533:7;2513:9;2489:52;:::i;:::-;2479:62;2231:327;-1:-1:-1;;;;2231:327:77:o;2660:109::-;2634:13;;2627:21;2741;2736:3;2729:34;2660:109;;:::o;2775:210::-;2900:2;2885:18;;2913:65;2889:9;2951:6;2913:65;:::i;3074:122::-;3165:5;3147:24;1625:190:46;3202:139:77;3273:20;;3302:33;3273:20;3302:33;:::i;3347:329::-;3406:6;3455:2;3443:9;3434:7;3430:23;3426:32;3423:119;;;3461:79;569:1264:2;;;3461:79:77;3581:1;3606:53;3651:7;3631:9;3606:53;:::i;3765:118::-;3870:5;3852:24;1625:190:46;3889:222:77;4020:2;4005:18;;4033:71;4009:9;4077:6;4033:71;:::i;4489:120::-;4466:10;4455:22;;4561:23;4390:93;4615:137;4685:20;;4714:32;4685:20;4714:32;:::i;4758:815::-;4845:6;4853;4861;4869;4918:2;4906:9;4897:7;4893:23;4889:32;4886:119;;;4924:79;569:1264:2;;;4924:79:77;5044:1;5069:53;5114:7;5094:9;5069:53;:::i;:::-;5059:63;;5015:117;5171:2;5197:52;5241:7;5232:6;5221:9;5217:22;5197:52;:::i;:::-;5187:62;;5142:117;5326:2;5315:9;5311:18;5298:32;5357:18;5349:6;5346:30;5343:117;;;5379:79;569:1264:2;;;5379:79:77;5492:64;5548:7;5539:6;5528:9;5524:22;5492:64;:::i;:::-;4758:815;;;;-1:-1:-1;5474:82:77;-1:-1:-1;;;;4758:815:77:o;5711:96::-;5748:7;5656:42;5645:54;;5777:24;5579:126;5813:118;5900:24;5918:5;5900:24;:::i;5937:222::-;6068:2;6053:18;;6081:71;6057:9;6125:6;6081:71;:::i;6517:568::-;6590:8;6600:6;6650:3;6643:4;6635:6;6631:17;6627:27;6617:122;;6658:79;569:1264:2;;;6658:79:77;-1:-1:-1;6758:20:77;;6801:18;6790:30;;6787:117;;;6823:79;569:1264:2;;;6823:79:77;6937:4;6929:6;6925:17;6913:29;;6991:3;6983:4;6975:6;6971:17;6961:8;6957:32;6954:41;6951:128;;;6998:79;569:1264:2;;;7091:1077:77;7221:6;7229;7237;7245;7253;7302:2;7290:9;7281:7;7277:23;7273:32;7270:119;;;7308:79;569:1264:2;;;7308:79:77;7428:1;7453:52;7497:7;7477:9;7453:52;:::i;:::-;7443:62;;7399:116;7582:2;7571:9;7567:18;7554:32;7613:18;7605:6;7602:30;7599:117;;;7635:79;569:1264:2;;;7635:79:77;7748:80;7820:7;7811:6;7800:9;7796:22;7748:80;:::i;:::-;7730:98;;;;7525:313;7905:2;7894:9;7890:18;7877:32;7936:18;7928:6;7925:30;7922:117;;;7958:79;569:1264:2;;;7958:79:77;8071:80;8143:7;8134:6;8123:9;8119:22;8071:80;:::i;:::-;8053:98;;;;7848:313;7091:1077;;;;;;;;:::o;8174:122::-;8247:24;8265:5;8247:24;:::i;8302:139::-;8373:20;;8402:33;8373:20;8402:33;:::i;8447:474::-;8515:6;8523;8572:2;8560:9;8551:7;8547:23;8543:32;8540:119;;;8578:79;569:1264:2;;;8578:79:77;8698:1;8723:53;8768:7;8748:9;8723:53;:::i;:::-;8713:63;;8669:117;8825:2;8851:53;8896:7;8887:6;8876:9;8872:22;8851:53;:::i;:::-;8841:63;;8796:118;8447:474;;;;;:::o;8927:329::-;8986:6;9035:2;9023:9;9014:7;9010:23;9006:32;9003:119;;;9041:79;569:1264:2;;;9041:79:77;9161:1;9186:53;9231:7;9211:9;9186:53;:::i;9493:180::-;9541:77;9538:1;9531:88;9638:4;9635:1;9628:15;9662:4;9659:1;9652:15;9679:281;9473:7;9477:2;9457:14;;9453:28;9754:6;9750:40;9892:6;9880:10;9877:22;9856:18;9844:10;9841:34;9838:62;9835:88;;;9903:18;;:::i;:::-;9939:2;9932:22;-1:-1:-1;;9679:281:77:o;9966:129::-;10000:6;10027:20;73:2;67:9;;7:75;10027:20;10017:30;;10056:33;10084:4;10076:6;10056:33;:::i;10101:307::-;10162:4;10252:18;10244:6;10241:30;10238:56;;;10274:18;;:::i;:::-;9473:7;9477:2;9457:14;;9453:28;10396:4;10386:15;;10101:307;-1:-1:-1;;10101:307:77:o;10414:146::-;10511:6;10506:3;10501;10488:30;-1:-1:-1;10552:1:77;10534:16;;10527:27;10414:146::o;10566:423::-;10643:5;10668:65;10684:48;10725:6;10684:48;:::i;:::-;10668:65;:::i;:::-;10659:74;;10756:6;10749:5;10742:21;10794:4;10787:5;10783:16;10832:3;10823:6;10818:3;10814:16;10811:25;10808:112;;;10839:79;569:1264:2;;;10839:79:77;10929:54;10976:6;10971:3;10966;10929:54;:::i;:::-;10649:340;10566:423;;;;;:::o;11008:338::-;11063:5;11112:3;11105:4;11097:6;11093:17;11089:27;11079:122;;11120:79;569:1264:2;;;11120:79:77;11237:6;11224:20;11262:78;11336:3;11328:6;11321:4;11313:6;11309:17;11262:78;:::i;11352:652::-;11429:6;11437;11486:2;11474:9;11465:7;11461:23;11457:32;11454:119;;;11492:79;569:1264:2;;;11492:79:77;11612:1;11637:53;11682:7;11662:9;11637:53;:::i;:::-;11627:63;;11583:117;11767:2;11756:9;11752:18;11739:32;11798:18;11790:6;11787:30;11784:117;;;11820:79;569:1264:2;;;11820:79:77;11925:62;11979:7;11970:6;11959:9;11955:22;11925:62;:::i;12010:115::-;4466:10;4455:22;;12095:23;4390:93;12131:430;12312:2;12297:18;;12325:69;12301:9;12367:6;12325:69;:::i;:::-;12404:70;12470:2;12459:9;12455:18;12446:6;12404:70;:::i;:::-;12484;12550:2;12539:9;12535:18;12526:6;12484:70;:::i;12738:241::-;12820:5;12861:3;12852:6;12847:3;12843:16;12839:26;12836:113;;;12868:79;569:1264:2;;;12985:402:77;13080:6;13129:3;13117:9;13108:7;13104:23;13100:33;13097:120;;;13136:79;569:1264:2;;;13136:79:77;13256:1;13281:89;13362:7;13342:9;13281:89;:::i;13413:251::-;13517:6;13552:15;13538:30;;13535:39;-1:-1:-1;13532:126:77;;;13577:79;569:1264:2;;;13694:279:77;13824:6;13859:17;13845:32;;13842:41;-1:-1:-1;13839:128:77;;;13886:79;569:1264:2;;;13979:1273:77;14164:6;14172;14180;14188;14196;14204;14253:5;14241:9;14232:7;14228:23;14224:35;14221:122;;;14262:79;569:1264:2;;;14262:79:77;14382:1;14407:53;14452:7;14432:9;14407:53;:::i;:::-;14397:63;;14353:117;14509:2;14535:52;14579:7;14570:6;14559:9;14555:22;14535:52;:::i;:::-;14525:62;;14480:117;14636:2;14662:80;14734:7;14725:6;14714:9;14710:22;14662:80;:::i;:::-;14652:90;;14607:145;14791:4;14819:106;14917:7;14908:6;14897:9;14893:22;14819:106;:::i;:::-;14809:116;;14762:173;15002:5;14991:9;14987:21;14974:35;15036:18;15028:6;15025:30;15022:117;;;15058:79;569:1264:2;;;15058:79:77;15171:64;15227:7;15218:6;15207:9;15203:22;15171:64;:::i;:::-;15153:82;;;;14945:300;13979:1273;;;;;;;;:::o;15350:118::-;15333:4;15322:16;;15421:22;15258:86;15474:135;15543:20;;15572:31;15543:20;15572:31;:::i;15615:1365::-;15761:6;15769;15777;15785;15793;15801;15809;15858:3;15846:9;15837:7;15833:23;15829:33;15826:120;;;15865:79;569:1264:2;;;15865:79:77;15985:31;;16043:18;16032:30;;16029:117;;;16065:79;569:1264:2;;;16065:79:77;16178:80;16250:7;16241:6;16230:9;16226:22;16178:80;:::i;:::-;16160:98;;;;15956:312;16307:2;16333:51;16376:7;16367:6;16356:9;16352:22;16333:51;:::i;:::-;16323:61;;16278:116;16433:2;16459:52;16503:7;16494:6;16483:9;16479:22;16459:52;:::i;:::-;16449:62;;16404:117;16560:2;16586:53;16631:7;16622:6;16611:9;16607:22;16586:53;:::i;:::-;16576:63;;16531:118;16716:3;16705:9;16701:19;16688:33;16748:18;16740:6;16737:30;16734:117;;;16770:79;569:1264:2;;;16770:79:77;16883:80;16955:7;16946:6;16935:9;16931:22;16883:80;:::i;:::-;16865:98;;;;16659:314;15615:1365;;;;;;;;;;:::o;16986:472::-;17053:6;17061;17110:2;17098:9;17089:7;17085:23;17081:32;17078:119;;;17116:79;569:1264:2;;;17116:79:77;17236:1;17261:52;17305:7;17285:9;17261:52;:::i;:::-;17251:62;;17207:116;17362:2;17388:53;17433:7;17424:6;17413:9;17409:22;17388:53;:::i;17464:327::-;17522:6;17571:2;17559:9;17550:7;17546:23;17542:32;17539:119;;;17577:79;569:1264:2;;;17577:79:77;17697:1;17722:52;17766:7;17746:9;17722:52;:::i;17797:765::-;17883:6;17891;17899;17907;17956:3;17944:9;17935:7;17931:23;17927:33;17924:120;;;17963:79;569:1264:2;;;17963:79:77;18083:1;18108:53;18153:7;18133:9;18108:53;:::i;:::-;18098:63;;18054:117;18210:2;18236:53;18281:7;18272:6;18261:9;18257:22;18236:53;:::i;:::-;18226:63;;18181:118;18338:2;18364:53;18409:7;18400:6;18389:9;18385:22;18364:53;:::i;:::-;18354:63;;18309:118;18466:2;18492:53;18537:7;18528:6;18517:9;18513:22;18492:53;:::i;:::-;18482:63;;18437:118;17797:765;;;;;;;:::o;18568:180::-;18616:77;18613:1;18606:88;18713:4;18710:1;18703:15;18737:4;18734:1;18727:15;18754:200;4466:10;4455:22;;;;;;;;18882:9;;;;18904:20;;18901:46;;;18927:18;;:::i;18960:197::-;4466:10;4455:22;;;;;;;;19086:9;;;;19108:19;;19105:45;;;19130:18;;:::i;19163:180::-;19211:77;19208:1;19201:88;19308:4;19305:1;19298:15;19332:4;19329:1;19322:15;19349:173;4466:10;4455:22;;;;;19380:1;4455:22;19458:35;;19473:18;;:::i;:::-;-1:-1:-1;19507:9:77;;19349:173::o;19528:194::-;19659:9;;;19681:11;;;19678:37;;;19695:18;;:::i;19976:397::-;20116:3;20131:75;20202:3;20193:6;20131:75;:::i;:::-;20231:2;20226:3;20222:12;20215:19;;20244:75;20315:3;20306:6;20244:75;:::i;:::-;-1:-1:-1;20344:2:77;20335:12;;19976:397;-1:-1:-1;;19976:397:77:o;20379:233::-;20418:3;20487:66;20480:5;20477:77;20474:103;;20557:18;;:::i;:::-;-1:-1:-1;20604:1:77;20593:13;;20379:233::o;20618:180::-;20666:77;20663:1;20656:88;20763:4;20760:1;20753:15;20787:4;20784:1;20777:15;20804:324;20959:2;20944:18;;20972:69;20948:9;21014:6;20972:69;:::i;:::-;21051:70;21117:2;21106:9;21102:18;21093:6;21051:70;:::i;21236:94::-;21274:7;21303:21;21318:5;21212:3;21208:15;;21134:96;21336:153;21439:43;4466:10;4455:22;;21439:43;:::i;21495:533::-;21661:3;21676:75;21747:3;21738:6;21676:75;:::i;:::-;21776:2;21771:3;21767:12;21760:19;;21789:75;21860:3;21851:6;21789:75;:::i;:::-;21889:2;21884:3;21880:12;21873:19;;21902:73;21971:3;21962:6;21902:73;:::i;:::-;-1:-1:-1;22000:1:77;21991:11;;21495:533;-1:-1:-1;;;21495:533:77:o;22034:545::-;22245:3;22230:19;;22259:69;22234:9;22301:6;22259:69;:::i;:::-;22338:72;22406:2;22395:9;22391:18;22382:6;22338:72;:::i;:::-;22420;22488:2;22477:9;22473:18;22464:6;22420:72;:::i;:::-;22502:70;22568:2;22557:9;22553:18;22544:6;22502:70;:::i;22585:275::-;4466:10;4455:22;;;;;;;;22727:9;;;4455:22;;;;22805:24;;;22795:58;;22833:18;;:::i;:::-;22632:228;22585:275;;;;:::o;23281:366::-;23508:2;22972:19;;23423:3;23024:4;23015:14;;23181:34;23158:58;;23250:17;23245:2;23233:15;;23226:42;23437:74;-1:-1:-1;23520:93:77;-1:-1:-1;23638:2:77;23629:12;;23281:366::o;23653:419::-;23857:2;23870:47;;;23842:18;;23934:131;23842:18;23934:131;:::i;24315:366::-;24542:2;22972:19;;24457:3;23024:4;23015:14;;24218:34;24195:58;;24287:14;24282:2;24270:15;;24263:39;24471:74;-1:-1:-1;24554:93:77;24078:231;24687:419;24891:2;24904:47;;;24876:18;;24968:131;24876:18;24968:131;:::i;25349:366::-;25576:2;22972:19;;25491:3;23024:4;23015:14;;25252:34;25229:58;;25321:14;25316:2;25304:15;;25297:39;25505:74;-1:-1:-1;25588:93:77;25112:231;25721:419;25925:2;25938:47;;;25910:18;;26002:131;25910:18;26002:131;:::i;26395:366::-;26622:2;22972:19;;26537:3;23024:4;23015:14;;26286:34;26263:58;;26355:26;26350:2;26338:15;;26331:51;26551:74;-1:-1:-1;26634:93:77;26146:243;26767:419;26971:2;26984:47;;;26956:18;;27048:131;26956:18;27048:131;:::i;27192:410::-;27337:9;;;;27499;;27532:15;;;27526:22;;27479:83;27456:139;;27575:18;;:::i;27608:191::-;27737:9;;;27759:10;;;27756:36;;;27772:18;;:::i;28097:98::-;28181:6;28176:3;28171;28158:30;28097:98;;;:::o;28231:573::-;28377:3;28526:66;28518:6;28515:78;28512:165;;;28596:79;569:1264:2;;;28596:79:77;28708:4;28700:6;28696:17;28686:27;;28723:43;28759:6;28754:3;28747:5;28723:43;:::i;:::-;-1:-1:-1;;28782:16:77;;28231:573::o;28810:355::-;28982:3;29004:135;29135:3;29126:6;29118;29004:135;:::i;29171:169::-;29209:3;4466:10;4455:22;;29232:23;29223:32;-1:-1:-1;29223:32:77;29264:41;;29285:18;;:::i;:::-;-1:-1:-1;29321:13:77;;;29171:169::o;29585:366::-;29812:2;22972:19;;29727:3;23024:4;23015:14;;29486:34;29463:58;;29555:16;29550:2;29538:15;;29531:41;29741:74;-1:-1:-1;29824:93:77;29346:233;29957:419;30161:2;30174:47;;;30146:18;;30238:131;30146:18;30238:131;:::i;30539:154::-;30595:9;15333:4;15322:16;;30628:59;15258:86;30699:143;30792:43;30829:5;30792:43;:::i;30848:234::-;30985:2;30970:18;;30998:77;30974:9;31048:6;30998:77;:::i;31334:469::-;31439:9;31450;31488:8;31476:10;31473:24;31470:111;;;31500:79;569:1264:2;;;31500:79:77;31606:6;31596:8;31593:20;31590:107;;;31616:79;569:1264:2;;;31616:79:77;-1:-1:-1;;31719:31:77;;;31772:25;;;;;-1:-1:-1;31334:469:77:o;32116:552::-;32350:22;;32279:3;32308:5;32397:2;32386:14;;32383:278;;;32468:169;32553:66;32523:6;32519:2;32515:15;32512:1;32508:23;32087:16;;32003:107;32468:169;32445:5;32424:227;32415:236;;32383:278;32213:455;;32116:552;;;;:::o;32674:548::-;32906:22;;1883:66;1872:78;32836:3;32865:5;32953:1;32942:13;;32939:276;;;33023:168;33107:66;33077:6;33074:1;33070:14;33067:1;33063:22;32087:16;;32003:107;33403:327;33517:3;33636:56;33685:6;33680:3;33673:5;33636:56;:::i;33736:291::-;33876:3;33898:103;33997:3;33988:6;33980;33898:103;:::i;34207:350::-;34430:2;22972:19;;34349:3;23024:4;23015:14;;34169:32;34146:56;;34359:74;-1:-1:-1;34438:93:77;-1:-1:-1;34552:2:77;34543:12;;34207:350::o;34559:403::-;34759:2;34768:47;;;34744:18;;34828:131;34744:18;34828:131;:::i;34964:159::-;4466:10;4455:22;35002:3;35052:21;;;35049:47;;35076:18;;:::i;35465:183::-;35542:10;35559:54;35609:3;35601:6;35559:54;:::i;:::-;-1:-1:-1;;35641:4:77;35632:14;;35465:183::o;35783:728::-;35920:3;35945:54;35993:5;35216:12;;35125:106;35945:54;35345:4;35336:14;;36210:7;36237:1;36222:272;36247:6;36244:1;36241:13;36222:272;;;36315:6;36309:13;36338:71;36405:3;36390:13;36338:71;:::i;:::-;36331:78;-1:-1:-1;35748:4:77;35739:14;;36418:70;-1:-1:-1;;36269:1:77;36262:9;36222:272;;;-1:-1:-1;36506:3:77;;35783:728;-1:-1:-1;;;;;35783:728:77:o;36513:323::-;36675:3;36693:125;36814:3;36805:6;36693:125;:::i;36838:131::-;36916:13;;36934:33;36916:13;36934:33;:::i;36971:327::-;37041:6;37086:2;37074:9;37065:7;37061:23;37057:32;37054:119;;;37092:79;569:1264:2;;;37092:79:77;37204:1;37225:64;37281:7;37261:9;37225:64;:::i;37523:350::-;37746:2;22972:19;;37665:3;23024:4;23015:14;;37436:34;37413:58;;37501:16;37496:2;37484:15;;37477:41;37675:74;-1:-1:-1;37754:93:77;37300:221;37875:403;38075:2;38084:47;;;38060:18;;38144:131;38060:18;38144:131;:::i;38498:350::-;38721:2;22972:19;;38640:3;23024:4;23015:14;;38416:34;38393:58;;38481:11;38476:2;38464:15;;38457:36;38650:74;-1:-1:-1;38729:93:77;38280:216;38850:403;39050:2;39059:47;;;39035:18;;39119:131;39035:18;39119:131;:::i;39255:162::-;4466:10;4455:22;;;;;39294:1;4455:22;39360:35;;39375:18;;:::i;:::-;-1:-1:-1;39406:9:77;;39255:162::o;39639:350::-;39862:2;22972:19;;39781:3;23024:4;23015:14;;39555:34;39532:58;;39620:13;39615:2;39603:15;;39596:38;39791:74;-1:-1:-1;39870:93:77;39419:218;39991:403;40191:2;40200:47;;;40176:18;;40260:131;40176:18;40260:131;:::i;41186:218::-;41263:1;41269:101;41283:6;41280:1;41277:13;41269:101;;;41351:11;;;41345:18;41332:11;;;41325:39;41305:2;41298:10;41269:101;;;-1:-1:-1;;41400:1:77;41382:16;;41375:27;41186:218::o;41406:370::-;41512:3;41536:39;41569:5;35216:12;;35125:106;41536:39;41681:65;41739:6;41734:3;41727:4;41720:5;41716:16;41681:65;:::i;:::-;41758:16;;;;;41406:370;-1:-1:-1;;41406:370:77:o;42327:943::-;40674:25;40651:49;;41086:2;41077:12;42709:3;42888:95;41077:12;42970:6;42888:95;:::i;:::-;41914:19;41891:43;;42320:2;42311:12;;-1:-1:-1;43157:95:77;42311:12;43239:6;43157:95;:::i;43272:357::-;43360:3;43384:39;43417:5;35216:12;;35125:106;43384:39;22972:19;;;23024:4;23015:14;;43428:78;;43511:65;43569:6;43564:3;43557:4;43550:5;43546:16;43511:65;:::i;:::-;9477:2;9457:14;9473:7;9453:28;43588:39;;;;;;-1:-1:-1;;43272:357:77:o;43631:297::-;43778:2;43787:47;;;43763:18;;43847:78;43763:18;43911:6;43847:78;:::i;44152:350::-;44375:2;22972:19;;44294:3;23024:4;23015:14;;44066:34;44043:58;;44131:15;44126:2;44114:15;;44107:40;44304:74;-1:-1:-1;44383:93:77;43930:220;44504:403;44704:2;44713:47;;;44689:18;;44773:131;44689:18;44773:131;:::i;44909:155::-;44948:3;44985:5;44967:24;1625:190:46;45242:350:77;45465:2;22972:19;;;45202:34;23015:14;;45179:58;;;45384:3;45473:93;45066:174;45594:403;45794:2;45803:47;;;45779:18;;45863:131;45779:18;45863:131;:::i;46214:350::-;46437:2;22972:19;;46356:3;23024:4;23015:14;;46135:34;46112:58;;46200:8;46195:2;46183:15;;46176:33;46366:74;-1:-1:-1;46445:93:77;45999:213;46566:403;46766:2;46775:47;;;46751:18;;46835:131;46751:18;46835:131;:::i;47431:259::-;47561:3;47579:93;47668:3;47659:6;47579:93;:::i",
        "linkReferences": {},
        "immutableReferences": {
            "35568": [
                {
                    "start": 4546,
                    "length": 32
                },
                {
                    "start": 4636,
                    "length": 32
                },
                {
                    "start": 4891,
                    "length": 32
                },
                {
                    "start": 4981,
                    "length": 32
                },
                {
                    "start": 5220,
                    "length": 32
                }
            ]
        }
    },
    "methodIdentifiers": {
        "DEFAULT_ADMIN_ROLE()": "a217fddf",
        "GUARDIAN_ROLE()": "24ea54f4",
        "PROVER_ROLE()": "dc9a4ef6",
        "TIMELOCK_ROLE()": "f288a2e2",
        "appendHistoricalMMR(uint32,bytes32[],bytes32[])": "282bf5c9",
        "freezeAll()": "99464c89",
        "frozen()": "054f7d9c",
        "getRoleAdmin(bytes32)": "248a9ca3",
        "grantRole(bytes32,address)": "2f2ff15d",
        "hasRole(bytes32,address)": "91d14854",
        "historicalMMR()": "529ad9f3",
        "historicalMMRPeaks(uint32)": "ef4fcb17",
        "historicalRoots(uint32)": "c6ca4753",
        "historicalVerifierAddress()": "fe9ccb60",
        "initialize(address,address,address,address)": "f8c8765e",
        "isBlockHashValid((uint32,bytes32,bytes32,uint32,bytes32[10]))": "6f193b83",
        "isRecentBlockHashValid(uint32,bytes32)": "c1f7cae2",
        "mmrRingBuffer(uint256)": "074144d6",
        "mmrVerifyBlockHash(bytes32[],uint8,uint32,bytes32,bytes32[])": "89ea365d",
        "proxiableUUID()": "52d1902d",
        "renounceRole(bytes32,address)": "36568abe",
        "revokeRole(bytes32,address)": "d547741f",
        "supportsInterface(bytes4)": "01ffc9a7",
        "unfreezeAll()": "66c5c4a0",
        "updateHistorical(bytes32,uint32,bytes32[128],bytes32[11][127],bytes)": "7225fb21",
        "updateOld(bytes32,uint32,bytes)": "11b63d01",
        "updateRecent(bytes)": "01ef3afa",
        "upgradeHistoricalSnarkVerifier(address)": "ac59e61c",
        "upgradeSnarkVerifier(address)": "853ead4a",
        "upgradeTo(address)": "3659cfe6",
        "upgradeToAndCall(address,bytes)": "4f1ef286",
        "verifierAddress()": "18bdffbb"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AxiomBlockVerificationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BlockHashIncorrect\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractIsFrozen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MerkleProofFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotProverRole\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotRecentEndBlock\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SNARKVerificationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StartingBlockNotMultipleOfBatchSize\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UpdatingIncorrectNumberOfBlocks\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"FreezeAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"len\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"MerkleMountainRangeEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"UnfreezeAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"prevHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numFinal\",\"type\":\"uint32\"}],\"name\":\"UpdateEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"UpgradeHistoricalSnarkVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"UpgradeSnarkVerifier\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GUARDIAN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIMELOCK_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"startBlockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"roots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"prevHashes\",\"type\":\"bytes32[]\"}],\"name\":\"appendHistoricalMMR\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"freezeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frozen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"historicalMMR\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"numPeaks\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"len\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"i\",\"type\":\"uint32\"}],\"name\":\"historicalMMRPeaks\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"historicalRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"historicalVerifierAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_historicalVerifierAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"timelock\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"claimedBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"prevHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"numFinal\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[10]\",\"name\":\"merkleProof\",\"type\":\"bytes32[10]\"}],\"internalType\":\"struct IAxiomV1Verifier.BlockHashWitness\",\"name\":\"witness\",\"type\":\"tuple\"}],\"name\":\"isBlockHashValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"claimedBlockHash\",\"type\":\"bytes32\"}],\"name\":\"isRecentBlockHashValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mmrRingBuffer\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"mmr\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8\",\"name\":\"bufferId\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"claimedBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"mmrVerifyBlockHash\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unfreezeAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nextRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nextNumFinal\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[128]\",\"name\":\"roots\",\"type\":\"bytes32[128]\"},{\"internalType\":\"bytes32[11][127]\",\"name\":\"endHashProofs\",\"type\":\"bytes32[11][127]\"},{\"internalType\":\"bytes\",\"name\":\"proofData\",\"type\":\"bytes\"}],\"name\":\"updateHistorical\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nextRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"nextNumFinal\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"proofData\",\"type\":\"bytes\"}],\"name\":\"updateOld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proofData\",\"type\":\"bytes\"}],\"name\":\"updateRecent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_historicalVerifierAddress\",\"type\":\"address\"}],\"name\":\"upgradeHistoricalSnarkVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_verifierAddress\",\"type\":\"address\"}],\"name\":\"upgradeSnarkVerifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verifierAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Axiom\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"MerkleMountainRangeEvent(uint32,uint32)\":{\"params\":{\"index\":\"The new index in the ring buffer storing the commitment to historicalMMR\",\"len\":\"The historicalMMR now stores commitment to blocks [0, 1024 * len)\"}},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"UpdateEvent(uint32,bytes32,bytes32,uint32)\":{\"params\":{\"numFinal\":\"The number of consecutive blocks in this batch, i.e., [startBlockNumber, startBlockNumber + numFinal) blocks are verified\",\"prevHash\":\"The parent hash of block `startBlockNumber`\",\"root\":\"The Merkle root of hash(i) for i in [0, 1024), where hash(i) is the blockhash of block `startBlockNumber + i` if i < numFinal,              Otherwise hash(i) = bytes32(0x0) if i >= numFinal\",\"startBlockNumber\":\"The block number of the first block in the batch\"}},\"UpgradeHistoricalSnarkVerifier(address)\":{\"params\":{\"newAddress\":\"The new address of the SNARK historical verifier contract\"}},\"UpgradeSnarkVerifier(address)\":{\"params\":{\"newAddress\":\"The new address of the SNARK verifier contract\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"appendHistoricalMMR(uint32,bytes32[],bytes32[])\":{\"details\":\"The blocks to append must have already been cached by Axiom.         startBlockNumber must equal historicalMMR.len * 1024, but we make it an input for faster reverts\",\"params\":{\"prevHashes\":\"prevHashes[i] is the parent hash of block `startBlockNumber + i * 1024`, for i = 0, ..., roots.length - 1. prevHashes and roots must have the same length.\",\"roots\":\"roots[i] is the Merkle root of the blockhashes of blocks [startBlockNumber + i * 1024, startBlockNumber + (i + 1) * 1024) for i = 0, ..., roots.length - 1\",\"startBlockNumber\":\"The block number of the first block to append\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"historicalMMRPeaks(uint32)\":{\"params\":{\"i\":\"The index, `peaks[i] = root(list[((len >> i) << i) - 2^i : ((len >> i) << i)])` if 2^i & len != 0, otherwise 0         where root(single element) = single element,         list is the variable length list where `list[i]` is the Merkle root of the binary tree with leaves the blockhashes of blocks [1024 * i, 1024 * (i + 1))\"}},\"isBlockHashValid((uint32,bytes32,bytes32,uint32,bytes32[10]))\":{\"details\":\"For block numbers within the last 256, use #isRecentBlockHashValid instead.\",\"params\":{\"witness\":\"The block hash to verify and the Merkle proof to verify it         witness.blockNumber is the block number to verify         witness.claimedBlockHash is the claimed blockhash of block witness.blockNumber         witness.prevHash is the prevHash stored in #historicalRoots(witness.blockNumber - witness.blockNumber % 1024)         witness.numFinal is the numFinal stored in #historicalRoots(witness.blockNumber - witness.blockNumber % 1024)         witness.merkleProof is the Merkle inclusion proof of witness.claimedBlockHash to the root stored in #historicalRoots(witness.blockNumber - witness.blockNumber % 1024)         witness.merkleProof[i] is the sibling of the Merkle node at depth 10 - i, for i = 0, ..., 10\"}},\"isRecentBlockHashValid(uint32,bytes32)\":{\"params\":{\"blockNumber\":\"The block number to verify\",\"claimedBlockHash\":\"The claimed blockhash of block blockNumber\"}},\"mmrVerifyBlockHash(bytes32[],uint8,uint32,bytes32,bytes32[])\":{\"details\":\"Use event logs to determine the correct bufferId and get the MMR at that index in the ring buffer.\",\"params\":{\"blockNumber\":\"The block number to verify\",\"bufferId\":\"The index in the ring buffer of #mmrRingBuffer\",\"claimedBlockHash\":\"The claimed blockhash of block blockNumber\",\"merkleProof\":\"The Merkle inclusion proof of claimedBlockHash to the corresponding peak in mmr. The correct peak is calculated from mmr.length and blockNumber.\",\"mmr\":\"The Merkle mountain range commited to in #mmrRingBuffer(bufferId), must be correct length\"}},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"updateHistorical(bytes32,uint32,bytes32[128],bytes32[11][127],bytes)\":{\"details\":\"endHashProofs is length HISTORICAL_NUM_ROOTS - 1 because the last endHash is provided in proofData\"},\"updateOld(bytes32,uint32,bytes)\":{\"details\":\"The contract checks that #historicalRoots(endBlockNumber + 1) == keccak256(endHash || nextRoot || nextNumFinal)         where endBlockNumber, endHash are derived from proofData.         nextRoot and nextNumFinal should be obtained by reading event logs. For old blocks nextNumFinal is _usually_ 1024.\",\"params\":{\"nextNumFinal\":\"The numFinal stored in #historicalRoots(endBlockNumber + 1)\",\"nextRoot\":\"The Merkle root stored in #historicalRoots(endBlockNumber + 1)\",\"proofData\":\"The raw bytes of a zero knowledge proof to be verified by the contract. Has same format as in #updateRecent except         endBlockNumber = startBlockNumber + 1023, so the block batch size is exactly 1024         mmr contains the keccak Merkle root of the full Merkle tree of depth 10, followed by zeros\"}},\"updateRecent(bytes)\":{\"params\":{\"proofData\":\"The raw bytes of a zero knowledge proof to be verified by the contract.         proofData contains public inputs/outputs of         (bytes32 prevHash, bytes32 endHash, uint32 startBlockNumber, uint32 endBlockNumber, bytes32[11] mmr)         where the proof verifies the blockhashes of blocks [startBlockNumber, endBlockNumber], endBlockNumber - startBlockNumber <= 1023         - startBlockNumber must be a multiple of 1024         - prevHash is the parent hash of block `startBlockNumber`,         - endHash is the blockhash of block `endBlockNumber`,         - mmr is the keccak Merkle mountain range of the blockhashes of blocks [startBlockNumber, endBlockNumber], ordered from depth 10 to depth 0\"}},\"upgradeHistoricalSnarkVerifier(address)\":{\"details\":\"We expect this should never need to be called since the historical verifier is only used for the initial batch import of historical block hashes.\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"Axiom V1\",\"version\":1},\"userdoc\":{\"errors\":{\"ContractIsFrozen()\":[{\"notice\":\"Error when trying to call contract while it is frozen\"}],\"NotProverRole()\":[{\"notice\":\"Error when trying to call contract from address without 'prover' role\"}]},\"events\":{\"FreezeAll()\":{\"notice\":\"Emitted when the `freezeAll` is called\"},\"MerkleMountainRangeEvent(uint32,uint32)\":{\"notice\":\"Emitted when the size of the historicalMMR changes.\"},\"UnfreezeAll()\":{\"notice\":\"Emitted when the `unfreezeAll` is called\"},\"UpdateEvent(uint32,bytes32,bytes32,uint32)\":{\"notice\":\"Emitted when a new batch of consecutive blocks is trustlessly verified and cached in the contract storage `historicalRoots`\"},\"UpgradeHistoricalSnarkVerifier(address)\":{\"notice\":\"Emitted when the SNARK #historicalVerifierAddress changes\"},\"UpgradeSnarkVerifier(address)\":{\"notice\":\"Emitted when the SNARK #verifierAddress changes\"}},\"kind\":\"user\",\"methods\":{\"GUARDIAN_ROLE()\":{\"notice\":\"Storage slot for the addresses with the permission of a 'guardian'.\"},\"PROVER_ROLE()\":{\"notice\":\"Storage slot for the addresses with the permission of a 'prover'.\"},\"TIMELOCK_ROLE()\":{\"notice\":\"Storage slot for the address with the permission of a 'timelock'.\"},\"appendHistoricalMMR(uint32,bytes32[],bytes32[])\":{\"notice\":\"Extended the stored historical Merkle Mountain Range with a multiple of 1024 blockhash commitments\"},\"constructor\":{\"notice\":\"Prevents the implementation contract from being initialized outside of the upgradeable proxy.\"},\"historicalMMR()\":{\"notice\":\"Returns metadata about the number of consecutive blocks from genesis stored in the contract         The Merkle mountain range stores a commitment to the variable length list where `list[i]` is the Merkle root of the binary tree with leaves the blockhashes of blocks [1024 * i, 1024 * (i + 1))\"},\"historicalMMRPeaks(uint32)\":{\"notice\":\"Returns the i-th Merkle root in the historical Merkle Mountain Range\"},\"historicalRoots(uint32)\":{\"notice\":\"Returns the hash of a batch of consecutive blocks previously verified by the contract\"},\"initialize(address,address,address,address)\":{\"notice\":\"Initializes the contract and the parent contracts once.\"},\"isBlockHashValid((uint32,bytes32,bytes32,uint32,bytes32[10]))\":{\"notice\":\"Verify the blockhash of block witness.blockNumber equals witness.claimedBlockHash by checking against Axiom's cache of #historicalRoots.\"},\"isRecentBlockHashValid(uint32,bytes32)\":{\"notice\":\"Verify the blockhash of block blockNumber equals claimedBlockHash. Assumes that blockNumber is within the last 256 most recent blocks.\"},\"mmrRingBuffer(uint256)\":{\"notice\":\"A ring buffer storing commitments to past historicalMMR states\"},\"mmrVerifyBlockHash(bytes32[],uint8,uint32,bytes32,bytes32[])\":{\"notice\":\"Verify the blockhash of block blockNumber equals claimedBlockHash by checking against Axiom's cache of historical Merkle mountain ranges in #mmrRingBuffer.\"},\"updateOld(bytes32,uint32,bytes)\":{\"notice\":\"Verify and store a batch of 1024 consecutive blocks,         where the latest block in the batch is verified against the blockhash cache in #historicalRoots\"},\"updateRecent(bytes)\":{\"notice\":\"Verify and store a batch of consecutive blocks, where the latest block in the batch is within the last 256 most recent blocks.\"},\"upgradeHistoricalSnarkVerifier(address)\":{\"notice\":\"Updates the address of the historical SNARK verifier contract, governed by a 'timelock'.\"},\"upgradeSnarkVerifier(address)\":{\"notice\":\"Updates the address of the SNARK verifier contract, governed by a 'timelock'.\"}},\"notice\":\"Core Axiom smart contract that verifies the validity of historical block hashes using SNARKs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AxiomV1.sol\":\"AxiomV1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1000000},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/AxiomV1.sol\":{\"keccak256\":\"0x9e195b21b07f5116a3fb1cfc35bb7adfe3cbd8776819805faadbf4955cb20125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c88e61bc308837b53af1b9ed3dee7374da6cbf909d6e865485a43806dc2f81e4\",\"dweb:/ipfs/QmVKqF4HFbkcnaLUf6F3HJDJgHpCUXMeMCTGSDk3k2fZBN\"]},\"contracts/AxiomV1Access.sol\":{\"keccak256\":\"0x888d141e45bf6f3d0481bd588b0746e124608c9cbe96f403c3bb97ecae8fdcdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3a45a0cf4b1d5b89b51b47e280bf42eb485d72ac72ee2e756070eeb5e721a23\",\"dweb:/ipfs/QmbKbvwCQFdwyNZzxgbEm7ma3oJkci5RiKqU8MR6LNGEuD\"]},\"contracts/AxiomV1Core.sol\":{\"keccak256\":\"0xcaae365313a9e1c1d880b5737fe4d12b56a70d34649b53fdf02b8ea5d3ac4095\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e380769dc2d500ac1e40c5c1d78ba1319f30a6730c8688ee0f1667e4576e5e30\",\"dweb:/ipfs/QmVnAvoWkz1jbrjcTcr2pRqGvqRWgXDwH3RFPvyxi88jfV\"]},\"contracts/interfaces/IAxiomV1.sol\":{\"keccak256\":\"0x440926ee7b7037eff1605bd27c71e1b0ff37078fe4347404febb91e8807a16a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f45f6c1632cbc05bed6a49c35958d419844ddb4012ffaca740b6ef413bd80f\",\"dweb:/ipfs/QmXAQkty7Lwth1qjmMXiPzEoWNUdzA1WnQgqSUBE4VQh6P\"]},\"contracts/interfaces/core/IAxiomV1Events.sol\":{\"keccak256\":\"0xe310f5ecf8c9ae19d84a0436a7dacb5147eea1e453fb042b862d4fd93cdcfe91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a4bfbb5c7567ef2a4497c74ecc180a4411077bd5bf78f62952956e15db91c4a\",\"dweb:/ipfs/QmUAXFGimAZMEShhZ9BSPX2L4G8Aafj6rRpM6Drb4E4hoP\"]},\"contracts/interfaces/core/IAxiomV1State.sol\":{\"keccak256\":\"0x840c3dec8d2f37b630959ba578be81d73a35a7c84304ceacdcb3159edb59e023\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ee72fa51d8e9908d73c777095024d12af1c7666f0a37355cbcaab3ee5fd0d2fe\",\"dweb:/ipfs/QmTiADkzhASMedGH5X6PRsEQBc6obZGwwiybWhoF78M2tn\"]},\"contracts/interfaces/core/IAxiomV1Update.sol\":{\"keccak256\":\"0xd7ee7c0f65b30a78ce5569e4b278546895ce07cb4a71f7e23fe0b44b8bb7418e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36ce2107267faeb9c315b7fed587c9fd24ff586f0b0d6f2a44d67c66ea284f0b\",\"dweb:/ipfs/QmU9av9zGBhCABrhWRsiiXcdZZiPqmnwTnF9kSv6fKXKp4\"]},\"contracts/interfaces/core/IAxiomV1Verifier.sol\":{\"keccak256\":\"0x392e9b7df6c06969f1b4d1c03ece5a2e156862906f1f39b47ffdf67343c7f37c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2001bb6c42dc4980a9ea98d3d87de89b195e3003ed4595b748da4da4be05ac2b\",\"dweb:/ipfs/QmVFYZ2nTafjPpKznMAnU1wU2fVqK9iFhUvANr5D2bdGVB\"]},\"contracts/libraries/MerkleMountainRange.sol\":{\"keccak256\":\"0x8eeecea8ff9b63629e38e660e665d582ba9809264f5566dfbe59b29d486f7f4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e05d8e57bdf3ebfc7d1b18c2934861b6faa5e7d804f2d6da8f497142742c2c8\",\"dweb:/ipfs/Qmc37fjcGgWRnNYXokG67AVv3Ak2k2fmTsLisWtQzhpAYs\"]},\"contracts/libraries/MerkleTree.sol\":{\"keccak256\":\"0x6579b7985d63f0aa31feb99bc1316cfcb9d70a7b4be73363950afc4b56a11606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f47c4926a84be461f553e32a8aac0cd8135aceef4eb4b5ba1af18cb9eddd0228\",\"dweb:/ipfs/QmWt2CvHBQ6q8TP8J9NTLQj2SYE4vfAFBr3BnUfm4PjVWP\"]},\"contracts/libraries/configuration/AxiomV1Configuration.sol\":{\"keccak256\":\"0xd9e83e38133bc603411cfa16b2f16a723708dc36b248554edbc63049b38ce872\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b4c40c291dd441e4777509ba0756ce73b7f4f06df7307d2477256523dce7a11\",\"dweb:/ipfs/QmT4Vi4EvMiE1rHQobPbodizjY6Qj9hQ3WNf8ocNDZE3Lx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626\",\"dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952\",\"dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff\",\"dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618\",\"dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1\",\"dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06\",\"dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3\",\"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8\",\"dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4\",\"dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.19+commit.7dd6d404"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "AxiomBlockVerificationFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "BlockHashIncorrect"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "ContractIsFrozen"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "MerkleProofFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotProverRole"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "NotRecentEndBlock"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "SNARKVerificationFailed"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "StartingBlockNotMultipleOfBatchSize"
                },
                {
                    "inputs": [],
                    "type": "error",
                    "name": "UpdatingIncorrectNumberOfBlocks"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "previousAdmin",
                            "type": "address",
                            "indexed": false
                        },
                        {
                            "internalType": "address",
                            "name": "newAdmin",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "AdminChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "beacon",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "BeaconUpgraded",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "type": "event",
                    "name": "FreezeAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint8",
                            "name": "version",
                            "type": "uint8",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "Initialized",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "len",
                            "type": "uint32",
                            "indexed": false
                        },
                        {
                            "internalType": "uint32",
                            "name": "index",
                            "type": "uint32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "MerkleMountainRangeEvent",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "previousAdminRole",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "bytes32",
                            "name": "newAdminRole",
                            "type": "bytes32",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "RoleAdminChanged",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "RoleGranted",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address",
                            "indexed": true
                        },
                        {
                            "internalType": "address",
                            "name": "sender",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "RoleRevoked",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "type": "event",
                    "name": "UnfreezeAll",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "startBlockNumber",
                            "type": "uint32",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes32",
                            "name": "prevHash",
                            "type": "bytes32",
                            "indexed": false
                        },
                        {
                            "internalType": "bytes32",
                            "name": "root",
                            "type": "bytes32",
                            "indexed": false
                        },
                        {
                            "internalType": "uint32",
                            "name": "numFinal",
                            "type": "uint32",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "UpdateEvent",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newAddress",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "UpgradeHistoricalSnarkVerifier",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newAddress",
                            "type": "address",
                            "indexed": false
                        }
                    ],
                    "type": "event",
                    "name": "UpgradeSnarkVerifier",
                    "anonymous": false
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "implementation",
                            "type": "address",
                            "indexed": true
                        }
                    ],
                    "type": "event",
                    "name": "Upgraded",
                    "anonymous": false
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "DEFAULT_ADMIN_ROLE",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "GUARDIAN_ROLE",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "PROVER_ROLE",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "TIMELOCK_ROLE",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "startBlockNumber",
                            "type": "uint32"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "roots",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "prevHashes",
                            "type": "bytes32[]"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "appendHistoricalMMR"
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "freezeAll"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "frozen",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getRoleAdmin",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "grantRole"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "hasRole",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "historicalMMR",
                    "outputs": [
                        {
                            "internalType": "uint32",
                            "name": "numPeaks",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "len",
                            "type": "uint32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "index",
                            "type": "uint32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "i",
                            "type": "uint32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "historicalMMRPeaks",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "",
                            "type": "uint32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "historicalRoots",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "historicalVerifierAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_verifierAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "_historicalVerifierAddress",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "timelock",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "guardian",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "initialize"
                },
                {
                    "inputs": [
                        {
                            "internalType": "struct IAxiomV1Verifier.BlockHashWitness",
                            "name": "witness",
                            "type": "tuple",
                            "components": [
                                {
                                    "internalType": "uint32",
                                    "name": "blockNumber",
                                    "type": "uint32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "claimedBlockHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "bytes32",
                                    "name": "prevHash",
                                    "type": "bytes32"
                                },
                                {
                                    "internalType": "uint32",
                                    "name": "numFinal",
                                    "type": "uint32"
                                },
                                {
                                    "internalType": "bytes32[10]",
                                    "name": "merkleProof",
                                    "type": "bytes32[10]"
                                }
                            ]
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isBlockHashValid",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint32",
                            "name": "blockNumber",
                            "type": "uint32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "claimedBlockHash",
                            "type": "bytes32"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "isRecentBlockHashValid",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "mmrRingBuffer",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32[]",
                            "name": "mmr",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "uint8",
                            "name": "bufferId",
                            "type": "uint8"
                        },
                        {
                            "internalType": "uint32",
                            "name": "blockNumber",
                            "type": "uint32"
                        },
                        {
                            "internalType": "bytes32",
                            "name": "claimedBlockHash",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "merkleProof",
                            "type": "bytes32[]"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "mmrVerifyBlockHash"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "proxiableUUID",
                    "outputs": [
                        {
                            "internalType": "bytes32",
                            "name": "",
                            "type": "bytes32"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "renounceRole"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "role",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "address",
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "revokeRole"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes4",
                            "name": "interfaceId",
                            "type": "bytes4"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "supportsInterface",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unfreezeAll"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "nextRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "nextNumFinal",
                            "type": "uint32"
                        },
                        {
                            "internalType": "bytes32[128]",
                            "name": "roots",
                            "type": "bytes32[128]"
                        },
                        {
                            "internalType": "bytes32[11][127]",
                            "name": "endHashProofs",
                            "type": "bytes32[11][127]"
                        },
                        {
                            "internalType": "bytes",
                            "name": "proofData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateHistorical"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes32",
                            "name": "nextRoot",
                            "type": "bytes32"
                        },
                        {
                            "internalType": "uint32",
                            "name": "nextNumFinal",
                            "type": "uint32"
                        },
                        {
                            "internalType": "bytes",
                            "name": "proofData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateOld"
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "proofData",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "updateRecent"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_historicalVerifierAddress",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "upgradeHistoricalSnarkVerifier"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "_verifierAddress",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "upgradeSnarkVerifier"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newImplementation",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "upgradeTo"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "newImplementation",
                            "type": "address"
                        },
                        {
                            "internalType": "bytes",
                            "name": "data",
                            "type": "bytes"
                        }
                    ],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "upgradeToAndCall"
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "verifierAddress",
                    "outputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ]
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {
                    "appendHistoricalMMR(uint32,bytes32[],bytes32[])": {
                        "details": "The blocks to append must have already been cached by Axiom.         startBlockNumber must equal historicalMMR.len * 1024, but we make it an input for faster reverts",
                        "params": {
                            "prevHashes": "prevHashes[i] is the parent hash of block `startBlockNumber + i * 1024`, for i = 0, ..., roots.length - 1. prevHashes and roots must have the same length.",
                            "roots": "roots[i] is the Merkle root of the blockhashes of blocks [startBlockNumber + i * 1024, startBlockNumber + (i + 1) * 1024) for i = 0, ..., roots.length - 1",
                            "startBlockNumber": "The block number of the first block to append"
                        }
                    },
                    "constructor": {
                        "custom:oz-upgrades-unsafe-allow": "constructor"
                    },
                    "getRoleAdmin(bytes32)": {
                        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
                    },
                    "grantRole(bytes32,address)": {
                        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
                    },
                    "hasRole(bytes32,address)": {
                        "details": "Returns `true` if `account` has been granted `role`."
                    },
                    "historicalMMRPeaks(uint32)": {
                        "params": {
                            "i": "The index, `peaks[i] = root(list[((len >> i) << i) - 2^i : ((len >> i) << i)])` if 2^i & len != 0, otherwise 0         where root(single element) = single element,         list is the variable length list where `list[i]` is the Merkle root of the binary tree with leaves the blockhashes of blocks [1024 * i, 1024 * (i + 1))"
                        }
                    },
                    "isBlockHashValid((uint32,bytes32,bytes32,uint32,bytes32[10]))": {
                        "details": "For block numbers within the last 256, use #isRecentBlockHashValid instead.",
                        "params": {
                            "witness": "The block hash to verify and the Merkle proof to verify it         witness.blockNumber is the block number to verify         witness.claimedBlockHash is the claimed blockhash of block witness.blockNumber         witness.prevHash is the prevHash stored in #historicalRoots(witness.blockNumber - witness.blockNumber % 1024)         witness.numFinal is the numFinal stored in #historicalRoots(witness.blockNumber - witness.blockNumber % 1024)         witness.merkleProof is the Merkle inclusion proof of witness.claimedBlockHash to the root stored in #historicalRoots(witness.blockNumber - witness.blockNumber % 1024)         witness.merkleProof[i] is the sibling of the Merkle node at depth 10 - i, for i = 0, ..., 10"
                        }
                    },
                    "isRecentBlockHashValid(uint32,bytes32)": {
                        "params": {
                            "blockNumber": "The block number to verify",
                            "claimedBlockHash": "The claimed blockhash of block blockNumber"
                        }
                    },
                    "mmrVerifyBlockHash(bytes32[],uint8,uint32,bytes32,bytes32[])": {
                        "details": "Use event logs to determine the correct bufferId and get the MMR at that index in the ring buffer.",
                        "params": {
                            "blockNumber": "The block number to verify",
                            "bufferId": "The index in the ring buffer of #mmrRingBuffer",
                            "claimedBlockHash": "The claimed blockhash of block blockNumber",
                            "merkleProof": "The Merkle inclusion proof of claimedBlockHash to the corresponding peak in mmr. The correct peak is calculated from mmr.length and blockNumber.",
                            "mmr": "The Merkle mountain range commited to in #mmrRingBuffer(bufferId), must be correct length"
                        }
                    },
                    "proxiableUUID()": {
                        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
                    },
                    "renounceRole(bytes32,address)": {
                        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
                    },
                    "revokeRole(bytes32,address)": {
                        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
                    },
                    "supportsInterface(bytes4)": {
                        "details": "See {IERC165-supportsInterface}."
                    },
                    "updateHistorical(bytes32,uint32,bytes32[128],bytes32[11][127],bytes)": {
                        "details": "endHashProofs is length HISTORICAL_NUM_ROOTS - 1 because the last endHash is provided in proofData"
                    },
                    "updateOld(bytes32,uint32,bytes)": {
                        "details": "The contract checks that #historicalRoots(endBlockNumber + 1) == keccak256(endHash || nextRoot || nextNumFinal)         where endBlockNumber, endHash are derived from proofData.         nextRoot and nextNumFinal should be obtained by reading event logs. For old blocks nextNumFinal is _usually_ 1024.",
                        "params": {
                            "nextNumFinal": "The numFinal stored in #historicalRoots(endBlockNumber + 1)",
                            "nextRoot": "The Merkle root stored in #historicalRoots(endBlockNumber + 1)",
                            "proofData": "The raw bytes of a zero knowledge proof to be verified by the contract. Has same format as in #updateRecent except         endBlockNumber = startBlockNumber + 1023, so the block batch size is exactly 1024         mmr contains the keccak Merkle root of the full Merkle tree of depth 10, followed by zeros"
                        }
                    },
                    "updateRecent(bytes)": {
                        "params": {
                            "proofData": "The raw bytes of a zero knowledge proof to be verified by the contract.         proofData contains public inputs/outputs of         (bytes32 prevHash, bytes32 endHash, uint32 startBlockNumber, uint32 endBlockNumber, bytes32[11] mmr)         where the proof verifies the blockhashes of blocks [startBlockNumber, endBlockNumber], endBlockNumber - startBlockNumber <= 1023         - startBlockNumber must be a multiple of 1024         - prevHash is the parent hash of block `startBlockNumber`,         - endHash is the blockhash of block `endBlockNumber`,         - mmr is the keccak Merkle mountain range of the blockhashes of blocks [startBlockNumber, endBlockNumber], ordered from depth 10 to depth 0"
                        }
                    },
                    "upgradeHistoricalSnarkVerifier(address)": {
                        "details": "We expect this should never need to be called since the historical verifier is only used for the initial batch import of historical block hashes."
                    },
                    "upgradeTo(address)": {
                        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
                    },
                    "upgradeToAndCall(address,bytes)": {
                        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
                    }
                },
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "GUARDIAN_ROLE()": {
                        "notice": "Storage slot for the addresses with the permission of a 'guardian'."
                    },
                    "PROVER_ROLE()": {
                        "notice": "Storage slot for the addresses with the permission of a 'prover'."
                    },
                    "TIMELOCK_ROLE()": {
                        "notice": "Storage slot for the address with the permission of a 'timelock'."
                    },
                    "appendHistoricalMMR(uint32,bytes32[],bytes32[])": {
                        "notice": "Extended the stored historical Merkle Mountain Range with a multiple of 1024 blockhash commitments"
                    },
                    "constructor": {
                        "notice": "Prevents the implementation contract from being initialized outside of the upgradeable proxy."
                    },
                    "historicalMMR()": {
                        "notice": "Returns metadata about the number of consecutive blocks from genesis stored in the contract         The Merkle mountain range stores a commitment to the variable length list where `list[i]` is the Merkle root of the binary tree with leaves the blockhashes of blocks [1024 * i, 1024 * (i + 1))"
                    },
                    "historicalMMRPeaks(uint32)": {
                        "notice": "Returns the i-th Merkle root in the historical Merkle Mountain Range"
                    },
                    "historicalRoots(uint32)": {
                        "notice": "Returns the hash of a batch of consecutive blocks previously verified by the contract"
                    },
                    "initialize(address,address,address,address)": {
                        "notice": "Initializes the contract and the parent contracts once."
                    },
                    "isBlockHashValid((uint32,bytes32,bytes32,uint32,bytes32[10]))": {
                        "notice": "Verify the blockhash of block witness.blockNumber equals witness.claimedBlockHash by checking against Axiom's cache of #historicalRoots."
                    },
                    "isRecentBlockHashValid(uint32,bytes32)": {
                        "notice": "Verify the blockhash of block blockNumber equals claimedBlockHash. Assumes that blockNumber is within the last 256 most recent blocks."
                    },
                    "mmrRingBuffer(uint256)": {
                        "notice": "A ring buffer storing commitments to past historicalMMR states"
                    },
                    "mmrVerifyBlockHash(bytes32[],uint8,uint32,bytes32,bytes32[])": {
                        "notice": "Verify the blockhash of block blockNumber equals claimedBlockHash by checking against Axiom's cache of historical Merkle mountain ranges in #mmrRingBuffer."
                    },
                    "updateOld(bytes32,uint32,bytes)": {
                        "notice": "Verify and store a batch of 1024 consecutive blocks,         where the latest block in the batch is verified against the blockhash cache in #historicalRoots"
                    },
                    "updateRecent(bytes)": {
                        "notice": "Verify and store a batch of consecutive blocks, where the latest block in the batch is within the last 256 most recent blocks."
                    },
                    "upgradeHistoricalSnarkVerifier(address)": {
                        "notice": "Updates the address of the historical SNARK verifier contract, governed by a 'timelock'."
                    },
                    "upgradeSnarkVerifier(address)": {
                        "notice": "Updates the address of the SNARK verifier contract, governed by a 'timelock'."
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                ":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
                ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                ":ds-test/=lib/forge-std/lib/ds-test/src/",
                ":forge-std/=lib/forge-std/src/",
                ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
                ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
            ],
            "optimizer": {
                "runs": 1000000,
                "details": {
                    "peephole": true,
                    "inliner": true,
                    "jumpdestRemover": true,
                    "orderLiterals": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": false,
                    "yul": false
                }
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "contracts/AxiomV1.sol": "AxiomV1"
            },
            "libraries": {}
        },
        "sources": {
            "contracts/AxiomV1.sol": {
                "keccak256": "0x9e195b21b07f5116a3fb1cfc35bb7adfe3cbd8776819805faadbf4955cb20125",
                "urls": [
                    "bzz-raw://c88e61bc308837b53af1b9ed3dee7374da6cbf909d6e865485a43806dc2f81e4",
                    "dweb:/ipfs/QmVKqF4HFbkcnaLUf6F3HJDJgHpCUXMeMCTGSDk3k2fZBN"
                ],
                "license": "MIT"
            },
            "contracts/AxiomV1Access.sol": {
                "keccak256": "0x888d141e45bf6f3d0481bd588b0746e124608c9cbe96f403c3bb97ecae8fdcdf",
                "urls": [
                    "bzz-raw://f3a45a0cf4b1d5b89b51b47e280bf42eb485d72ac72ee2e756070eeb5e721a23",
                    "dweb:/ipfs/QmbKbvwCQFdwyNZzxgbEm7ma3oJkci5RiKqU8MR6LNGEuD"
                ],
                "license": "MIT"
            },
            "contracts/AxiomV1Core.sol": {
                "keccak256": "0xcaae365313a9e1c1d880b5737fe4d12b56a70d34649b53fdf02b8ea5d3ac4095",
                "urls": [
                    "bzz-raw://e380769dc2d500ac1e40c5c1d78ba1319f30a6730c8688ee0f1667e4576e5e30",
                    "dweb:/ipfs/QmVnAvoWkz1jbrjcTcr2pRqGvqRWgXDwH3RFPvyxi88jfV"
                ],
                "license": "MIT"
            },
            "contracts/interfaces/IAxiomV1.sol": {
                "keccak256": "0x440926ee7b7037eff1605bd27c71e1b0ff37078fe4347404febb91e8807a16a3",
                "urls": [
                    "bzz-raw://75f45f6c1632cbc05bed6a49c35958d419844ddb4012ffaca740b6ef413bd80f",
                    "dweb:/ipfs/QmXAQkty7Lwth1qjmMXiPzEoWNUdzA1WnQgqSUBE4VQh6P"
                ],
                "license": "MIT"
            },
            "contracts/interfaces/core/IAxiomV1Events.sol": {
                "keccak256": "0xe310f5ecf8c9ae19d84a0436a7dacb5147eea1e453fb042b862d4fd93cdcfe91",
                "urls": [
                    "bzz-raw://5a4bfbb5c7567ef2a4497c74ecc180a4411077bd5bf78f62952956e15db91c4a",
                    "dweb:/ipfs/QmUAXFGimAZMEShhZ9BSPX2L4G8Aafj6rRpM6Drb4E4hoP"
                ],
                "license": "MIT"
            },
            "contracts/interfaces/core/IAxiomV1State.sol": {
                "keccak256": "0x840c3dec8d2f37b630959ba578be81d73a35a7c84304ceacdcb3159edb59e023",
                "urls": [
                    "bzz-raw://ee72fa51d8e9908d73c777095024d12af1c7666f0a37355cbcaab3ee5fd0d2fe",
                    "dweb:/ipfs/QmTiADkzhASMedGH5X6PRsEQBc6obZGwwiybWhoF78M2tn"
                ],
                "license": "MIT"
            },
            "contracts/interfaces/core/IAxiomV1Update.sol": {
                "keccak256": "0xd7ee7c0f65b30a78ce5569e4b278546895ce07cb4a71f7e23fe0b44b8bb7418e",
                "urls": [
                    "bzz-raw://36ce2107267faeb9c315b7fed587c9fd24ff586f0b0d6f2a44d67c66ea284f0b",
                    "dweb:/ipfs/QmU9av9zGBhCABrhWRsiiXcdZZiPqmnwTnF9kSv6fKXKp4"
                ],
                "license": "MIT"
            },
            "contracts/interfaces/core/IAxiomV1Verifier.sol": {
                "keccak256": "0x392e9b7df6c06969f1b4d1c03ece5a2e156862906f1f39b47ffdf67343c7f37c",
                "urls": [
                    "bzz-raw://2001bb6c42dc4980a9ea98d3d87de89b195e3003ed4595b748da4da4be05ac2b",
                    "dweb:/ipfs/QmVFYZ2nTafjPpKznMAnU1wU2fVqK9iFhUvANr5D2bdGVB"
                ],
                "license": "MIT"
            },
            "contracts/libraries/MerkleMountainRange.sol": {
                "keccak256": "0x8eeecea8ff9b63629e38e660e665d582ba9809264f5566dfbe59b29d486f7f4c",
                "urls": [
                    "bzz-raw://8e05d8e57bdf3ebfc7d1b18c2934861b6faa5e7d804f2d6da8f497142742c2c8",
                    "dweb:/ipfs/Qmc37fjcGgWRnNYXokG67AVv3Ak2k2fmTsLisWtQzhpAYs"
                ],
                "license": "MIT"
            },
            "contracts/libraries/MerkleTree.sol": {
                "keccak256": "0x6579b7985d63f0aa31feb99bc1316cfcb9d70a7b4be73363950afc4b56a11606",
                "urls": [
                    "bzz-raw://f47c4926a84be461f553e32a8aac0cd8135aceef4eb4b5ba1af18cb9eddd0228",
                    "dweb:/ipfs/QmWt2CvHBQ6q8TP8J9NTLQj2SYE4vfAFBr3BnUfm4PjVWP"
                ],
                "license": "MIT"
            },
            "contracts/libraries/configuration/AxiomV1Configuration.sol": {
                "keccak256": "0xd9e83e38133bc603411cfa16b2f16a723708dc36b248554edbc63049b38ce872",
                "urls": [
                    "bzz-raw://2b4c40c291dd441e4777509ba0756ce73b7f4f06df7307d2477256523dce7a11",
                    "dweb:/ipfs/QmT4Vi4EvMiE1rHQobPbodizjY6Qj9hQ3WNf8ocNDZE3Lx"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
                "keccak256": "0xe8f27a3e3e25067334e76799f03d4de6d8f8535c3fc4806468228a9ebd5de51a",
                "urls": [
                    "bzz-raw://686aaf8725727d94b36c53baad3779e168b31e33eec8d39b41e282382617c626",
                    "dweb:/ipfs/QmWVRwPpZyweGCw7uRj1rXQTmcwaXB5Ctz3KvpNJPtxDP8"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
                "keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
                "urls": [
                    "bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
                    "dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/IERC1967Upgradeable.sol": {
                "keccak256": "0xb8d68221343ed784c7b76edb6a686cb65e49c476d9e22bb89a5c0c3947ff14db",
                "urls": [
                    "bzz-raw://5badb66ffcbf3face237054083aaef757d4f3a56f47a35497f433a5bc93fb952",
                    "dweb:/ipfs/Qmbw8k45NEQb5uF3KsqYTFeiG81PspKgnM2UM61iQxJ9FU"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/interfaces/draft-IERC1822Upgradeable.sol": {
                "keccak256": "0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f",
                "urls": [
                    "bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053",
                    "dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
                "keccak256": "0x1599637b52d20dc3954cea44914b2a4a9a8a5caade58d9da947e0b6c9acc07ba",
                "urls": [
                    "bzz-raw://f3b6c04e928ac1e7660cde91b7bf5ae8cc0ded3b7a71fd11c832b67623b351ff",
                    "dweb:/ipfs/QmSoZxP838eUa3guVb2LDRF2m7Uau7gxV6sgs5G3V8jdiu"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/proxy/beacon/IBeaconUpgradeable.sol": {
                "keccak256": "0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908",
                "urls": [
                    "bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1",
                    "dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
                "keccak256": "0x037c334add4b033ad3493038c25be1682d78c00992e1acb0e2795caff3925271",
                "urls": [
                    "bzz-raw://8a313cf42389440e2706837c91370323b85971c06afd6d056d21e2bc86459618",
                    "dweb:/ipfs/QmT8XUrUvQ9aZaPKrqgRU2JVGWnaxBcUYJA7Q7K5KcLBSZ"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
                "keccak256": "0x7967d130887c4b40666cd88f8744691d4527039a1b2a38aa0de41481ef646778",
                "urls": [
                    "bzz-raw://40e60cbf0e2efede4d9c169e66336a64615af7b719a896ef1f37ae8cd4614ec1",
                    "dweb:/ipfs/QmYNiwY22ifhfa8yK6mLCEKfj39caYUHLqe2VBtzDnvdsV"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
                "keccak256": "0x2edcb41c121abc510932e8d83ff8b82cf9cdde35e7c297622f5c29ef0af25183",
                "urls": [
                    "bzz-raw://72460c66cd1c3b1c11b863e0d8df0a1c56f37743019e468dc312c754f43e3b06",
                    "dweb:/ipfs/QmPExYKiNb9PUsgktQBupPaM33kzDHxaYoVeJdLhv8s879"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
                "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
                "urls": [
                    "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
                    "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
                "keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
                "urls": [
                    "bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
                    "dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
                "keccak256": "0x6b9a5d35b744b25529a2856a8093e7c03fb35a34b1c4fb5499e560f8ade140da",
                "urls": [
                    "bzz-raw://187b5c3a1c9e77678732a2cc5284237f9cfca6bc28ee8bc0a0f4f951d7b3a2f8",
                    "dweb:/ipfs/Qmb2KFr7WuQu7btdCiftQG64vTzrG4UyzVmo53EYHcnHYA"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
                "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
                "urls": [
                    "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
                    "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
                "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
                "urls": [
                    "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
                    "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
                ],
                "license": "MIT"
            },
            "lib/openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
                "keccak256": "0xc1bd5b53319c68f84e3becd75694d941e8f4be94049903232cd8bc7c535aaa5a",
                "urls": [
                    "bzz-raw://056027a78e6f4b78a39be530983551651ee5a052e786ca2c1c6a3bb1222b03b4",
                    "dweb:/ipfs/QmXRUpywAqNwAfXS89vrtiE2THRM9dX9pQ4QxAkV1Wx9kt"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "ast": {
        "absolutePath": "contracts/AxiomV1.sol",
        "id": 191,
        "exportedSymbols": {
            "AccessControlUpgradeable": [
                34899
            ],
            "AxiomV1": [
                190
            ],
            "AxiomV1Access": [
                322
            ],
            "AxiomV1Core": [
                1524
            ],
            "IAxiomV1": [
                4006
            ],
            "UUPSUpgradeable": [
                35673
            ]
        },
        "nodeType": "SourceUnit",
        "src": "32:1802:2",
        "nodes": [
            {
                "id": 89,
                "nodeType": "PragmaDirective",
                "src": "32:23:2",
                "nodes": [],
                "literals": [
                    "solidity",
                    "0.8",
                    ".19"
                ]
            },
            {
                "id": 91,
                "nodeType": "ImportDirective",
                "src": "57:113:2",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol",
                "file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 191,
                "sourceUnit": 34900,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 90,
                            "name": "AccessControlUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34899,
                            "src": "65:24:2",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 93,
                "nodeType": "ImportDirective",
                "src": "171:100:2",
                "nodes": [],
                "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                "file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 191,
                "sourceUnit": 35674,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 92,
                            "name": "UUPSUpgradeable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35673,
                            "src": "179:15:2",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 95,
                "nodeType": "ImportDirective",
                "src": "273:46:2",
                "nodes": [],
                "absolutePath": "contracts/AxiomV1Core.sol",
                "file": "./AxiomV1Core.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 191,
                "sourceUnit": 1525,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 94,
                            "name": "AxiomV1Core",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1524,
                            "src": "281:11:2",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 97,
                "nodeType": "ImportDirective",
                "src": "320:50:2",
                "nodes": [],
                "absolutePath": "contracts/AxiomV1Access.sol",
                "file": "./AxiomV1Access.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 191,
                "sourceUnit": 323,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 96,
                            "name": "AxiomV1Access",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "328:13:2",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 99,
                "nodeType": "ImportDirective",
                "src": "371:51:2",
                "nodes": [],
                "absolutePath": "contracts/interfaces/IAxiomV1.sol",
                "file": "./interfaces/IAxiomV1.sol",
                "nameLocation": "-1:-1:-1",
                "scope": 191,
                "sourceUnit": 4007,
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 98,
                            "name": "IAxiomV1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4006,
                            "src": "379:8:2",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "id": 190,
                "nodeType": "ContractDefinition",
                "src": "569:1264:2",
                "nodes": [
                    {
                        "id": 112,
                        "nodeType": "FunctionDefinition",
                        "src": "787:53:2",
                        "nodes": [],
                        "body": {
                            "id": 111,
                            "nodeType": "Block",
                            "src": "801:39:2",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 108,
                                            "name": "_disableInitializers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 35518,
                                            "src": "811:20:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 109,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "811:22:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 110,
                                    "nodeType": "ExpressionStatement",
                                    "src": "811:22:2"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 105,
                            "nodeType": "StructuredDocumentation",
                            "src": "624:158:2",
                            "text": "@custom:oz-upgrades-unsafe-allow constructor\n @notice Prevents the implementation contract from being initialized outside of the upgradeable proxy."
                        },
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "parameters": {
                            "id": 106,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "798:2:2"
                        },
                        "returnParameters": {
                            "id": 107,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "801:0:2"
                        },
                        "scope": 190,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 157,
                        "nodeType": "FunctionDefinition",
                        "src": "918:555:2",
                        "nodes": [],
                        "body": {
                            "id": 156,
                            "nodeType": "Block",
                            "src": "1093:380:2",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 132,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 127,
                                                    "name": "timelock",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 119,
                                                    "src": "1111:8:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "!=",
                                                "rightExpression": {
                                                    "arguments": [
                                                        {
                                                            "hexValue": "30",
                                                            "id": 130,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "number",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "1131:1:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            },
                                                            "value": "0"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_rational_0_by_1",
                                                                "typeString": "int_const 0"
                                                            }
                                                        ],
                                                        "id": 129,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "1123:7:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 128,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1123:7:2",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 131,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1123:10:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "1111:22:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 126,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                -18,
                                                -18
                                            ],
                                            "referencedDeclaration": -18,
                                            "src": "1103:7:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 133,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1103:31:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 134,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1103:31:2"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 135,
                                            "name": "__UUPSUpgradeable_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 35555,
                                            "src": "1192:22:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1192:24:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 137,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1192:24:2"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 139,
                                                "name": "_verifierAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 115,
                                                "src": "1303:16:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 140,
                                                "name": "_historicalVerifierAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 117,
                                                "src": "1321:26:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 141,
                                                "name": "guardian",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 121,
                                                "src": "1349:8:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 142,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -15,
                                                    "src": "1359:3:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 143,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1363:6:2",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1359:10:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 138,
                                            "name": "__AxiomV1Core_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 401,
                                            "src": "1284:18:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                                                "typeString": "function (address,address,address,address)"
                                            }
                                        },
                                        "id": 144,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1284:86:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 145,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1284:86:2"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 147,
                                                "name": "DEFAULT_ADMIN_ROLE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 34606,
                                                "src": "1392:18:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "id": 148,
                                                "name": "timelock",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 119,
                                                "src": "1412:8:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 146,
                                            "name": "_grantRole",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34862,
                                            "src": "1381:10:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                                "typeString": "function (bytes32,address)"
                                            }
                                        },
                                        "id": 149,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1381:40:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 150,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1381:40:2"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 152,
                                                "name": "TIMELOCK_ROLE",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 209,
                                                "src": "1442:13:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "id": 153,
                                                "name": "timelock",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 119,
                                                "src": "1457:8:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 151,
                                            "name": "_grantRole",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34862,
                                            "src": "1431:10:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                                                "typeString": "function (bytes32,address)"
                                            }
                                        },
                                        "id": 154,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1431:35:2",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 155,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1431:35:2"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 113,
                            "nodeType": "StructuredDocumentation",
                            "src": "846:67:2",
                            "text": "@notice Initializes the contract and the parent contracts once."
                        },
                        "functionSelector": "f8c8765e",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 124,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 123,
                                    "name": "initializer",
                                    "nameLocations": [
                                        "1081:11:2"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 35439,
                                    "src": "1081:11:2"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1081:11:2"
                            }
                        ],
                        "name": "initialize",
                        "nameLocation": "927:10:2",
                        "parameters": {
                            "id": 122,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 115,
                                    "mutability": "mutable",
                                    "name": "_verifierAddress",
                                    "nameLocation": "955:16:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 157,
                                    "src": "947:24:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 114,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "947:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 117,
                                    "mutability": "mutable",
                                    "name": "_historicalVerifierAddress",
                                    "nameLocation": "989:26:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 157,
                                    "src": "981:34:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 116,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "981:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 119,
                                    "mutability": "mutable",
                                    "name": "timelock",
                                    "nameLocation": "1033:8:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 157,
                                    "src": "1025:16:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 118,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1025:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 121,
                                    "mutability": "mutable",
                                    "name": "guardian",
                                    "nameLocation": "1059:8:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 157,
                                    "src": "1051:16:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 120,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1051:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "937:136:2"
                        },
                        "returnParameters": {
                            "id": 125,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1093:0:2"
                        },
                        "scope": 190,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "id": 167,
                        "nodeType": "FunctionDefinition",
                        "src": "1479:80:2",
                        "nodes": [],
                        "body": {
                            "id": 166,
                            "nodeType": "Block",
                            "src": "1557:2:2",
                            "nodes": [],
                            "statements": []
                        },
                        "baseFunctions": [
                            35667
                        ],
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 163,
                                        "name": "TIMELOCK_ROLE",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 209,
                                        "src": "1542:13:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    }
                                ],
                                "id": 164,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 162,
                                    "name": "onlyRole",
                                    "nameLocations": [
                                        "1533:8:2"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 34617,
                                    "src": "1533:8:2"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1533:23:2"
                            }
                        ],
                        "name": "_authorizeUpgrade",
                        "nameLocation": "1488:17:2",
                        "overrides": {
                            "id": 161,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1524:8:2"
                        },
                        "parameters": {
                            "id": 160,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 159,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 167,
                                    "src": "1506:7:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 158,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1506:7:2",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1505:9:2"
                        },
                        "returnParameters": {
                            "id": 165,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1557:0:2"
                        },
                        "scope": 190,
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "id": 189,
                        "nodeType": "FunctionDefinition",
                        "src": "1565:266:2",
                        "nodes": [],
                        "body": {
                            "id": 188,
                            "nodeType": "Block",
                            "src": "1726:105:2",
                            "nodes": [],
                            "statements": [
                                {
                                    "expression": {
                                        "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "id": 186,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                            },
                                            "id": 181,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 176,
                                                "name": "interfaceId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 169,
                                                "src": "1743:11:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "id": 178,
                                                            "name": "IAxiomV1",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4006,
                                                            "src": "1763:8:2",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_contract$_IAxiomV1_$4006_$",
                                                                "typeString": "type(contract IAxiomV1)"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_type$_t_contract$_IAxiomV1_$4006_$",
                                                                "typeString": "type(contract IAxiomV1)"
                                                            }
                                                        ],
                                                        "id": 177,
                                                        "name": "type",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": -27,
                                                        "src": "1758:4:2",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                                            "typeString": "function () pure"
                                                        }
                                                    },
                                                    "id": 179,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1758:14:2",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_meta_type_t_contract$_IAxiomV1_$4006",
                                                        "typeString": "type(contract IAxiomV1)"
                                                    }
                                                },
                                                "id": 180,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberLocation": "1773:11:2",
                                                "memberName": "interfaceId",
                                                "nodeType": "MemberAccess",
                                                "src": "1758:26:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes4",
                                                    "typeString": "bytes4"
                                                }
                                            },
                                            "src": "1743:41:2",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 184,
                                                    "name": "interfaceId",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 169,
                                                    "src": "1812:11:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_bytes4",
                                                        "typeString": "bytes4"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 182,
                                                    "name": "super",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -25,
                                                    "src": "1788:5:2",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_super$_AxiomV1_$190_$",
                                                        "typeString": "type(contract super AxiomV1)"
                                                    }
                                                },
                                                "id": 183,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1794:17:2",
                                                "memberName": "supportsInterface",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 34639,
                                                "src": "1788:23:2",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                                    "typeString": "function (bytes4) view returns (bool)"
                                                }
                                            },
                                            "id": 185,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1788:36:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "src": "1743:81:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "functionReturnParameters": 175,
                                    "id": 187,
                                    "nodeType": "Return",
                                    "src": "1736:88:2"
                                }
                            ]
                        },
                        "baseFunctions": [
                            34639
                        ],
                        "functionSelector": "01ffc9a7",
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "supportsInterface",
                        "nameLocation": "1574:17:2",
                        "overrides": {
                            "id": 172,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [
                                {
                                    "id": 171,
                                    "name": "AccessControlUpgradeable",
                                    "nameLocations": [
                                        "1673:24:2"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 34899,
                                    "src": "1673:24:2"
                                }
                            ],
                            "src": "1664:34:2"
                        },
                        "parameters": {
                            "id": 170,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 169,
                                    "mutability": "mutable",
                                    "name": "interfaceId",
                                    "nameLocation": "1599:11:2",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 189,
                                    "src": "1592:18:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                    },
                                    "typeName": {
                                        "id": 168,
                                        "name": "bytes4",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1592:6:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes4",
                                            "typeString": "bytes4"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1591:20:2"
                        },
                        "returnParameters": {
                            "id": 175,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 174,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 189,
                                    "src": "1716:4:2",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 173,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1716:4:2",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1715:6:2"
                        },
                        "scope": 190,
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 101,
                            "name": "AxiomV1Core",
                            "nameLocations": [
                                "589:11:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1524,
                            "src": "589:11:2"
                        },
                        "id": 102,
                        "nodeType": "InheritanceSpecifier",
                        "src": "589:11:2"
                    },
                    {
                        "baseName": {
                            "id": 103,
                            "name": "UUPSUpgradeable",
                            "nameLocations": [
                                "602:15:2"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 35673,
                            "src": "602:15:2"
                        },
                        "id": 104,
                        "nodeType": "InheritanceSpecifier",
                        "src": "602:15:2"
                    }
                ],
                "canonicalName": "AxiomV1",
                "contractDependencies": [],
                "contractKind": "contract",
                "documentation": {
                    "id": 100,
                    "nodeType": "StructuredDocumentation",
                    "src": "424:145:2",
                    "text": "@title  Axiom V1\n @author Axiom\n @notice Core Axiom smart contract that verifies the validity of historical block hashes using SNARKs."
                },
                "fullyImplemented": true,
                "linearizedBaseContracts": [
                    190,
                    35673,
                    35358,
                    34993,
                    35003,
                    1524,
                    322,
                    34899,
                    36278,
                    36290,
                    34972,
                    35999,
                    35537,
                    4006,
                    4544,
                    4491,
                    4440,
                    4403
                ],
                "name": "AxiomV1",
                "nameLocation": "578:7:2",
                "scope": 191,
                "usedErrors": [
                    230,
                    233,
                    364,
                    366,
                    368,
                    370,
                    372,
                    374,
                    376
                ]
            }
        ],
        "license": "MIT"
    },
    "id": 2
}
