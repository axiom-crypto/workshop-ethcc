import { InternalConfig } from './internalConfig';
import { AxiomConfig } from '../shared/types';
import { Block } from './block';
import { Query } from './query';
import { QueryBuilder } from '../query/queryBuilder';
export declare class Axiom {
    /**
     * Axiom configuration parameters
     */
    readonly config: InternalConfig;
    /**
     * Functions that relate to calculating various aspects of blocks
     */
    readonly block: Block;
    /**
     * Functions that handle querying the Axiom Query database
     */
    readonly query: Query;
    constructor(config: AxiomConfig, overrides?: any);
    newQueryBuilder(): QueryBuilder;
    getAxiomAbi(): any;
    getAxiomQueryAbi(): any;
    getAxiomAddress(): string | undefined;
    getAxiomQueryAddress(): string | undefined;
}
export { decodePackedQuery } from '../query/decoder';
//# sourceMappingURL=axiom.d.ts.map