import { QueryBuilderResponse, QueryData, QueryRow, ResponseTree } from "../shared/types";
import { InternalConfig } from "../core/internalConfig";
export declare class QueryBuilder {
    private queries;
    private responseTree?;
    private readonly config;
    private readonly maxSize;
    constructor(config: InternalConfig);
    append(queryRow: QueryRow): Promise<void>;
    appendWithoutValidation(queryRow: QueryRow): Promise<void>;
    getCurrentSize(): number;
    getRemainingSize(): number;
    getMaxSize(): number;
    asFormattedString(): string;
    asSortedFormattedString(): string;
    getResponseTree(): ResponseTree | undefined;
    build(): Promise<QueryBuilderResponse>;
    private processQueryRow;
    private sortQueries;
    private formatQueries;
    private buildQueryResponse;
    buildResponseTree(data: QueryData[]): ResponseTree;
    getQueryDataFromRows(sortedQueries: QueryRow[]): Promise<QueryData[]>;
    private buildQueryData;
}
//# sourceMappingURL=queryBuilder.d.ts.map