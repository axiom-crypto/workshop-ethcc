{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AccountAgeBelowThresholdError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyClaimedError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidDataLengthError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidNonceError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidSenderError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ProofError",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ACCOUNT_AGE_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "AXIOM_V1_QUERY_GOERLI_ADDR",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "keccakBlockResponse",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "keccakAccountResponse",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "keccakStorageResponse",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "uint32",
                  "name": "blockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32",
                  "name": "blockHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "leafIdx",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32[6]",
                  "name": "proof",
                  "type": "bytes32[6]"
                }
              ],
              "internalType": "struct IAxiomV1Query.BlockResponse[]",
              "name": "blockResponses",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint32",
                  "name": "blockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint64",
                  "name": "nonce",
                  "type": "uint64"
                },
                {
                  "internalType": "uint96",
                  "name": "balance",
                  "type": "uint96"
                },
                {
                  "internalType": "bytes32",
                  "name": "storageRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "codeHash",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint32",
                  "name": "leafIdx",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32[6]",
                  "name": "proof",
                  "type": "bytes32[6]"
                }
              ],
              "internalType": "struct IAxiomV1Query.AccountResponse[]",
              "name": "accountResponses",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "uint32",
                  "name": "blockNumber",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "slot",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "leafIdx",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes32[6]",
                  "name": "proof",
                  "type": "bytes32[6]"
                }
              ],
              "internalType": "struct IAxiomV1Query.StorageResponse[]",
              "name": "storageResponses",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct ResponseStruct",
          "name": "response",
          "type": "tuple"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "hasClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a2234b9ba3934b13aba37b960a91b815250604051806040016040528060038152602001621114d560ea1b815250816003908162000063919062000120565b50600462000072828262000120565b505050620001ec565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a657607f821691505b602082108103620000c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011b57600081815260208120601f850160051c81016020861015620000f65750805b601f850160051c820191505b81811015620001175782815560010162000102565b5050505b505050565b81516001600160401b038111156200013c576200013c6200007b565b62000154816200014d845462000091565b84620000cd565b602080601f8311600181146200018c5760008415620001735750858301515b600019600386901b1c1916600185901b17855562000117565b600085815260208120601f198616915b82811015620001bd578886015182559484019460019091019084016200019c565b5085821015620001dc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6111b580620001fc6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a7f9219911610066578063a7f92199146101fe578063a9059cbb14610207578063dd62ed3e1461021a578063f623265b1461022d57600080fd5b806370a082311461019757806373b2e80e146101c057806395d89b41146101e3578063a457c2d7146101eb57600080fd5b806323b872dd116100d357806323b872dd1461014d5780632a48ff7f14610160578063313ce56714610175578063395093511461018457600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b610102610260565b60405161010f9190610adb565b60405180910390f35b61012b610126366004610b45565b6102f2565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610b6f565b61030c565b61017361016e366004610bab565b610330565b005b6040516012815260200161010f565b61012b610192366004610b45565b6103a8565b61013f6101a5366004610bed565b6001600160a01b031660009081526020819052604090205490565b61012b6101ce366004610bed565b60056020526000908152604090205460ff1681565b6101026103ca565b61012b6101f9366004610b45565b6103d9565b61013f61138881565b61012b610215366004610b45565b610459565b61013f610228366004610c08565b610467565b610248734fb202140c5319106f15706b1a69e441c953630681565b6040516001600160a01b03909116815260200161010f565b60606003805461026f90610c3b565b80601f016020809104026020016040519081016040528092919081815260200182805461029b90610c3b565b80156102e85780601f106102bd576101008083540402835291602001916102e8565b820191906000526020600020905b8154815290600101906020018083116102cb57829003601f168201915b5050505050905090565b600033610300818585610492565b60019150505b92915050565b60003361031a8582856105b6565b610325858585610630565b506001949350505050565b3360009081526005602052604090205460ff161561036157604051635f1e377d60e01b815260040160405180910390fd5b61036a816107d4565b336000818152600560205260409020805460ff191660011790556103a5906103946012600a610d6f565b6103a090611388610d7e565b610a1c565b50565b6000336103008185856103bb8383610467565b6103c59190610d95565b610492565b60606004805461026f90610c3b565b600033816103e78286610467565b90508381101561044c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103258286868403610492565b600033610300818585610630565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104f45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610443565b6001600160a01b0382166105555760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610443565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60006105c28484610467565b9050600019811461062a578181101561061d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610443565b61062a8484848403610492565b50505050565b6001600160a01b0383166106945760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610443565b6001600160a01b0382166106f65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610443565b6001600160a01b0383166000908152602081905260409020548181101561076e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610443565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361062a565b734fb202140c5319106f15706b1a69e441c9536306600081636439e9d484356020860135604087013561080a6060890189610da8565b61081760808b018b610df9565b61082460a08d018d610e43565b6040518a63ffffffff1660e01b815260040161084899989796959493929190611041565b602060405180830381865afa158015610865573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088991906110fe565b9050806108a957604051636728b69360e11b815260040160405180910390fd5b60006108b86080850185610df9565b915050600181146108dc57604051633cbac2d960e11b815260040160405180910390fd5b60006108eb6080860186610df9565b60008181106108fc576108fc611120565b6109139260206101a0909202019081019150611136565b63ffffffff169050600061092a6080870187610df9565b600081811061093b5761093b611120565b90506101a0020160400160208101906109549190611151565b67ffffffffffffffff169050600061096f6080880188610df9565b600081811061098057610980611120565b90506101a0020160200160208101906109999190610bed565b905043600183146109bd5760405163612ad98160e11b815260040160405180910390fd5b6001600160a01b03821633146109e657604051635e9644c160e11b815260040160405180910390fd5b836109f36113888361116c565b1015610a1257604051639a92d45b60e01b815260040160405180910390fd5b5050505050505050565b6001600160a01b038216610a725760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610443565b8060026000828254610a849190610d95565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b81811015610b0857858101830151858201604001528201610aec565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610b4057600080fd5b919050565b60008060408385031215610b5857600080fd5b610b6183610b29565b946020939093013593505050565b600080600060608486031215610b8457600080fd5b610b8d84610b29565b9250610b9b60208501610b29565b9150604084013590509250925092565b600060208284031215610bbd57600080fd5b813567ffffffffffffffff811115610bd457600080fd5b820160c08185031215610be657600080fd5b9392505050565b600060208284031215610bff57600080fd5b610be682610b29565b60008060408385031215610c1b57600080fd5b610c2483610b29565b9150610c3260208401610b29565b90509250929050565b600181811c90821680610c4f57607f821691505b602082108103610c6f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610cc6578160001904821115610cac57610cac610c75565b80851615610cb957918102915b93841c9390800290610c90565b509250929050565b600082610cdd57506001610306565b81610cea57506000610306565b8160018114610d005760028114610d0a57610d26565b6001915050610306565b60ff841115610d1b57610d1b610c75565b50506001821b610306565b5060208310610133831016604e8410600b8410161715610d49575081810a610306565b610d538383610c8b565b8060001904821115610d6757610d67610c75565b029392505050565b6000610be660ff841683610cce565b808202811582820484141761030657610306610c75565b8082018082111561030657610306610c75565b6000808335601e19843603018112610dbf57600080fd5b83018035915067ffffffffffffffff821115610dda57600080fd5b602001915061012081023603821315610df257600080fd5b9250929050565b6000808335601e19843603018112610e1057600080fd5b83018035915067ffffffffffffffff821115610e2b57600080fd5b60200191506101a081023603821315610df257600080fd5b6000808335601e19843603018112610e5a57600080fd5b83018035915067ffffffffffffffff821115610e7557600080fd5b602001915061016081023603821315610df257600080fd5b803563ffffffff81168114610b4057600080fd5b60c08183375050565b803567ffffffffffffffff81168114610b4057600080fd5b818352600060208085019450826000805b86811015610fa05763ffffffff610ee984610e8d565b1688526001600160a01b03610eff848601610b29565b1684890152604067ffffffffffffffff610f1a828601610eaa565b16908901526060838101356bffffffffffffffffffffffff81168114610f3e578384fd5b6bffffffffffffffffffffffff16908901526080838101359089015260a0808401359089015260c0610f71818501610e8d565b63ffffffff169089015260e0610f8b818a01858301610ea1565b506101a0978801979290920191600101610ed3565b50959695505050505050565b8183526000602080850194508260005b858110156110365763ffffffff80610fd384610e8d565b1688526001600160a01b03610fe9848601610b29565b16888501526040838101359089015260608084013590890152608081611010828601610e8d565b16908901525060a060c0838201828a013750610160968701969190910190600101610fbc565b509495945050505050565b600060c08083018c845260208c8186015260408c8187015260608481880152838c855260e0880190508d945060005b8d8110156110c05763ffffffff8061108788610e8d565b16835285870135868401528061109e868901610e8d565b1685840152508683870184840137610120958601959190910190600101611070565b5087810360808901526110d4818c8e610ec2565b9550505050505082810360a08401526110ee818587610fac565b9c9b505050505050505050505050565b60006020828403121561111057600080fd5b81518015158114610be657600080fd5b634e487b7160e01b600052603260045260246000fd5b60006020828403121561114857600080fd5b610be682610e8d565b60006020828403121561116357600080fd5b610be682610eaa565b8181038181111561030657610306610c7556fea264697066735822122048d833f6c549cc56b0924c5f540e7bf614cf455d54347f2fa98a4fed97ad114a64736f6c63430008130033",
    "sourceMap": "467:2818:24:-:0;;;913:44;;;;;;;;;;1980:113:19;;;;;;;;;;;;;-1:-1:-1;;;1980:113:19;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:19;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:19;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;467:2818:24;;14:127:29;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:29;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:29;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:29;;;2580:26;2531:89;-1:-1:-1;;1335:1:29;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:29;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:29;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:29;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:29:o;:::-;467:2818:24;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "467:2818:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:29;;1162:22;1144:41;;1132:2;1117:18;4444:197:19;1004:187:29;3255:106:19;3342:12;;3255:106;;;1342:25:29;;;1330:2;1315:18;3255:106:19;1196:177:29;5203:256:19;;;;;;:::i;:::-;;:::i;2807:476:24:-;;;;;;:::i;:::-;;:::i;:::-;;3104:91:19;;;3186:2;2253:36:29;;2241:2;2226:18;3104:91:19;2111:184:29;5854:234:19;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:19;3493:7;3519:18;;;;;;;;;;;;3419:125;663:43:24;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2369:102:19;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;503:52:24:-;;551:4;503:52;;3740:189:19;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;561:95:24:-;;614:42;561:95;;;;;-1:-1:-1;;;;;2920:32:29;;;2902:51;;2890:2;2875:18;561:95:24;2756:203:29;2158:98:19;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:22;4581:32:19;719:10:22;4597:7:19;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:22;5356:38:19;5372:4;719:10:22;5387:6:19;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:19;;5203:256;-1:-1:-1;;;;5203:256:19:o;2807:476:24:-;719:10:22;2952:24:24;;;;:10;:24;;;;;;;;2948:83;;;2999:21;;-1:-1:-1;;;2999:21:24;;;;;;;;;;;2948:83;3090:23;3104:8;3090:13;:23::i;:::-;719:10:22;3191:24:24;;;;:10;:24;;;;;:31;;-1:-1:-1;;3191:31:24;3218:4;3191:31;;;3232:44;;3259:16;3186:2:19;3259::24;:16;:::i;:::-;3252:23;;:4;:23;:::i;:::-;3232:5;:44::i;:::-;2807:476;:::o;5854:234:19:-;5942:4;719:10:22;5996:64:19;719:10:22;6012:7:19;6049:10;6021:25;719:10:22;6012:7:19;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:22;6668:4:19;6749:25;719:10:22;6766:7:19;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:19;;5369:2:29;6784:85:19;;;5351:21:29;5408:2;5388:18;;;5381:30;5447:34;5427:18;;;5420:62;-1:-1:-1;;;5498:18:29;;;5491:35;5543:19;;6784:85:19;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:22;3873:28:19;719:10:22;3890:2:19;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:19;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:19;;10550:68;;;;-1:-1:-1;;;10550:68:19;;5775:2:29;10550:68:19;;;5757:21:29;5814:2;5794:18;;;5787:30;5853:34;5833:18;;;5826:62;-1:-1:-1;;;5904:18:29;;;5897:34;5948:19;;10550:68:19;5573:400:29;10550:68:19;-1:-1:-1;;;;;10636:21:19;;10628:68;;;;-1:-1:-1;;;10628:68:19;;6180:2:29;10628:68:19;;;6162:21:29;6219:2;6199:18;;;6192:30;6258:34;6238:18;;;6231:62;-1:-1:-1;;;6309:18:29;;;6302:32;6351:19;;10628:68:19;5978:398:29;10628:68:19;-1:-1:-1;;;;;10707:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:29;;;10758:32:19;;1315:18:29;10758:32:19;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:19;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:19;;6583:2:29;11297:68:19;;;6565:21:29;6622:2;6602:18;;;6595:30;6661:31;6641:18;;;6634:59;6710:18;;11297:68:19;6381:353:29;11297:68:19;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:19;;7544:68;;;;-1:-1:-1;;;7544:68:19;;6941:2:29;7544:68:19;;;6923:21:29;6980:2;6960:18;;;6953:30;7019:34;6999:18;;;6992:62;-1:-1:-1;;;7070:18:29;;;7063:35;7115:19;;7544:68:19;6739:401:29;7544:68:19;-1:-1:-1;;;;;7630:16:19;;7622:64;;;;-1:-1:-1;;;7622:64:19;;7347:2:29;7622:64:19;;;7329:21:29;7386:2;7366:18;;;7359:30;7425:34;7405:18;;;7398:62;-1:-1:-1;;;7476:18:29;;;7469:33;7519:19;;7622:64:19;7145:399:29;7622:64:19;-1:-1:-1;;;;;7768:15:19;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:19;;7751:2:29;7793:72:19;;;7733:21:29;7790:2;7770:18;;;7763:30;7829:34;7809:18;;;7802:62;-1:-1:-1;;;7880:18:29;;;7873:36;7926:19;;7793:72:19;7549:402:29;7793:72:19;-1:-1:-1;;;;;7899:15:19;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:29;;;8114:13:19;;8163:26;;1315:18:29;8163:26:19;;;;;;;8200:37;12073:91;963:1838:24;614:42;1083:26;614:42;1231:30;1275:28;;1317:30;;;;1361;;;;1405:23;;;;1275:8;1405:23;:::i;:::-;1442:25;;;;:8;:25;:::i;:::-;1481;;;;:8;:25;:::i;:::-;1231:285;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1218:298;;1531:5;1526:56;;1559:12;;-1:-1:-1;;;1559:12:24;;;;;;;;;;;1526:56;1630:14;1647:25;;;;:8;:25;:::i;:::-;:32;-1:-1:-1;;1703:1:24;1693:11;;1689:73;;1727:24;;-1:-1:-1;;;1727:24:24;;;;;;;;;;;1689:73;1853:19;1875:25;;;;:8;:25;:::i;:::-;1901:1;1875:28;;;;;;;:::i;:::-;:40;;;:28;;;;;:40;;;;-1:-1:-1;1875:40:24;:::i;:::-;1853:62;;;-1:-1:-1;1925:13:24;1941:25;;;;:8;:25;:::i;:::-;1967:1;1941:28;;;;;;;:::i;:::-;;;;;;:34;;;;;;;;;;:::i;:::-;1925:50;;;-1:-1:-1;1985:12:24;2000:25;;;;:8;:25;:::i;:::-;2026:1;2000:28;;;;;;;:::i;:::-;;;;;;:33;;;;;;;;;;:::i;:::-;1985:48;-1:-1:-1;2096:12:24;2329:1;2320:10;;2316:67;;2353:19;;-1:-1:-1;;;2353:19:24;;;;;;;;;;;2316:67;-1:-1:-1;;;;;2498:20:24;;719:10:22;2498:20:24;2494:78;;2541:20;;-1:-1:-1;;;2541:20:24;;;;;;;;;;;2494:78;2719:11;2680:36;551:4;2680:12;:36;:::i;:::-;:50;2676:119;;;2753:31;;-1:-1:-1;;;2753:31:24;;;;;;;;;;;2676:119;1033:1768;;;;;;;963:1838;:::o;8520:535:19:-;-1:-1:-1;;;;;8603:21:19;;8595:65;;;;-1:-1:-1;;;8595:65:19;;15773:2:29;8595:65:19;;;15755:21:29;15812:2;15792:18;;;15785:30;15851:33;15831:18;;;15824:61;15902:18;;8595:65:19;15571:355:29;8595:65:19;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:19;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1342:25:29;;;8952:37:19;;1315:18:29;8952:37:19;;;;;;;8520:535;;:::o;14:548:29:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:29;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:29:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1711:395::-;1805:6;1858:2;1846:9;1837:7;1833:23;1829:32;1826:52;;;1874:1;1871;1864:12;1826:52;1914:9;1901:23;1947:18;1939:6;1936:30;1933:50;;;1979:1;1976;1969:12;1933:50;2002:22;;2058:3;2040:16;;;2036:26;2033:46;;;2075:1;2072;2065:12;2033:46;2098:2;1711:395;-1:-1:-1;;;1711:395:29:o;2300:186::-;2359:6;2412:2;2400:9;2391:7;2387:23;2383:32;2380:52;;;2428:1;2425;2418:12;2380:52;2451:29;2470:9;2451:29;:::i;2491:260::-;2559:6;2567;2620:2;2608:9;2599:7;2595:23;2591:32;2588:52;;;2636:1;2633;2626:12;2588:52;2659:29;2678:9;2659:29;:::i;:::-;2649:39;;2707:38;2741:2;2730:9;2726:18;2707:38;:::i;:::-;2697:48;;2491:260;;;;;:::o;2964:380::-;3043:1;3039:12;;;;3086;;;3107:61;;3161:4;3153:6;3149:17;3139:27;;3107:61;3214:2;3206:6;3203:14;3183:18;3180:38;3177:161;;3260:10;3255:3;3251:20;3248:1;3241:31;3295:4;3292:1;3285:15;3323:4;3320:1;3313:15;3177:161;;2964:380;;;:::o;3349:127::-;3410:10;3405:3;3401:20;3398:1;3391:31;3441:4;3438:1;3431:15;3465:4;3462:1;3455:15;3481:422;3570:1;3613:5;3570:1;3627:270;3648:7;3638:8;3635:21;3627:270;;;3707:4;3703:1;3699:6;3695:17;3689:4;3686:27;3683:53;;;3716:18;;:::i;:::-;3766:7;3756:8;3752:22;3749:55;;;3786:16;;;;3749:55;3865:22;;;;3825:15;;;;3627:270;;;3631:3;3481:422;;;;;:::o;3908:806::-;3957:5;3987:8;3977:80;;-1:-1:-1;4028:1:29;4042:5;;3977:80;4076:4;4066:76;;-1:-1:-1;4113:1:29;4127:5;;4066:76;4158:4;4176:1;4171:59;;;;4244:1;4239:130;;;;4151:218;;4171:59;4201:1;4192:10;;4215:5;;;4239:130;4276:3;4266:8;4263:17;4260:43;;;4283:18;;:::i;:::-;-1:-1:-1;;4339:1:29;4325:16;;4354:5;;4151:218;;4453:2;4443:8;4440:16;4434:3;4428:4;4425:13;4421:36;4415:2;4405:8;4402:16;4397:2;4391:4;4388:12;4384:35;4381:77;4378:159;;;-1:-1:-1;4490:19:29;;;4522:5;;4378:159;4569:34;4594:8;4588:4;4569:34;:::i;:::-;4639:6;4635:1;4631:6;4627:19;4618:7;4615:32;4612:58;;;4650:18;;:::i;:::-;4688:20;;3908:806;-1:-1:-1;;;3908:806:29:o;4719:140::-;4777:5;4806:47;4847:4;4837:8;4833:19;4827:4;4806:47;:::i;4864:168::-;4937:9;;;4968;;4985:15;;;4979:22;;4965:37;4955:71;;5006:18;;:::i;5037:125::-;5102:9;;;5123:10;;;5120:36;;;5136:18;;:::i;7956:584::-;8083:4;8089:6;8149:11;8136:25;8243:2;8239:7;8228:8;8212:14;8208:29;8204:43;8184:18;8180:68;8170:96;;8262:1;8259;8252:12;8170:96;8289:33;;8341:20;;;-1:-1:-1;8384:18:29;8373:30;;8370:50;;;8416:1;8413;8406:12;8370:50;8449:4;8437:17;;-1:-1:-1;8508:6:29;8496:19;;8480:14;8476:40;8466:51;;8463:71;;;8530:1;8527;8520:12;8463:71;7956:584;;;;;:::o;8545:586::-;8674:4;8680:6;8740:11;8727:25;8834:2;8830:7;8819:8;8803:14;8799:29;8795:43;8775:18;8771:68;8761:96;;8853:1;8850;8843:12;8761:96;8880:33;;8932:20;;;-1:-1:-1;8975:18:29;8964:30;;8961:50;;;9007:1;9004;8997:12;8961:50;9040:4;9028:17;;-1:-1:-1;9099:6:29;9087:19;;9071:14;9067:40;9057:51;;9054:71;;;9121:1;9118;9111:12;9136:586;9265:4;9271:6;9331:11;9318:25;9425:2;9421:7;9410:8;9394:14;9390:29;9386:43;9366:18;9362:68;9352:96;;9444:1;9441;9434:12;9352:96;9471:33;;9523:20;;;-1:-1:-1;9566:18:29;9555:30;;9552:50;;;9598:1;9595;9588:12;9552:50;9631:4;9619:17;;-1:-1:-1;9690:6:29;9678:19;;9662:14;9658:40;9648:51;;9645:71;;;9712:1;9709;9702:12;9727:163;9794:20;;9854:10;9843:22;;9833:33;;9823:61;;9880:1;9877;9870:12;9994:105;10088:4;10081:5;10076:3;10063:30;;;9994:105::o;10104:171::-;10171:20;;10231:18;10220:30;;10210:41;;10200:69;;10265:1;10262;10255:12;10395:1403;10519:6;10514:3;10507:19;10489:3;10545:4;10574:2;10569:3;10565:12;10558:19;;10600:5;10623:1;10644;10654:1119;10670:6;10665:3;10662:15;10654:1119;;;10766:10;10739:25;10757:6;10739:25;:::i;:::-;10735:42;10723:55;;-1:-1:-1;;;;;10816:35:29;10835:15;;;10816:35;:::i;:::-;10812:61;10807:2;10802:3;10798:12;10791:83;10897:4;10975:18;10939:34;10969:2;10961:6;10957:15;10939:34;:::i;:::-;10935:59;10921:12;;;10914:81;11018:4;11063:15;;;11050:29;11127:26;11114:40;;11102:53;;11092:81;;11169:1;11166;11159:12;11092:81;10356:26;10345:38;11213:12;;;10333:51;11249:4;11300:15;;;11287:29;11273:12;;;11266:51;11340:4;11391:15;;;11378:29;11364:12;;;11357:51;11431:4;11468:34;11486:15;;;11468:34;:::i;:::-;9971:10;9960:22;11547:12;;;9948:35;11583:4;11600:64;11651:12;;;11634:15;;;11600:64;:::i;:::-;-1:-1:-1;11687:6:29;11713:12;;;;11748:15;;;;;10696:1;10687:11;10654:1119;;;-1:-1:-1;11789:3:29;;10395:1403;-1:-1:-1;;;;;;10395:1403:29:o;11803:987::-;11927:6;11922:3;11915:19;11897:3;11953:4;11982:2;11977:3;11973:12;11966:19;;12008:5;12031:1;12041:724;12055:6;12052:1;12049:13;12041:724;;;12114:10;12180:2;12153:25;12171:6;12153:25;:::i;:::-;12149:34;12137:47;;-1:-1:-1;;;;;12222:35:29;12241:15;;;12222:35;:::i;:::-;12218:61;12204:12;;;12197:83;12303:4;12354:15;;;12341:29;12327:12;;;12320:51;12394:4;12445:15;;;12432:29;12418:12;;;12411:51;12485:4;12563:2;12527:34;12545:15;;;12527:34;:::i;:::-;12523:43;12509:12;;;12502:65;-1:-1:-1;12590:4:29;12651;12634:15;;;12620:12;;;12607:49;-1:-1:-1;12679:6:29;12705:12;;;;12740:15;;;;;12077:1;12070:9;12041:724;;;-1:-1:-1;12781:3:29;;11803:987;-1:-1:-1;;;;;11803:987:29:o;12795:1846::-;13413:4;13442:3;13483:2;13472:9;13468:18;13513:6;13502:9;13495:25;13539:2;13577:6;13572:2;13561:9;13557:18;13550:34;13603:2;13641:6;13636:2;13625:9;13621:18;13614:34;13667:2;13705;13700;13689:9;13685:18;13678:30;13728:6;13758;13750;13743:22;13796:3;13785:9;13781:19;13774:26;;13823:6;13809:20;;13847:1;13857:454;13871:6;13868:1;13865:13;13857:454;;;13930:10;13996:2;13969:25;13987:6;13969:25;:::i;:::-;13965:34;13960:3;13953:47;14059:2;14051:6;14047:15;14034:29;14029:2;14024:3;14020:12;14013:51;14138:2;14102:34;14132:2;14124:6;14120:15;14102:34;:::i;:::-;14098:43;14093:2;14088:3;14084:12;14077:65;;14199:2;14194;14186:6;14182:15;14177:2;14172:3;14168:12;14155:47;14225:6;14286:15;;;;14251:12;;;;;13893:1;13886:9;13857:454;;;13861:3;14357:9;14352:3;14348:19;14342:3;14331:9;14327:19;14320:48;14391:82;14469:3;14461:6;14453;14391:82;:::i;:::-;14377:96;;;;;;;14522:9;14514:6;14510:22;14504:3;14493:9;14489:19;14482:51;14550:85;14628:6;14620;14612;14550:85;:::i;:::-;14542:93;12795:1846;-1:-1:-1;;;;;;;;;;;;12795:1846:29:o;14646:277::-;14713:6;14766:2;14754:9;14745:7;14741:23;14737:32;14734:52;;;14782:1;14779;14772:12;14734:52;14814:9;14808:16;14867:5;14860:13;14853:21;14846:5;14843:32;14833:60;;14889:1;14886;14879:12;14928:127;14989:10;14984:3;14980:20;14977:1;14970:31;15020:4;15017:1;15010:15;15044:4;15041:1;15034:15;15060:184;15118:6;15171:2;15159:9;15150:7;15146:23;15142:32;15139:52;;;15187:1;15184;15177:12;15139:52;15210:28;15228:9;15210:28;:::i;15249:184::-;15307:6;15360:2;15348:9;15339:7;15335:23;15331:32;15328:52;;;15376:1;15373;15366:12;15328:52;15399:28;15417:9;15399:28;:::i;15438:128::-;15505:9;;;15526:11;;;15523:37;;;15540:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ACCOUNT_AGE_THRESHOLD()": "a7f92199",
    "AXIOM_V1_QUERY_GOERLI_ADDR()": "f623265b",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "claimTokens((bytes32,bytes32,bytes32,(uint32,bytes32,uint32,bytes32[6])[],(uint32,address,uint64,uint96,bytes32,bytes32,uint32,bytes32[6])[],(uint32,address,uint256,uint256,uint32,bytes32[6])[]))": "2a48ff7f",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "hasClaimed(address)": "73b2e80e",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccountAgeBelowThresholdError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyClaimedError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidDataLengthError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidNonceError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSenderError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ProofError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACCOUNT_AGE_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AXIOM_V1_QUERY_GOERLI_ADDR\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"keccakBlockResponse\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"keccakAccountResponse\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"keccakStorageResponse\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"leafIdx\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[6]\",\"name\":\"proof\",\"type\":\"bytes32[6]\"}],\"internalType\":\"struct IAxiomV1Query.BlockResponse[]\",\"name\":\"blockResponses\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"bytes32\",\"name\":\"storageRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"codeHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"leafIdx\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[6]\",\"name\":\"proof\",\"type\":\"bytes32[6]\"}],\"internalType\":\"struct IAxiomV1Query.AccountResponse[]\",\"name\":\"accountResponses\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"blockNumber\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"leafIdx\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[6]\",\"name\":\"proof\",\"type\":\"bytes32[6]\"}],\"internalType\":\"struct IAxiomV1Query.StorageResponse[]\",\"name\":\"storageResponses\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ResponseStruct\",\"name\":\"response\",\"type\":\"tuple\"}],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Distributor.sol\":\"Distributor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/Distributor.sol\":{\"keccak256\":\"0x2f9ffd577c173a347ba879fe6627ebfe702d8d0d3b2856eaa67b48b3787d46ca\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://55bf70b060d5bb44f9c3720cb3484f4e786995078c9c674d9c7206268ed3200b\",\"dweb:/ipfs/QmbecEKY6vkvSzXRVojXnDXZEG1fAZZshmEfpNySEnke9m\"]},\"src/interfaces/IAxiomV1Query.sol\":{\"keccak256\":\"0x44efe4f9ee6dc3fd6a74808f8069eba0e1b7d8497f200b9f3b023b1681bb2739\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f69e6b282c06a13945abaa97cc74263204e780aba0d61019b45b6563257ed88b\",\"dweb:/ipfs/QmVEhVghA1YgebbX4Z3LZwJWYqk7X8Pi6PLZGGb3NXsJQF\"]},\"src/interfaces/core/IAxiomV1Verifier.sol\":{\"keccak256\":\"0x3ddcbf4783193e299e6e91acfd6be520b9cf334372a3b4e16d2296ac1feff3bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22a83d1b4ed87b55a08d0a6a598534d88a992e533a0f33fdc8bee9a80791462c\",\"dweb:/ipfs/QmZohmVjoRTntEC6WBbkxS5nHEBYzLJnrTaFi9LXwU9Dy3\"]},\"src/libraries/configuration/AxiomV1Configuration.sol\":{\"keccak256\":\"0x12cc3fd06322d5180ba8f095ca9c5c710606e823427cd590ae30b3cd6a77f8f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5a3ec66b90d22225bb8f91dc715f97372fe805ac0230a4096251b88b4f3d5a3\",\"dweb:/ipfs/QmZwX2Cfn4yPTezoHoJWQmuNtGa6v9G1UEzAVtVF4CGASd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AccountAgeBelowThresholdError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyClaimedError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidDataLengthError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidNonceError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidSenderError"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ProofError"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ACCOUNT_AGE_THRESHOLD",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "AXIOM_V1_QUERY_GOERLI_ADDR",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ResponseStruct",
              "name": "response",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "keccakBlockResponse",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "keccakAccountResponse",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "keccakStorageResponse",
                  "type": "bytes32"
                },
                {
                  "internalType": "struct IAxiomV1Query.BlockResponse[]",
                  "name": "blockResponses",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "blockNumber",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "blockHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "leafIdx",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes32[6]",
                      "name": "proof",
                      "type": "bytes32[6]"
                    }
                  ]
                },
                {
                  "internalType": "struct IAxiomV1Query.AccountResponse[]",
                  "name": "accountResponses",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "blockNumber",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address",
                      "name": "addr",
                      "type": "address"
                    },
                    {
                      "internalType": "uint64",
                      "name": "nonce",
                      "type": "uint64"
                    },
                    {
                      "internalType": "uint96",
                      "name": "balance",
                      "type": "uint96"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "storageRoot",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "codeHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint32",
                      "name": "leafIdx",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes32[6]",
                      "name": "proof",
                      "type": "bytes32[6]"
                    }
                  ]
                },
                {
                  "internalType": "struct IAxiomV1Query.StorageResponse[]",
                  "name": "storageResponses",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "blockNumber",
                      "type": "uint32"
                    },
                    {
                      "internalType": "address",
                      "name": "addr",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "slot",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint32",
                      "name": "leafIdx",
                      "type": "uint32"
                    },
                    {
                      "internalType": "bytes32[6]",
                      "name": "proof",
                      "type": "bytes32[6]"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimTokens"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasClaimed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Distributor.sol": "Distributor"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/Distributor.sol": {
        "keccak256": "0x2f9ffd577c173a347ba879fe6627ebfe702d8d0d3b2856eaa67b48b3787d46ca",
        "urls": [
          "bzz-raw://55bf70b060d5bb44f9c3720cb3484f4e786995078c9c674d9c7206268ed3200b",
          "dweb:/ipfs/QmbecEKY6vkvSzXRVojXnDXZEG1fAZZshmEfpNySEnke9m"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IAxiomV1Query.sol": {
        "keccak256": "0x44efe4f9ee6dc3fd6a74808f8069eba0e1b7d8497f200b9f3b023b1681bb2739",
        "urls": [
          "bzz-raw://f69e6b282c06a13945abaa97cc74263204e780aba0d61019b45b6563257ed88b",
          "dweb:/ipfs/QmVEhVghA1YgebbX4Z3LZwJWYqk7X8Pi6PLZGGb3NXsJQF"
        ],
        "license": "MIT"
      },
      "src/interfaces/core/IAxiomV1Verifier.sol": {
        "keccak256": "0x3ddcbf4783193e299e6e91acfd6be520b9cf334372a3b4e16d2296ac1feff3bb",
        "urls": [
          "bzz-raw://22a83d1b4ed87b55a08d0a6a598534d88a992e533a0f33fdc8bee9a80791462c",
          "dweb:/ipfs/QmZohmVjoRTntEC6WBbkxS5nHEBYzLJnrTaFi9LXwU9Dy3"
        ],
        "license": "MIT"
      },
      "src/libraries/configuration/AxiomV1Configuration.sol": {
        "keccak256": "0x12cc3fd06322d5180ba8f095ca9c5c710606e823427cd590ae30b3cd6a77f8f3",
        "urls": [
          "bzz-raw://e5a3ec66b90d22225bb8f91dc715f97372fe805ac0230a4096251b88b4f3d5a3",
          "dweb:/ipfs/QmZwX2Cfn4yPTezoHoJWQmuNtGa6v9G1UEzAVtVF4CGASd"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Distributor.sol",
    "id": 43846,
    "exportedSymbols": {
      "BLOCK_BATCH_DEPTH": [
        44226
      ],
      "Context": [
        43603
      ],
      "Distributor": [
        43845
      ],
      "ERC20": [
        43478
      ],
      "IAxiomV1Query": [
        44165
      ],
      "IAxiomV1Verifier": [
        44218
      ],
      "IERC20": [
        43556
      ],
      "IERC20Metadata": [
        43581
      ],
      "QUERY_MERKLE_DEPTH": [
        43851
      ],
      "ResponseStruct": [
        43665
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:3247:24",
    "nodes": [
      {
        "id": 43644,
        "nodeType": "PragmaDirective",
        "src": "39:24:24",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 43645,
        "nodeType": "ImportDirective",
        "src": "65:71:24",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43846,
        "sourceUnit": 43479,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43646,
        "nodeType": "ImportDirective",
        "src": "137:40:24",
        "nodes": [],
        "absolutePath": "src/interfaces/IAxiomV1Query.sol",
        "file": "./interfaces/IAxiomV1Query.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43846,
        "sourceUnit": 44166,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43665,
        "nodeType": "StructDefinition",
        "src": "179:286:24",
        "nodes": [],
        "canonicalName": "ResponseStruct",
        "members": [
          {
            "constant": false,
            "id": 43648,
            "mutability": "mutable",
            "name": "keccakBlockResponse",
            "nameLocation": "215:19:24",
            "nodeType": "VariableDeclaration",
            "scope": 43665,
            "src": "207:27:24",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 43647,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "207:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43650,
            "mutability": "mutable",
            "name": "keccakAccountResponse",
            "nameLocation": "248:21:24",
            "nodeType": "VariableDeclaration",
            "scope": 43665,
            "src": "240:29:24",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 43649,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "240:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43652,
            "mutability": "mutable",
            "name": "keccakStorageResponse",
            "nameLocation": "283:21:24",
            "nodeType": "VariableDeclaration",
            "scope": 43665,
            "src": "275:29:24",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 43651,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "275:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43656,
            "mutability": "mutable",
            "name": "blockResponses",
            "nameLocation": "340:14:24",
            "nodeType": "VariableDeclaration",
            "scope": 43665,
            "src": "310:44:24",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_BlockResponse_$43910_storage_$dyn_storage_ptr",
              "typeString": "struct IAxiomV1Query.BlockResponse[]"
            },
            "typeName": {
              "baseType": {
                "id": 43654,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 43653,
                  "name": "IAxiomV1Query.BlockResponse",
                  "nameLocations": [
                    "310:13:24",
                    "324:13:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43910,
                  "src": "310:27:24"
                },
                "referencedDeclaration": 43910,
                "src": "310:27:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BlockResponse_$43910_storage_ptr",
                  "typeString": "struct IAxiomV1Query.BlockResponse"
                }
              },
              "id": 43655,
              "nodeType": "ArrayTypeName",
              "src": "310:29:24",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_BlockResponse_$43910_storage_$dyn_storage_ptr",
                "typeString": "struct IAxiomV1Query.BlockResponse[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43660,
            "mutability": "mutable",
            "name": "accountResponses",
            "nameLocation": "392:16:24",
            "nodeType": "VariableDeclaration",
            "scope": 43665,
            "src": "360:48:24",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_AccountResponse_$43929_storage_$dyn_storage_ptr",
              "typeString": "struct IAxiomV1Query.AccountResponse[]"
            },
            "typeName": {
              "baseType": {
                "id": 43658,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 43657,
                  "name": "IAxiomV1Query.AccountResponse",
                  "nameLocations": [
                    "360:13:24",
                    "374:15:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43929,
                  "src": "360:29:24"
                },
                "referencedDeclaration": 43929,
                "src": "360:29:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AccountResponse_$43929_storage_ptr",
                  "typeString": "struct IAxiomV1Query.AccountResponse"
                }
              },
              "id": 43659,
              "nodeType": "ArrayTypeName",
              "src": "360:31:24",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_AccountResponse_$43929_storage_$dyn_storage_ptr",
                "typeString": "struct IAxiomV1Query.AccountResponse[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 43664,
            "mutability": "mutable",
            "name": "storageResponses",
            "nameLocation": "446:16:24",
            "nodeType": "VariableDeclaration",
            "scope": 43665,
            "src": "414:48:24",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_StorageResponse_$43944_storage_$dyn_storage_ptr",
              "typeString": "struct IAxiomV1Query.StorageResponse[]"
            },
            "typeName": {
              "baseType": {
                "id": 43662,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 43661,
                  "name": "IAxiomV1Query.StorageResponse",
                  "nameLocations": [
                    "414:13:24",
                    "428:15:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43944,
                  "src": "414:29:24"
                },
                "referencedDeclaration": 43944,
                "src": "414:29:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_StorageResponse_$43944_storage_ptr",
                  "typeString": "struct IAxiomV1Query.StorageResponse"
                }
              },
              "id": 43663,
              "nodeType": "ArrayTypeName",
              "src": "414:31:24",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_StorageResponse_$43944_storage_$dyn_storage_ptr",
                "typeString": "struct IAxiomV1Query.StorageResponse[]"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "ResponseStruct",
        "nameLocation": "186:14:24",
        "scope": 43846,
        "visibility": "public"
      },
      {
        "id": 43845,
        "nodeType": "ContractDefinition",
        "src": "467:2818:24",
        "nodes": [
          {
            "id": 43670,
            "nodeType": "VariableDeclaration",
            "src": "503:52:24",
            "nodes": [],
            "constant": true,
            "functionSelector": "a7f92199",
            "mutability": "constant",
            "name": "ACCOUNT_AGE_THRESHOLD",
            "nameLocation": "527:21:24",
            "scope": 43845,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43668,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "503:7:24",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35303030",
              "id": 43669,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "551:4:24",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5000_by_1",
                "typeString": "int_const 5000"
              },
              "value": "5000"
            },
            "visibility": "public"
          },
          {
            "id": 43673,
            "nodeType": "VariableDeclaration",
            "src": "561:95:24",
            "nodes": [],
            "constant": true,
            "functionSelector": "f623265b",
            "mutability": "constant",
            "name": "AXIOM_V1_QUERY_GOERLI_ADDR",
            "nameLocation": "585:26:24",
            "scope": 43845,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43671,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "561:7:24",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834466232303231343063353331393130364631353730366231413639453434316339353336333036",
              "id": 43672,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "614:42:24",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x4Fb202140c5319106F15706b1A69E441c9536306"
            },
            "visibility": "public"
          },
          {
            "id": 43677,
            "nodeType": "VariableDeclaration",
            "src": "663:43:24",
            "nodes": [],
            "constant": false,
            "functionSelector": "73b2e80e",
            "mutability": "mutable",
            "name": "hasClaimed",
            "nameLocation": "696:10:24",
            "scope": 43845,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 43676,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 43674,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "672:7:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "663:25:24",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 43675,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "683:4:24",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 43679,
            "nodeType": "ErrorDefinition",
            "src": "713:19:24",
            "nodes": [],
            "errorSelector": "ce516d26",
            "name": "ProofError",
            "nameLocation": "719:10:24",
            "parameters": {
              "id": 43678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:2:24"
            }
          },
          {
            "id": 43681,
            "nodeType": "ErrorDefinition",
            "src": "737:28:24",
            "nodes": [],
            "errorSelector": "5f1e377d",
            "name": "AlreadyClaimedError",
            "nameLocation": "743:19:24",
            "parameters": {
              "id": 43680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "762:2:24"
            }
          },
          {
            "id": 43683,
            "nodeType": "ErrorDefinition",
            "src": "770:27:24",
            "nodes": [],
            "errorSelector": "bd2c8982",
            "name": "InvalidSenderError",
            "nameLocation": "776:18:24",
            "parameters": {
              "id": 43682,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:2:24"
            }
          },
          {
            "id": 43685,
            "nodeType": "ErrorDefinition",
            "src": "802:31:24",
            "nodes": [],
            "errorSelector": "797585b2",
            "name": "InvalidDataLengthError",
            "nameLocation": "808:22:24",
            "parameters": {
              "id": 43684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "830:2:24"
            }
          },
          {
            "id": 43687,
            "nodeType": "ErrorDefinition",
            "src": "838:26:24",
            "nodes": [],
            "errorSelector": "c255b302",
            "name": "InvalidNonceError",
            "nameLocation": "844:17:24",
            "parameters": {
              "id": 43686,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "861:2:24"
            }
          },
          {
            "id": 43689,
            "nodeType": "ErrorDefinition",
            "src": "869:38:24",
            "nodes": [],
            "errorSelector": "9a92d45b",
            "name": "AccountAgeBelowThresholdError",
            "nameLocation": "875:29:24",
            "parameters": {
              "id": 43688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "904:2:24"
            }
          },
          {
            "id": 43697,
            "nodeType": "FunctionDefinition",
            "src": "913:44:24",
            "nodes": [],
            "body": {
              "id": 43696,
              "nodeType": "Block",
              "src": "955:2:24",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4469737472696275746f72",
                    "id": 43692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "933:13:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a19d0db335544d3c3ec35c34b9b35a51bd4861f7162de07d5af409611794db04",
                      "typeString": "literal_string \"Distributor\""
                    },
                    "value": "Distributor"
                  },
                  {
                    "hexValue": "445354",
                    "id": 43693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "948:5:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_6cb0632db18d31ab872b954d9a6159b17fe511c1eafc182cb107729b891c0c3a",
                      "typeString": "literal_string \"DST\""
                    },
                    "value": "DST"
                  }
                ],
                "id": 43694,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 43691,
                  "name": "ERC20",
                  "nameLocations": [
                    "927:5:24"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43478,
                  "src": "927:5:24"
                },
                "nodeType": "ModifierInvocation",
                "src": "927:27:24"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 43690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "924:2:24"
            },
            "returnParameters": {
              "id": 43695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "955:0:24"
            },
            "scope": 43845,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 43806,
            "nodeType": "FunctionDefinition",
            "src": "963:1838:24",
            "nodes": [],
            "body": {
              "id": 43805,
              "nodeType": "Block",
              "src": "1033:1768:24",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    43705
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43705,
                      "mutability": "mutable",
                      "name": "axiomV1Query",
                      "nameLocation": "1097:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 43805,
                      "src": "1083:26:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAxiomV1Query_$44165",
                        "typeString": "contract IAxiomV1Query"
                      },
                      "typeName": {
                        "id": 43704,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 43703,
                          "name": "IAxiomV1Query",
                          "nameLocations": [
                            "1083:13:24"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 44165,
                          "src": "1083:13:24"
                        },
                        "referencedDeclaration": 44165,
                        "src": "1083:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAxiomV1Query_$44165",
                          "typeString": "contract IAxiomV1Query"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43709,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 43707,
                        "name": "AXIOM_V1_QUERY_GOERLI_ADDR",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43673,
                        "src": "1126:26:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 43706,
                      "name": "IAxiomV1Query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44165,
                      "src": "1112:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IAxiomV1Query_$44165_$",
                        "typeString": "type(contract IAxiomV1Query)"
                      }
                    },
                    "id": 43708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:41:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAxiomV1Query_$44165",
                      "typeString": "contract IAxiomV1Query"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1083:70:24"
                },
                {
                  "assignments": [
                    43711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43711,
                      "mutability": "mutable",
                      "name": "valid",
                      "nameLocation": "1223:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 43805,
                      "src": "1218:10:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 43710,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1218:4:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43727,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 43714,
                          "name": "response",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43700,
                          "src": "1275:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                            "typeString": "struct ResponseStruct calldata"
                          }
                        },
                        "id": 43715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1284:19:24",
                        "memberName": "keccakBlockResponse",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43648,
                        "src": "1275:28:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 43716,
                          "name": "response",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43700,
                          "src": "1317:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                            "typeString": "struct ResponseStruct calldata"
                          }
                        },
                        "id": 43717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1326:21:24",
                        "memberName": "keccakAccountResponse",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43650,
                        "src": "1317:30:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 43718,
                          "name": "response",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43700,
                          "src": "1361:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                            "typeString": "struct ResponseStruct calldata"
                          }
                        },
                        "id": 43719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1370:21:24",
                        "memberName": "keccakStorageResponse",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43652,
                        "src": "1361:30:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 43720,
                          "name": "response",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43700,
                          "src": "1405:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                            "typeString": "struct ResponseStruct calldata"
                          }
                        },
                        "id": 43721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1414:14:24",
                        "memberName": "blockResponses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43656,
                        "src": "1405:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BlockResponse_$43910_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAxiomV1Query.BlockResponse calldata[] calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 43722,
                          "name": "response",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43700,
                          "src": "1442:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                            "typeString": "struct ResponseStruct calldata"
                          }
                        },
                        "id": 43723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1451:16:24",
                        "memberName": "accountResponses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43660,
                        "src": "1442:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AccountResponse_$43929_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAxiomV1Query.AccountResponse calldata[] calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 43724,
                          "name": "response",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43700,
                          "src": "1481:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                            "typeString": "struct ResponseStruct calldata"
                          }
                        },
                        "id": 43725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1490:16:24",
                        "memberName": "storageResponses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43664,
                        "src": "1481:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_StorageResponse_$43944_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAxiomV1Query.StorageResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_BlockResponse_$43910_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAxiomV1Query.BlockResponse calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_AccountResponse_$43929_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAxiomV1Query.AccountResponse calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_StorageResponse_$43944_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAxiomV1Query.StorageResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 43712,
                        "name": "axiomV1Query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43705,
                        "src": "1231:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAxiomV1Query_$44165",
                          "typeString": "contract IAxiomV1Query"
                        }
                      },
                      "id": 43713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1244:17:24",
                      "memberName": "areResponsesValid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44164,
                      "src": "1231:30:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$_t_array$_t_struct$_BlockResponse_$43910_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_AccountResponse_$43929_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_StorageResponse_$43944_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (bytes32,bytes32,bytes32,struct IAxiomV1Query.BlockResponse memory[] memory,struct IAxiomV1Query.AccountResponse memory[] memory,struct IAxiomV1Query.StorageResponse memory[] memory) view external returns (bool)"
                      }
                    },
                    "id": 43726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1231:285:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1218:298:24"
                },
                {
                  "condition": {
                    "id": 43729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1530:6:24",
                    "subExpression": {
                      "id": 43728,
                      "name": "valid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43711,
                      "src": "1531:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43734,
                  "nodeType": "IfStatement",
                  "src": "1526:56:24",
                  "trueBody": {
                    "id": 43733,
                    "nodeType": "Block",
                    "src": "1538:44:24",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 43730,
                            "name": "ProofError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43679,
                            "src": "1559:10:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 43731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1559:12:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43732,
                        "nodeType": "RevertStatement",
                        "src": "1552:19:24"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    43736
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43736,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "1638:6:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 43805,
                      "src": "1630:14:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43735,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1630:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43740,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 43737,
                        "name": "response",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43700,
                        "src": "1647:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                          "typeString": "struct ResponseStruct calldata"
                        }
                      },
                      "id": 43738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1656:16:24",
                      "memberName": "accountResponses",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43660,
                      "src": "1647:25:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AccountResponse_$43929_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct IAxiomV1Query.AccountResponse calldata[] calldata"
                      }
                    },
                    "id": 43739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1673:6:24",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1647:32:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1630:49:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 43741,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43736,
                      "src": "1693:6:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 43742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1703:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1693:11:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43748,
                  "nodeType": "IfStatement",
                  "src": "1689:73:24",
                  "trueBody": {
                    "id": 43747,
                    "nodeType": "Block",
                    "src": "1706:56:24",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 43744,
                            "name": "InvalidDataLengthError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43685,
                            "src": "1727:22:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 43745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1727:24:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43746,
                        "nodeType": "RevertStatement",
                        "src": "1720:31:24"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    43750
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43750,
                      "mutability": "mutable",
                      "name": "blockNumber",
                      "nameLocation": "1861:11:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 43805,
                      "src": "1853:19:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43749,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1853:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43756,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 43751,
                          "name": "response",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43700,
                          "src": "1875:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                            "typeString": "struct ResponseStruct calldata"
                          }
                        },
                        "id": 43752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1884:16:24",
                        "memberName": "accountResponses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43660,
                        "src": "1875:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AccountResponse_$43929_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAxiomV1Query.AccountResponse calldata[] calldata"
                        }
                      },
                      "id": 43754,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1901:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1875:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AccountResponse_$43929_calldata_ptr",
                        "typeString": "struct IAxiomV1Query.AccountResponse calldata"
                      }
                    },
                    "id": 43755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1904:11:24",
                    "memberName": "blockNumber",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43912,
                    "src": "1875:40:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1853:62:24"
                },
                {
                  "assignments": [
                    43758
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43758,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "1933:5:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 43805,
                      "src": "1925:13:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43757,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1925:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43764,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 43759,
                          "name": "response",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43700,
                          "src": "1941:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                            "typeString": "struct ResponseStruct calldata"
                          }
                        },
                        "id": 43760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1950:16:24",
                        "memberName": "accountResponses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43660,
                        "src": "1941:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AccountResponse_$43929_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAxiomV1Query.AccountResponse calldata[] calldata"
                        }
                      },
                      "id": 43762,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1967:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1941:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AccountResponse_$43929_calldata_ptr",
                        "typeString": "struct IAxiomV1Query.AccountResponse calldata"
                      }
                    },
                    "id": 43763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1970:5:24",
                    "memberName": "nonce",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43916,
                    "src": "1941:34:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1925:50:24"
                },
                {
                  "assignments": [
                    43766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43766,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1993:4:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 43805,
                      "src": "1985:12:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 43765,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1985:7:24",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43772,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "expression": {
                          "id": 43767,
                          "name": "response",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43700,
                          "src": "2000:8:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                            "typeString": "struct ResponseStruct calldata"
                          }
                        },
                        "id": 43768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2009:16:24",
                        "memberName": "accountResponses",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43660,
                        "src": "2000:25:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AccountResponse_$43929_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IAxiomV1Query.AccountResponse calldata[] calldata"
                        }
                      },
                      "id": 43770,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 43769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2026:1:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2000:28:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AccountResponse_$43929_calldata_ptr",
                        "typeString": "struct IAxiomV1Query.AccountResponse calldata"
                      }
                    },
                    "id": 43771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2029:4:24",
                    "memberName": "addr",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43914,
                    "src": "2000:33:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1985:48:24"
                },
                {
                  "assignments": [
                    43774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 43774,
                      "mutability": "mutable",
                      "name": "currentBlock",
                      "nameLocation": "2081:12:24",
                      "nodeType": "VariableDeclaration",
                      "scope": 43805,
                      "src": "2073:20:24",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 43773,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2073:7:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 43777,
                  "initialValue": {
                    "expression": {
                      "id": 43775,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "2096:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 43776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2102:6:24",
                    "memberName": "number",
                    "nodeType": "MemberAccess",
                    "src": "2096:12:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2073:35:24"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 43778,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43758,
                      "src": "2320:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 43779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2329:1:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2320:10:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43785,
                  "nodeType": "IfStatement",
                  "src": "2316:67:24",
                  "trueBody": {
                    "id": 43784,
                    "nodeType": "Block",
                    "src": "2332:51:24",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 43781,
                            "name": "InvalidNonceError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43687,
                            "src": "2353:17:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 43782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2353:19:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43783,
                        "nodeType": "RevertStatement",
                        "src": "2346:26:24"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 43789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 43786,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43766,
                      "src": "2498:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43787,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43593,
                        "src": "2506:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 43788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2506:12:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2498:20:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43794,
                  "nodeType": "IfStatement",
                  "src": "2494:78:24",
                  "trueBody": {
                    "id": 43793,
                    "nodeType": "Block",
                    "src": "2520:52:24",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 43790,
                            "name": "InvalidSenderError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43683,
                            "src": "2541:18:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 43791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2541:20:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43792,
                        "nodeType": "RevertStatement",
                        "src": "2534:27:24"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 43799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 43797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 43795,
                        "name": "currentBlock",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43774,
                        "src": "2680:12:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 43796,
                        "name": "ACCOUNT_AGE_THRESHOLD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43670,
                        "src": "2695:21:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2680:36:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 43798,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43750,
                      "src": "2719:11:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2680:50:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43804,
                  "nodeType": "IfStatement",
                  "src": "2676:119:24",
                  "trueBody": {
                    "id": 43803,
                    "nodeType": "Block",
                    "src": "2732:63:24",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 43800,
                            "name": "AccountAgeBelowThresholdError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43689,
                            "src": "2753:29:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 43801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2753:31:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43802,
                        "nodeType": "RevertStatement",
                        "src": "2746:38:24"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_validateData",
            "nameLocation": "972:13:24",
            "parameters": {
              "id": 43701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43700,
                  "mutability": "mutable",
                  "name": "response",
                  "nameLocation": "1010:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 43806,
                  "src": "986:32:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                    "typeString": "struct ResponseStruct"
                  },
                  "typeName": {
                    "id": 43699,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43698,
                      "name": "ResponseStruct",
                      "nameLocations": [
                        "986:14:24"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43665,
                      "src": "986:14:24"
                    },
                    "referencedDeclaration": 43665,
                    "src": "986:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResponseStruct_$43665_storage_ptr",
                      "typeString": "struct ResponseStruct"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:34:24"
            },
            "returnParameters": {
              "id": 43702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1033:0:24"
            },
            "scope": 43845,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 43844,
            "nodeType": "FunctionDefinition",
            "src": "2807:476:24",
            "nodes": [],
            "body": {
              "id": 43843,
              "nodeType": "Block",
              "src": "2871:412:24",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 43812,
                      "name": "hasClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43677,
                      "src": "2952:10:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 43815,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 43813,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43593,
                        "src": "2963:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 43814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2963:12:24",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2952:24:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43820,
                  "nodeType": "IfStatement",
                  "src": "2948:83:24",
                  "trueBody": {
                    "id": 43819,
                    "nodeType": "Block",
                    "src": "2978:53:24",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 43816,
                            "name": "AlreadyClaimedError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43681,
                            "src": "2999:19:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 43817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2999:21:24",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43818,
                        "nodeType": "RevertStatement",
                        "src": "2992:28:24"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 43822,
                        "name": "response",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43809,
                        "src": "3104:8:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                          "typeString": "struct ResponseStruct calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                          "typeString": "struct ResponseStruct calldata"
                        }
                      ],
                      "id": 43821,
                      "name": "_validateData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43806,
                      "src": "3090:13:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ResponseStruct_$43665_calldata_ptr_$returns$__$",
                        "typeString": "function (struct ResponseStruct calldata) view"
                      }
                    },
                    "id": 43823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3090:23:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43824,
                  "nodeType": "ExpressionStatement",
                  "src": "3090:23:24"
                },
                {
                  "expression": {
                    "id": 43830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 43825,
                        "name": "hasClaimed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43677,
                        "src": "3191:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 43828,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43826,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43593,
                          "src": "3202:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 43827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3202:12:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3191:24:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 43829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3218:4:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3191:31:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 43831,
                  "nodeType": "ExpressionStatement",
                  "src": "3191:31:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 43833,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43593,
                          "src": "3238:10:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 43834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3238:12:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 43840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "35303030",
                          "id": 43835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3252:4:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5000_by_1",
                            "typeString": "int_const 5000"
                          },
                          "value": "5000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 43839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 43836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3259:2:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 43837,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42966,
                              "src": "3265:8:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 43838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3265:10:24",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "3259:16:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3252:23:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 43832,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43295,
                      "src": "3232:5:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 43841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3232:44:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43842,
                  "nodeType": "ExpressionStatement",
                  "src": "3232:44:24"
                }
              ]
            },
            "functionSelector": "2a48ff7f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimTokens",
            "nameLocation": "2816:11:24",
            "parameters": {
              "id": 43810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43809,
                  "mutability": "mutable",
                  "name": "response",
                  "nameLocation": "2852:8:24",
                  "nodeType": "VariableDeclaration",
                  "scope": 43844,
                  "src": "2828:32:24",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResponseStruct_$43665_calldata_ptr",
                    "typeString": "struct ResponseStruct"
                  },
                  "typeName": {
                    "id": 43808,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43807,
                      "name": "ResponseStruct",
                      "nameLocations": [
                        "2828:14:24"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43665,
                      "src": "2828:14:24"
                    },
                    "referencedDeclaration": 43665,
                    "src": "2828:14:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResponseStruct_$43665_storage_ptr",
                      "typeString": "struct ResponseStruct"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2827:34:24"
            },
            "returnParameters": {
              "id": 43811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2871:0:24"
            },
            "scope": 43845,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 43666,
              "name": "ERC20",
              "nameLocations": [
                "491:5:24"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43478,
              "src": "491:5:24"
            },
            "id": 43667,
            "nodeType": "InheritanceSpecifier",
            "src": "491:5:24"
          }
        ],
        "canonicalName": "Distributor",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          43845,
          43478,
          43581,
          43556,
          43603
        ],
        "name": "Distributor",
        "nameLocation": "476:11:24",
        "scope": 43846,
        "usedErrors": [
          43679,
          43681,
          43683,
          43685,
          43687,
          43689
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 24
}